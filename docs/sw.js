const CACHE_NAME="cpm-cache-v0.2.0",urlsToCache=["index.html","icons/icon-192x192.png","icons/icon-512x512.png"];self.addEventListener("install",(e=>{console.log(`Service Worker: Installing ${CACHE_NAME}...`),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log(`Service Worker: Caching app shell into ${CACHE_NAME}`),e.addAll(urlsToCache)))).then((()=>(console.log(`Service Worker: App shell for ${CACHE_NAME} cached successfully`),self.skipWaiting()))).catch((e=>{console.error(`Service Worker: Caching for ${CACHE_NAME} failed`,e)})))})),self.addEventListener("activate",(e=>{console.log(`Service Worker: Activating ${CACHE_NAME}...`);const n=[CACHE_NAME];e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(-1===n.indexOf(e))return console.log(`Service Worker: Deleting old cache: ${e}`),caches.delete(e)}))))).then((()=>(console.log(`Service Worker: Activated (${CACHE_NAME}) and old caches cleaned.`),self.clients.claim()))))})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&e.respondWith(caches.open(CACHE_NAME).then((n=>n.match(e.request).then((n=>n||fetch(e.request).then((e=>e)))))).catch((e=>{console.error("Service Worker: Fetch failed or cache open failed.",e)})))})),self.addEventListener("message",(e=>{if(e.data&&"SHOW_NOTIFICATION"===e.data.type){const{title:n,body:t,icon:i,id:o}=e.data.payload;e.waitUntil(self.registration.showNotification(n,{body:t,icon:i||"icons/icon-192x192.png",badge:"icons/badge-icon.png",tag:`new-user-signin-${o||(new Date).getTime()}`}))}})),self.addEventListener("notificationclick",(e=>{e.notification.close();const n=new URL("index.html#sessions",self.registration.scope).href;e.waitUntil(self.clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>{for(const t of e)if(t.url.startsWith(self.registration.scope)&&"focus"in t)return t.navigate(n),t.focus();if(self.clients.openWindow)return self.clients.openWindow(n)})))}));