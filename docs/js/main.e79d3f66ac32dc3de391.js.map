{"version":3,"file":"js/main.e79d3f66ac32dc3de391.js","mappings":"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","sources":["webpack://cpmanager/webpack/runtime/chunk loaded","webpack://cpmanager/webpack/runtime/create fake namespace object","webpack://cpmanager/webpack/runtime/load script","webpack://cpmanager/./src/js/config.js","webpack://cpmanager/./src/js/utils.js","webpack://cpmanager/./src/js/sessions.js","webpack://cpmanager/./src/js/zones.js","webpack://cpmanager/./src/js/tabs.js","webpack://cpmanager/./src/js/notifications.js","webpack://cpmanager/./src/js/api.js","webpack://cpmanager/./src/js/vouchers.js","webpack://cpmanager/./src/js/dashboard.js","webpack://cpmanager/./src/js/main.js","webpack://cpmanager/./src/js/ui.js","webpack://cpmanager/webpack/bootstrap","webpack://cpmanager/webpack/runtime/define property getters","webpack://cpmanager/webpack/runtime/ensure chunk","webpack://cpmanager/webpack/runtime/get javascript chunk filename","webpack://cpmanager/webpack/runtime/get mini-css chunk filename","webpack://cpmanager/webpack/runtime/global","webpack://cpmanager/webpack/runtime/hasOwnProperty shorthand","webpack://cpmanager/webpack/runtime/make namespace object","webpack://cpmanager/webpack/runtime/publicPath","webpack://cpmanager/webpack/runtime/jsonp chunk loading","webpack://cpmanager/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"cpmanager:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// js/config.js\r\n\r\n// Ensure the global CPManager object exists before any module tries to extend it\r\n// This line initializes CPManager for the entire bundled application.\r\nwindow.CPManager = window.CPManager || {};\r\n\r\n// --- Configuration Object ---\r\n// Directly attach config to the global CPManager object\r\nCPManager.config = {\r\n  baseUrl: null, // Will be populated from app-config.json or localStorage\r\n  placeholderValue: \"—\",\r\n  inMemoryCacheTTLMinutes: 1,\r\n  itemsPerPage: 6, // Default items per page for pagination\r\n  predefinedColors: [\r\n    \"bg-pink-500\",\r\n    \"bg-purple-500\",\r\n    \"bg-indigo-500\",\r\n    \"bg-teal-500\",\r\n    \"bg-lime-500\",\r\n    \"bg-amber-500\",\r\n    \"bg-orange-500\",\r\n    \"bg-cyan-500\",\r\n    \"bg-red-600\",\r\n    \"bg-green-600\",\r\n    \"bg-blue-600\",\r\n    \"bg-yellow-600\",\r\n  ],\r\n  authViaMapping: {\r\n    \"---ip---\": \"IP\",\r\n    \"---mac---\": \"MAC\",\r\n    \"Local Database\": \"Local DB\",\r\n    Voucher: \"Voucher\",\r\n    \"\": \"Anon\",\r\n  },\r\n  voucherStateMapping: {\r\n    unused: \"Unused\",\r\n    valid: \"Active\",\r\n    expired: \"Expired\",\r\n  },\r\n  zoneFieldMappings: {\r\n    enabled: \"Enabled\",\r\n    zoneid: \"Zone ID\",\r\n    interfaces: \"Interfaces\",\r\n    disableRules: \"Disable Auto Rules\",\r\n    authservers: \"Auth Servers\",\r\n    alwaysSendAccountingReqs: \"RADIUS Accounting\",\r\n    authEnforceGroup: \"Enforce Group\",\r\n    idletimeout: \"Idle Timeout\",\r\n    hardtimeout: \"Hard Timeout\",\r\n    concurrentlogins: \"Concurrent Logins\",\r\n    certificate: \"SSL Certificate\",\r\n    servername: \"HTTPS Server Name\",\r\n    allowedAddresses: \"Allowed IPs\",\r\n    allowedMACAddresses: \"Allowed MACs\",\r\n    extendedPreAuthData: \"Extended Pre-Auth Data\",\r\n    template: \"Login Page Template\",\r\n    description: \"Description\",\r\n    uuid: \"UUID\",\r\n  },\r\n  localStorageKeys: {\r\n    theme: \"theme\",\r\n    activeTab: \"activeHelpdeskTab\",\r\n    apiKey: \"opnsenseApiKey\",\r\n    apiSecret: \"opnsenseApiSecret\",\r\n    apiBaseUrl: \"opnsenseApiBaseUrl\",\r\n    sessionZoneFilter: \"sessionZoneFilter\",\r\n    selectedVoucherProvider: \"selectedVoucherProvider\",\r\n    voucherGroupFilterPrefix: \"voucherGroupFilter_\", // Will be used as prefix + providerId\r\n    signInNotificationsEnabled: \"signInNotificationsEnabled\",\r\n  },\r\n};\r\n\r\n// --- State Variables ---\r\n// Directly attach state to the global CPManager object\r\nCPManager.state = {\r\n  currentApiKey: \"\",\r\n  currentApiSecret: \"\",\r\n  confirmCallback: null, // Used by the confirmation modal in CPManager.ui\r\n\r\n  // For color assignment in CPManager.utils\r\n  zoneColors: {},\r\n  authViaColors: {},\r\n  zoneColorIndex: 0,\r\n  authViaColorIndex: Math.floor(CPManager.config.predefinedColors.length / 2), // Start from a different part of the array\r\n\r\n  // Module-specific state will be initialized in their respective files under this namespace\r\n  sessions: {\r\n    all: [], // Stores all fetched sessions to allow client-side filtering\r\n    lastFetched: 0, // Timestamp when sessions.all was last fetched\r\n    managerDetails: null, // Stores details of the current device's session\r\n    currentPage: 1, // For pagination\r\n  },\r\n  vouchers: {\r\n    current: [], // Stores vouchers for the currently selected group (for rendering)\r\n    lastGenerated: [], // Stores the last batch of generated vouchers for PDF download\r\n    cachedProviders: [],\r\n    lastFetchedProviders: 0, // Timestamp when cachedProviders was last fetched\r\n    cachedGroups: {}, // Key: providerId, Value: array of group names\r\n    cachedGroupsTimestamps: {}, // Key: providerId, Value: timestamp\r\n    cachedData: {}, // Key: `${providerId}_${groupName}`, Value: { data: array of voucher objects, lastFetched: timestamp }\r\n    currentPage: 1, // For pagination\r\n  },\r\n  zones: {\r\n    allConfigured: [], // Stores all configured zones (summary data)\r\n    lastFetched: 0, // Timestamp when allConfigured was last fetched\r\n    originalFullDataForEdit: null, // Stores the full data of the zone being edited\r\n    customTemplates: [], // To store fetched custom templates\r\n    customTemplatesLastFetched: 0, // Timestamp for customTemplates\r\n    currentPage: 1, // For pagination\r\n  },\r\n  dashboard: {\r\n    chartInstance: null, // Holds the Chart.js instance for the data usage donut chart\r\n    originalUploadBytes: 0,\r\n    originalDownloadBytes: 0,\r\n    originalTotalBytes: 0,\r\n    apiDataCache: {\r\n      sessions: null, // To store rows from /session/search\r\n      sessionsLastFetched: 0, // Timestamp for dashboard sessions\r\n      voucherStats: null, // To store { totalVouchers, activeVouchers }\r\n      voucherStatsLastFetched: 0, // Timestamp for dashboard voucher stats\r\n    },\r\n  },\r\n  notifications: {\r\n    previousSessionIds: new Set(),\r\n    isFirstPoll: true,\r\n    sessionPollIntervalId: null,\r\n    POLLING_INTERVAL: 30000, // 30 seconds\r\n    POLLING_INTERVAL_HIDDEN_TAB: 300000, // 5 minutes when tab is hidden\r\n    consecutivePollErrors: 0,\r\n    MAX_POLL_ERRORS_BEFORE_DISABLE: 5, // Disable notifications after this many consecutive errors\r\n  },\r\n};\r\n","// js/utils.js\r\n\r\n(function (CPManager) {\r\n  CPManager.utils = {\r\n    /**\r\n     * Gets a consistent color class for a given zone ID.\r\n     * Cycles through predefinedColors.\r\n     * @param {string|number} zoneId - The ID of the zone.\r\n     * @returns {string} Tailwind CSS background color class.\r\n     */\r\n    getZoneColor: function (zoneId) {\r\n      if (!CPManager.state.zoneColors[zoneId]) {\r\n        CPManager.state.zoneColors[zoneId] =\r\n          CPManager.config.predefinedColors[\r\n            CPManager.state.zoneColorIndex %\r\n              CPManager.config.predefinedColors.length\r\n          ];\r\n        CPManager.state.zoneColorIndex =\r\n          (CPManager.state.zoneColorIndex + 1) %\r\n          CPManager.config.predefinedColors.length;\r\n      }\r\n      return CPManager.state.zoneColors[zoneId];\r\n    },\r\n\r\n    /**\r\n     * Gets a consistent color class for a given authentication method.\r\n     * Cycles through predefinedColors, trying to avoid immediate reuse from zone colors.\r\n     * @param {string} authMethod - The authentication method string.\r\n     * @returns {string} Tailwind CSS background color class.\r\n     */\r\n    getAuthViaColor: function (authMethod) {\r\n      if (!CPManager.state.authViaColors[authMethod]) {\r\n        CPManager.state.authViaColors[authMethod] =\r\n          CPManager.config.predefinedColors[\r\n            CPManager.state.authViaColorIndex %\r\n              CPManager.config.predefinedColors.length\r\n          ];\r\n        CPManager.state.authViaColorIndex =\r\n          (CPManager.state.authViaColorIndex + 1) %\r\n          CPManager.config.predefinedColors.length;\r\n        // Simple attempt to avoid direct overlap with zoneColorIndex if they happen to align\r\n        if (\r\n          CPManager.state.authViaColorIndex === CPManager.state.zoneColorIndex\r\n        ) {\r\n          CPManager.state.authViaColorIndex =\r\n            (CPManager.state.authViaColorIndex + 1) %\r\n            CPManager.config.predefinedColors.length;\r\n        }\r\n      }\r\n      return CPManager.state.authViaColors[authMethod];\r\n    },\r\n\r\n    /**\r\n     * Formats bytes into a human-readable string (KB, MB, GB, etc.).\r\n     * @param {number} bytes - The number of bytes.\r\n     * @param {number} [decimals=2] - The number of decimal places to display.\r\n     * @returns {string} Formatted string representing the data size.\r\n     */\r\n    formatBytes: function (bytes, decimals = 2) {\r\n      if (bytes === 0 || !bytes || isNaN(bytes)) return \"0 Bytes\";\r\n      const k = 1024;\r\n      const dm = decimals < 0 ? 0 : decimals;\r\n      const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\r\n    },\r\n\r\n    /**\r\n     * Formats an OPNsense authentication method string into a more readable version.\r\n     * Uses the authViaMapping from config.js.\r\n     * @param {string} authVia - The raw authentication method string from the API.\r\n     * @returns {string} A human-readable authentication method or placeholder.\r\n     */\r\n    formatAuthVia: function (authVia) {\r\n      return (\r\n        CPManager.config.authViaMapping[authVia] ||\r\n        authVia ||\r\n        CPManager.config.placeholderValue\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Formats a Unix timestamp (seconds) into a localized date and time string.\r\n     * @param {number} timestamp - Unix timestamp in seconds.\r\n     * @returns {string} Formatted date-time string or placeholder if invalid.\r\n     */\r\n    formatVoucherTimestamp: function (timestamp) {\r\n      if (!timestamp || timestamp === 0)\r\n        return CPManager.config.placeholderValue;\r\n      try {\r\n        return new Date(timestamp * 1000).toLocaleString();\r\n      } catch (e) {\r\n        console.error(\"Error formatting timestamp:\", timestamp, e);\r\n        return \"Invalid Date\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Formats a duration value into a human-readable string (e.g., \"1d 4h 30m\").\r\n     * @param {number|string} totalValue - The total duration value.\r\n     * @param {string} [unit='minutes'] - The unit of the totalValue ('minutes' or 'seconds').\r\n     * @returns {string} Formatted duration string or placeholder.\r\n     */\r\n    formatDuration: function (totalValue, unit = \"minutes\") {\r\n      let totalSeconds;\r\n\r\n      if (unit === \"minutes\") {\r\n        if (parseInt(totalValue) === 0) return \"No Timeout\"; // Specific case for 0 minutes timeout\r\n        totalSeconds = parseInt(totalValue) * 60;\r\n      } else {\r\n        // Assumed 'seconds'\r\n        if (parseInt(totalValue) === 0 && unit === \"seconds\") return \"0s\"; // Specific for 0 seconds if needed\r\n        totalSeconds = parseInt(totalValue);\r\n      }\r\n\r\n      if (isNaN(totalSeconds) || totalSeconds === null || totalSeconds < 0)\r\n        return CPManager.config.placeholderValue;\r\n\r\n      const days = Math.floor(totalSeconds / (60 * 60 * 24));\r\n      totalSeconds %= 60 * 60 * 24;\r\n      const hours = Math.floor(totalSeconds / (60 * 60));\r\n      totalSeconds %= 60 * 60;\r\n      const minutes = Math.floor(totalSeconds / 60);\r\n      const seconds = totalSeconds % 60; // Only relevant if original unit was seconds or for fine-grained display\r\n\r\n      let parts = [];\r\n      if (days > 0) parts.push(`${days}d`);\r\n      if (hours > 0) parts.push(`${hours}h`);\r\n      if (minutes > 0) parts.push(`${minutes}m`);\r\n      if (seconds > 0 && unit === \"seconds\" && parts.length < 3)\r\n        parts.push(`${seconds}s`); // Show seconds if original unit was seconds and not too many parts already\r\n\r\n      if (parts.length === 0) {\r\n        if (unit === \"seconds\" && totalValue > 0) return `${totalValue}s`;\r\n        if (unit === \"minutes\" && totalValue > 0) return `${totalValue}m`; // Should be caught by \"No Timeout\" or become parts\r\n        if (unit === \"minutes\" && parseInt(totalValue) === 0)\r\n          return \"No Timeout\";\r\n        return \"0s\"; // Fallback\r\n      }\r\n      return parts.join(\" \");\r\n    },\r\n\r\n    /**\r\n     * Formats OPNsense selectable fields (often objects with 'selected' keys) into a comma-separated string.\r\n     * @param {object|string} valueObject - The value from OPNsense API, which might be an object or a string.\r\n     * @returns {string} A comma-separated string of selected values, or the original string, or an empty string.\r\n     */\r\n    formatOpnsenseSelectable: function (valueObject) {\r\n      if (typeof valueObject !== \"object\" || valueObject === null) {\r\n        return String(valueObject || \"\"); // Return as string, or empty if null/undefined\r\n      }\r\n\r\n      const selectedItems = [];\r\n      for (const key in valueObject) {\r\n        if (Object.prototype.hasOwnProperty.call(valueObject, key)) {\r\n          const option = valueObject[key];\r\n          // Check if the option itself is an object and has a 'selected' property that is 1\r\n          if (\r\n            typeof option === \"object\" &&\r\n            option !== null &&\r\n            option.selected === 1\r\n          ) {\r\n            selectedItems.push(option.value || key); // Use option.value if available, otherwise the key\r\n          }\r\n        }\r\n      }\r\n\r\n      if (selectedItems.length > 0) {\r\n        return selectedItems.join(\", \");\r\n      } else {\r\n        // Handle cases where the input object might just be a simple { value: \"something\" }\r\n        if (valueObject.value && Object.keys(valueObject).length === 1) {\r\n          return String(valueObject.value);\r\n        }\r\n        return \"\"; // Return empty if no selected items or not a recognized format\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the description for a given zone ID from the globally stored `allConfiguredZones`.\r\n     * @param {string|number} zoneId - The ID of the zone.\r\n     * @returns {string} The zone description or a default string if not found.\r\n     */\r\n    getZoneDescription: function (zoneId) {\r\n      const zone = CPManager.state.zones.allConfigured.find(\r\n        (z) => String(z.zoneid) === String(zoneId),\r\n      );\r\n      return zone ? zone.description : `Zone ${zoneId}`;\r\n    },\r\n\r\n    /**\r\n     * Determines the type of MAC address based on the U/L bit.\r\n     * 0 = 'device' (globally unique), 1 = 'private' (locally administered).\r\n     * @param {string} macAddress - The MAC address string (e.g., \"00:1A:2B:3C:4D:5E\").\r\n     * @returns {string|null} \"device\", \"private\", or null if undetermined.\r\n     */\r\n    getMacAddressType: function (macAddress) {\r\n      if (!macAddress || typeof macAddress !== \"string\") {\r\n        return null;\r\n      }\r\n\r\n      // Standard MAC address format: 6 octets separated by colons or hyphens.\r\n      // Regex to validate and extract the first octet.\r\n      const macRegex =\r\n        /^([0-9A-Fa-f]{2})[:|-]([0-9A-Fa-f]{2})[:|-]([0-9A-Fa-f]{2})[:|-]([0-9A-Fa-f]{2})[:|-]([0-9A-Fa-f]{2})[:|-]([0-9A-Fa-f]{2})$/;\r\n      const match = macAddress.match(macRegex);\r\n\r\n      if (!match) {\r\n        // Check for MAC without separators (e.g., 001A2B3C4D5E)\r\n        const plainMacRegex = /^[0-9A-Fa-f]{12}$/;\r\n        if (plainMacRegex.test(macAddress)) {\r\n          const firstOctetHex = macAddress.substring(0, 2);\r\n          const firstOctetInt = parseInt(firstOctetHex, 16);\r\n          if (isNaN(firstOctetInt)) {\r\n            return null;\r\n          }\r\n          // Check the U/L bit (2nd LSB of the first octet)\r\n          // 0x02 is 00000010 in binary.\r\n          // If (firstOctetInt & 0x02) is non-zero, the U/L bit is 1 (locally administered).\r\n          return (firstOctetInt & 0x02) !== 0 ? \"private\" : \"device\";\r\n        }\r\n        return null; // Invalid format\r\n      }\r\n\r\n      const firstOctetHex = match[1];\r\n      const firstOctetInt = parseInt(firstOctetHex, 16);\r\n\r\n      if (isNaN(firstOctetInt)) {\r\n        return null; // Should not happen if regex matches, but good for safety.\r\n      }\r\n\r\n      // Check the U/L bit (2nd LSB of the first octet)\r\n      // 0x02 is 00000010 in binary.\r\n      // If (firstOctetInt & 0x02) is non-zero, the U/L bit is 1 (locally administered).\r\n      return (firstOctetInt & 0x02) !== 0 ? \"private\" : \"device\";\r\n    },\r\n  };\r\n})(window.CPManager); // Explicitly pass window.CPManager\r\n","// js/sessions.js\r\n\r\n(function (CPManager) {\r\n  CPManager.sessions = {\r\n    // --- State for selection, similar to vouchers ---\r\n    selectedSessions: new Set(),\r\n    currentlyVisibleSessions: [],\r\n\r\n    // --- Core Functions ---\r\n\r\n    fetchManagerSessionStatus: async function () {\r\n      const zoneIdForStatusCall = \"0\";\r\n      try {\r\n        const response = await fetch(\r\n          `${CPManager.config.baseUrl}/api/captiveportal/access/status/${zoneIdForStatusCall}`,\r\n        );\r\n        const responseText = await response.text();\r\n\r\n        if (!response.ok) {\r\n          console.warn(\r\n            `Manager session status check failed: ${response.status} ${response.statusText}`,\r\n          );\r\n          CPManager.state.sessions.managerDetails = null;\r\n          return;\r\n        }\r\n\r\n        const data = JSON.parse(responseText);\r\n        if (data && data.sessionId && data.clientState === \"AUTHORIZED\") {\r\n          CPManager.state.sessions.managerDetails = {\r\n            sessionId: data.sessionId,\r\n            zoneid: String(data.zoneid),\r\n            ipAddress: data.ipAddress,\r\n          };\r\n          console.log(\r\n            \"Current device's session identified:\",\r\n            CPManager.state.sessions.managerDetails.ipAddress,\r\n            \"ID:\",\r\n            CPManager.state.sessions.managerDetails.sessionId.substring(0, 8) +\r\n              \"...\",\r\n          );\r\n          if (\r\n            CPManager.elements.tabPanes.sessions &&\r\n            CPManager.elements.tabPanes.sessions.classList.contains(\"active\")\r\n          ) {\r\n            CPManager.sessions.applySessionFilters();\r\n          }\r\n        } else {\r\n          CPManager.state.sessions.managerDetails = null;\r\n          console.log(\r\n            \"Current device not connected via authorized captive portal session, or status endpoint returned unexpected data.\",\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          `Exception during fetchManagerSessionStatus:`,\r\n          error.message,\r\n        );\r\n        CPManager.state.sessions.managerDetails = null;\r\n      }\r\n    },\r\n\r\n    loadSessions: async function (forceRefresh = false) {\r\n      if (!CPManager.elements.sessionCardContainer) return;\r\n      CPManager.state.sessions.currentPage = 1;\r\n      this.selectedSessions.clear(); // Clear selection on load\r\n\r\n      if (CPManager.state.zones.allConfigured.length === 0) {\r\n        await CPManager.zones.fetchAllZoneData();\r\n      }\r\n      this.populateSessionZoneFilter();\r\n\r\n      if (\r\n        !forceRefresh &&\r\n        CPManager.state.sessions.all.length > 0 &&\r\n        Date.now() - CPManager.state.sessions.lastFetched <\r\n          CPManager.config.inMemoryCacheTTLMinutes * 60 * 1000\r\n      ) {\r\n        console.log(\"Using cached sessions. Applying filters.\");\r\n        this.applySessionFilters();\r\n        return;\r\n      }\r\n\r\n      CPManager.ui.showSkeletonLoaders(\r\n        CPManager.elements.sessionCardContainer,\r\n        CPManager.config.itemsPerPage,\r\n        '<div class=\"skeleton-card\"></div>',\r\n        \"session-pagination\",\r\n      );\r\n      this.updateSelectAllUI(); // Ensure UI is correct during load\r\n\r\n      try {\r\n        const data = await CPManager.api.callApi(\"/session/search\");\r\n        if (data && Array.isArray(data.rows)) {\r\n          CPManager.state.sessions.all = data.rows;\r\n          CPManager.state.sessions.lastFetched = Date.now();\r\n          this.applySessionFilters();\r\n        } else {\r\n          console.error(\r\n            \"Error loading sessions: API response `data.rows` is not an array or data is undefined.\",\r\n            data,\r\n          );\r\n          CPManager.ui.showNoDataMessage(\r\n            CPManager.elements.sessionCardContainer,\r\n            \"Error: Unexpected data format for sessions.\",\r\n            \"fas fa-exclamation-triangle\",\r\n            \"session-pagination\",\r\n          );\r\n          CPManager.state.sessions.all = [];\r\n          this.currentlyVisibleSessions = [];\r\n          this.updateSelectAllUI();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading sessions:\", error);\r\n        CPManager.ui.showNoDataMessage(\r\n          CPManager.elements.sessionCardContainer,\r\n          \"Could not load sessions. Check API connection and OPNsense logs.\",\r\n          \"fas fa-exclamation-triangle\",\r\n          \"session-pagination\",\r\n        );\r\n        CPManager.state.sessions.all = [];\r\n        this.currentlyVisibleSessions = [];\r\n        this.updateSelectAllUI();\r\n      }\r\n    },\r\n\r\n    populateSessionZoneFilter: function () {\r\n      if (!CPManager.elements.sessionZoneFilterSelect) return;\r\n\r\n      const currentVal =\r\n        localStorage.getItem(\r\n          CPManager.config.localStorageKeys.sessionZoneFilter,\r\n        ) || \"\";\r\n      CPManager.elements.sessionZoneFilterSelect.innerHTML =\r\n        '<option value=\"\">All Zones</option>';\r\n\r\n      if (CPManager.state.zones.allConfigured.length > 0) {\r\n        CPManager.state.zones.allConfigured.forEach((zone) => {\r\n          const option = document.createElement(\"option\");\r\n          option.value = zone.zoneid;\r\n          option.textContent = zone.description || `Zone ${zone.zoneid}`;\r\n          CPManager.elements.sessionZoneFilterSelect.appendChild(option);\r\n        });\r\n        CPManager.elements.sessionZoneFilterSelect.value = currentVal;\r\n      }\r\n    },\r\n\r\n    applySessionFilters: function () {\r\n      if (!CPManager.elements.sessionCardContainer) return;\r\n      CPManager.state.sessions.currentPage = 1;\r\n      this.selectedSessions.clear(); // Clear selection when filters change\r\n\r\n      const searchTerm = CPManager.elements.sessionSearchInput\r\n        ? CPManager.elements.sessionSearchInput.value.toLowerCase()\r\n        : \"\";\r\n      const selectedZoneId = CPManager.elements.sessionZoneFilterSelect\r\n        ? CPManager.elements.sessionZoneFilterSelect.value\r\n        : \"\";\r\n\r\n      if (CPManager.elements.sessionZoneFilterSelect) {\r\n        localStorage.setItem(\r\n          CPManager.config.localStorageKeys.sessionZoneFilter,\r\n          selectedZoneId,\r\n        );\r\n      }\r\n\r\n      let filteredSessions = CPManager.state.sessions.all;\r\n\r\n      if (selectedZoneId) {\r\n        filteredSessions = filteredSessions.filter(\r\n          (s) => String(s.zoneid) === selectedZoneId,\r\n        );\r\n      }\r\n\r\n      if (searchTerm) {\r\n        filteredSessions = filteredSessions.filter(\r\n          (s) =>\r\n            (s.ipAddress && s.ipAddress.toLowerCase().includes(searchTerm)) ||\r\n            (s.macAddress && s.macAddress.toLowerCase().includes(searchTerm)) ||\r\n            (s.userName && s.userName.toLowerCase().includes(searchTerm)) ||\r\n            (s.sessionId && s.sessionId.toLowerCase().includes(searchTerm)),\r\n        );\r\n      }\r\n\r\n      this.currentlyVisibleSessions = filteredSessions;\r\n      this.renderSessions(filteredSessions);\r\n    },\r\n\r\n    renderSessions: function (sessions) {\r\n      if (!CPManager.elements.sessionCardContainer) return;\r\n      const selectAllContainer = CPManager.elements.sessionSelectAllContainer;\r\n\r\n      CPManager.ui.clearContainer(\r\n        CPManager.elements.sessionCardContainer,\r\n        \"session-pagination\",\r\n      );\r\n\r\n      this.updateSelectAllUI();\r\n\r\n      if (!sessions || !Array.isArray(sessions) || sessions.length === 0) {\r\n        if (selectAllContainer) selectAllContainer.classList.add(\"hidden\");\r\n        CPManager.ui.showNoDataMessage(\r\n          CPManager.elements.sessionCardContainer,\r\n          \"No sessions match filters or no active sessions found.\",\r\n          \"fas fa-users-slash\",\r\n          \"session-pagination\",\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (selectAllContainer) selectAllContainer.classList.remove(\"hidden\");\r\n\r\n      const page = CPManager.state.sessions.currentPage;\r\n      const itemsPerPage = CPManager.config.itemsPerPage;\r\n      const startIndex = (page - 1) * itemsPerPage;\r\n      const endIndex = startIndex + itemsPerPage;\r\n      const paginatedSessions = sessions.slice(startIndex, endIndex);\r\n\r\n      paginatedSessions.forEach((session) => {\r\n        const zoneDesc = CPManager.utils.getZoneDescription(session.zoneid);\r\n        const zoneTagColor = CPManager.utils.getZoneColor(session.zoneid);\r\n        const readableAuthVia = CPManager.utils.formatAuthVia(\r\n          session.authenticated_via,\r\n        );\r\n        const authViaTagColor =\r\n          CPManager.utils.getAuthViaColor(readableAuthVia);\r\n        const macAddressType = CPManager.utils.getMacAddressType(\r\n          session.macAddress,\r\n        );\r\n        let macTypeTagHtml = \"\";\r\n        if (macAddressType) {\r\n          // UPDATED: Using a consistent color from the palette\r\n          const macTypeTagColor =\r\n            macAddressType === \"device\" ? \"bg-accent\" : \"bg-purple-500\";\r\n          const macTypeReadable =\r\n            macAddressType.charAt(0).toUpperCase() + macAddressType.slice(1);\r\n          macTypeTagHtml = `<span class=\"info-tag ${macTypeTagColor}\" title=\"MAC Type: ${macTypeReadable}\">${macTypeReadable}</span>`;\r\n        }\r\n\r\n        const isManagerCurrentDeviceSession =\r\n          CPManager.state.sessions.managerDetails &&\r\n          session.sessionId ===\r\n            CPManager.state.sessions.managerDetails.sessionId &&\r\n          String(session.zoneid) ===\r\n            CPManager.state.sessions.managerDetails.zoneid;\r\n\r\n        const isChecked = this.selectedSessions.has(session.sessionId);\r\n\r\n        const card = document.createElement(\"div\");\r\n        card.className = `session-card cp-card ${\r\n          isManagerCurrentDeviceSession\r\n            ? \"ring-2 ring-offset-1 ring-primary\" // UPDATED: ring-blue-500 -> ring-primary\r\n            : \"\"\r\n        }`;\r\n        card.setAttribute(\"role\", \"listitem\");\r\n        card.setAttribute(\r\n          \"aria-label\",\r\n          `Session for IP ${session.ipAddress || \"Unknown IP\"}`,\r\n        );\r\n\r\n        let managerIconHtml = \"\";\r\n        if (isManagerCurrentDeviceSession) {\r\n          // UPDATED: bg-blue-600 -> bg-primary\r\n          managerIconHtml = `<span class=\"info-tag bg-primary flex items-center\" title=\"This is your current device's session (IP: ${\r\n            CPManager.state.sessions.managerDetails.ipAddress || \"N/A\"\r\n          })\"><i class=\"fas fa-user-shield mr-1\"></i>You</span>`;\r\n        }\r\n\r\n        const checkboxHTML = `\r\n            <div class=\"flex-shrink-0\">\r\n                <input type=\"checkbox\" class=\"session-select-checkbox form-checkbox\" data-session-id=\"${session.sessionId}\" ${isChecked ? \"checked\" : \"\"}>\r\n            </div>`;\r\n\r\n        const tagsHTML = `\r\n            <div class=\"flex items-center gap-1\">\r\n                ${managerIconHtml}\r\n                ${macTypeTagHtml}\r\n                <span class=\"info-tag ${authViaTagColor}\" title=\"Authenticated Via: ${readableAuthVia}\">${readableAuthVia}</span>\r\n                <span class=\"info-tag ${zoneTagColor}\" title=\"Zone: ${zoneDesc}\">${zoneDesc}</span>\r\n            </div>`;\r\n\r\n        const cardSummaryId = `session-summary-${session.sessionId}`;\r\n        const cardDetailsId = `session-details-${session.sessionId}`;\r\n\r\n        card.innerHTML = `\r\n            <div class=\"flex justify-between items-center mb-1\">\r\n                ${checkboxHTML}\r\n                ${tagsHTML}\r\n            </div>\r\n            <div id=\"${cardSummaryId}\" class=\"session-summary cursor-pointer pb-1\" role=\"button\" tabindex=\"0\" aria-expanded=\"false\" aria-controls=\"${cardDetailsId}\">\r\n                <div class=\"space-y-1\">\r\n                    <div class=\"card-detail-row\"><span class=\"card-label\">IP Address</span> <span class=\"card-value\">${\r\n                      session.ipAddress || CPManager.config.placeholderValue\r\n                    }</span></div>\r\n                    <div class=\"card-detail-row\"><span class=\"card-label\">User</span> <span class=\"card-value\">${\r\n                      session.userName || CPManager.config.placeholderValue\r\n                    }</span></div>\r\n                    <div class=\"card-detail-row\"><span class=\"card-label\">MAC</span> <span class=\"card-value\">${\r\n                      session.macAddress || CPManager.config.placeholderValue\r\n                    }</span></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-details-content max-h-0 overflow-hidden transition-all duration-300 ease-out text-sm space-y-1\" id=\"${cardDetailsId}\" aria-hidden=\"true\">\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Zone ID</span> <span class=\"card-value-secondary\">${\r\n                  session.zoneid\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Session ID</span> <span class=\"card-value-secondary\">${\r\n                  session.sessionId || CPManager.config.placeholderValue\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Start Time</span> <span class=\"card-value-secondary\">${\r\n                  session.startTime\r\n                    ? new Date(session.startTime * 1000).toLocaleString()\r\n                    : CPManager.config.placeholderValue\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Last Accessed</span> <span class=\"card-value-secondary\">${\r\n                  session.last_accessed\r\n                    ? new Date(session.last_accessed * 1000).toLocaleString()\r\n                    : CPManager.config.placeholderValue\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Packets Uploaded</span> <span class=\"card-value-secondary\">${\r\n                  session.packets_in !== undefined\r\n                    ? session.packets_in.toLocaleString()\r\n                    : CPManager.config.placeholderValue\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Packets Downloaded</span> <span class=\"card-value-secondary\">${\r\n                  session.packets_out !== undefined\r\n                    ? session.packets_out.toLocaleString()\r\n                    : CPManager.config.placeholderValue\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Data Uploaded</span> <span class=\"card-value-secondary\">${\r\n                  session.bytes_in !== undefined\r\n                    ? CPManager.utils.formatBytes(session.bytes_in)\r\n                    : CPManager.config.placeholderValue\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Data Downloaded</span> <span class=\"card-value-secondary\">${\r\n                  session.bytes_out !== undefined\r\n                    ? CPManager.utils.formatBytes(session.bytes_out)\r\n                    : CPManager.config.placeholderValue\r\n                }</span></div>\r\n                <div class=\"card-detail-row\"><span class=\"card-label\">Acc. Timeout</span> <span class=\"card-value-secondary\">${\r\n                  session.acc_session_timeout\r\n                    ? CPManager.utils.formatDuration(\r\n                        session.acc_session_timeout,\r\n                        \"seconds\",\r\n                      )\r\n                    : CPManager.config.placeholderValue\r\n                }</span></div>\r\n            </div>`;\r\n        CPManager.elements.sessionCardContainer.appendChild(card);\r\n      });\r\n      CPManager.ui.renderPaginationControls(\r\n        CPManager.elements.sessionPaginationContainer,\r\n        CPManager.state.sessions.currentPage,\r\n        sessions.length,\r\n        CPManager.config.itemsPerPage,\r\n        (newPage) => {\r\n          CPManager.state.sessions.currentPage = newPage;\r\n          this.renderSessions(sessions);\r\n        },\r\n      );\r\n    },\r\n\r\n    // --- Selection and Action Functions ---\r\n\r\n    updateDisconnectSelectedButton: function () {\r\n      const button = CPManager.elements.disconnectSelectedSessionsBtn;\r\n      if (!button) return;\r\n      const selectedCount = this.selectedSessions.size;\r\n      button.innerHTML = `<i class=\"fas fa-times-circle mr-2\"></i>Disconnect`;\r\n      button.disabled = selectedCount === 0;\r\n    },\r\n\r\n    updateSelectAllUI: function () {\r\n      const {\r\n        sessionSelectAllCheckbox,\r\n        sessionSelectedCountText,\r\n        sessionSelectAllContainer,\r\n      } = CPManager.elements;\r\n      if (\r\n        !sessionSelectAllCheckbox ||\r\n        !sessionSelectedCountText ||\r\n        !sessionSelectAllContainer\r\n      )\r\n        return;\r\n\r\n      this.updateDisconnectSelectedButton();\r\n\r\n      const selectedCount = this.selectedSessions.size;\r\n      sessionSelectedCountText.textContent = `(${selectedCount} session${\r\n        selectedCount === 1 ? \"\" : \"s\"\r\n      } selected)`;\r\n\r\n      const visibleSessions = this.currentlyVisibleSessions;\r\n      if (visibleSessions.length === 0) {\r\n        sessionSelectAllContainer.classList.add(\"hidden\");\r\n        sessionSelectAllCheckbox.checked = false;\r\n        sessionSelectAllCheckbox.indeterminate = false;\r\n        sessionSelectAllCheckbox.disabled = true;\r\n        return;\r\n      }\r\n\r\n      sessionSelectAllContainer.classList.remove(\"hidden\");\r\n      sessionSelectAllCheckbox.disabled = false;\r\n      const allVisibleSelected = visibleSessions.every((s) =>\r\n        this.selectedSessions.has(s.sessionId),\r\n      );\r\n\r\n      sessionSelectAllCheckbox.checked = allVisibleSelected;\r\n      sessionSelectAllCheckbox.indeterminate =\r\n        selectedCount > 0 && !allVisibleSelected;\r\n    },\r\n\r\n    handleSelectAll: function (isChecked) {\r\n      this.currentlyVisibleSessions.forEach((session) => {\r\n        if (isChecked) {\r\n          this.selectedSessions.add(session.sessionId);\r\n        } else {\r\n          this.selectedSessions.delete(session.sessionId);\r\n        }\r\n      });\r\n      // Re-render the currently visible cards to update checkbox states\r\n      this.renderSessions(this.currentlyVisibleSessions);\r\n    },\r\n\r\n    handleDisconnectSelectedSessions: async function () {\r\n      const selectedSessionIds = Array.from(this.selectedSessions);\r\n      if (selectedSessionIds.length === 0) {\r\n        CPManager.ui.showToast(\"No sessions selected.\", \"info\");\r\n        return;\r\n      }\r\n\r\n      const sessionsToDisconnect = CPManager.state.sessions.all.filter((s) =>\r\n        selectedSessionIds.includes(s.sessionId),\r\n      );\r\n\r\n      if (sessionsToDisconnect.length === 0) {\r\n        CPManager.ui.showToast(\r\n          \"Could not find details for selected sessions. Please refresh.\",\r\n          \"error\",\r\n        );\r\n        this.selectedSessions.clear();\r\n        this.updateSelectAllUI();\r\n        return;\r\n      }\r\n\r\n      const isMySessionSelected =\r\n        CPManager.state.sessions.managerDetails?.sessionId &&\r\n        this.selectedSessions.has(\r\n          CPManager.state.sessions.managerDetails.sessionId,\r\n        );\r\n\r\n      let title = \"Disconnect Selected Sessions?\";\r\n      let message = `Are you sure you want to disconnect the <strong>${sessionsToDisconnect.length}</strong> selected session(s)?`;\r\n\r\n      if (isMySessionSelected) {\r\n        title = \"Warning: Disconnecting Own Session\";\r\n        message = `<div class=\"alert-box alert-box-danger\"><i class=\"fas fa-biohazard mr-2 mt-1 text-danger\"></i><span><strong>DANGER:</strong> Your own session is included in the selection. Disconnecting it may lock you out of this manager.</span></div><p class=\"mt-4\">Disconnect <strong>${sessionsToDisconnect.length}</strong> session(s) anyway?</p>`;\r\n      }\r\n\r\n      CPManager.ui.showConfirmationModal(title, message, async () => {\r\n        CPManager.ui.showToast(\r\n          `Disconnecting ${sessionsToDisconnect.length} session(s)...`,\r\n          \"info\",\r\n          5000,\r\n        );\r\n\r\n        let successCount = 0;\r\n        let failureCount = 0;\r\n\r\n        const disconnectPromises = sessionsToDisconnect.map((session) =>\r\n          CPManager.api\r\n            .callApi(`/session/disconnect/${session.zoneid}`, \"POST\", {\r\n              sessionId: session.sessionId,\r\n            })\r\n            .then((result) => {\r\n              if (\r\n                result &&\r\n                (result.terminateCause ||\r\n                  result.status === \"ok\" ||\r\n                  result.status === \"ok_text\")\r\n              ) {\r\n                successCount++;\r\n              } else {\r\n                failureCount++;\r\n                console.warn(\r\n                  `Failed to disconnect session ${session.sessionId}:`,\r\n                  result,\r\n                );\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              failureCount++;\r\n              console.error(\r\n                `Error disconnecting session ${session.sessionId}:`,\r\n                error,\r\n              );\r\n            }),\r\n        );\r\n\r\n        await Promise.all(disconnectPromises);\r\n\r\n        let summaryMessage = \"\";\r\n        let toastType = \"info\";\r\n        if (successCount > 0 && failureCount === 0) {\r\n          summaryMessage = `Successfully disconnected all ${successCount} selected sessions.`;\r\n          toastType = \"success\";\r\n        } else if (successCount > 0 && failureCount > 0) {\r\n          summaryMessage = `Disconnected ${successCount} sessions. Failed for ${failureCount}. Check console.`;\r\n          toastType = \"warning\";\r\n        } else if (successCount === 0 && failureCount > 0) {\r\n          summaryMessage = `Failed to disconnect any of the ${failureCount} selected sessions. Check console.`;\r\n          toastType = \"error\";\r\n        }\r\n\r\n        CPManager.ui.showToast(summaryMessage, toastType, 7000);\r\n\r\n        this.selectedSessions.clear();\r\n        await this.loadSessions(true); // Force refresh\r\n      });\r\n    },\r\n\r\n    // --- Event Listener Initialization ---\r\n\r\n    initializeSessionEventListeners: function () {\r\n      if (CPManager.elements.sessionSearchInput)\r\n        CPManager.elements.sessionSearchInput.addEventListener(\"input\", () =>\r\n          this.applySessionFilters(),\r\n        );\r\n      if (CPManager.elements.sessionZoneFilterSelect)\r\n        CPManager.elements.sessionZoneFilterSelect.addEventListener(\r\n          \"change\",\r\n          () => this.applySessionFilters(),\r\n        );\r\n\r\n      // Listener for card container (delegated)\r\n      if (CPManager.elements.sessionCardContainer) {\r\n        CPManager.elements.sessionCardContainer.addEventListener(\r\n          \"click\",\r\n          (e) => {\r\n            // First, check if a checkbox was clicked\r\n            const checkbox = e.target.closest(\".session-select-checkbox\");\r\n            if (checkbox) {\r\n              // Handle the checkbox logic\r\n              const sessionId = checkbox.dataset.sessionId;\r\n              if (checkbox.checked) {\r\n                this.selectedSessions.add(sessionId);\r\n                const isMySession =\r\n                  CPManager.state.sessions.managerDetails &&\r\n                  sessionId ===\r\n                    CPManager.state.sessions.managerDetails.sessionId;\r\n                if (isMySession) {\r\n                  CPManager.ui.showToast(\r\n                    \"Warning: You have selected your own session.\",\r\n                    \"warning\",\r\n                    4000,\r\n                  );\r\n                }\r\n              } else {\r\n                this.selectedSessions.delete(sessionId);\r\n              }\r\n              this.updateSelectAllUI();\r\n              return; // Stop further processing to prevent card from toggling\r\n            }\r\n\r\n            // If a checkbox wasn't clicked, check if a card was clicked\r\n            const card = e.target.closest(\".session-card\");\r\n            if (card) {\r\n              // Toggle the card details\r\n              CPManager.ui.toggleCardDetails(card);\r\n            }\r\n          },\r\n        );\r\n      }\r\n\r\n      // Action button listeners\r\n      if (CPManager.elements.disconnectSelectedSessionsBtn)\r\n        CPManager.elements.disconnectSelectedSessionsBtn.addEventListener(\r\n          \"click\",\r\n          () => this.handleDisconnectSelectedSessions(),\r\n        );\r\n\r\n      if (CPManager.elements.sessionSelectAllCheckbox) {\r\n        CPManager.elements.sessionSelectAllCheckbox.addEventListener(\r\n          \"change\",\r\n          (e) => this.handleSelectAll(e.target.checked),\r\n        );\r\n      }\r\n\r\n      if (CPManager.elements.findMySessionBtn) {\r\n        CPManager.elements.findMySessionBtn.addEventListener(\r\n          \"click\",\r\n          async () => {\r\n            if (\r\n              CPManager.state.sessions.managerDetails &&\r\n              CPManager.state.sessions.managerDetails.sessionId\r\n            ) {\r\n              CPManager.ui.showToast(\r\n                `Found your session (IP: ${CPManager.state.sessions.managerDetails.ipAddress}). Highlighting...`,\r\n                \"info\",\r\n              );\r\n              if (CPManager.elements.sessionZoneFilterSelect)\r\n                CPManager.elements.sessionZoneFilterSelect.value = \"\";\r\n              if (CPManager.elements.sessionSearchInput)\r\n                CPManager.elements.sessionSearchInput.value =\r\n                  CPManager.state.sessions.managerDetails.sessionId;\r\n\r\n              this.applySessionFilters(); // Apply the search filter immediately\r\n              CPManager.tabs.setActiveTab(\"sessions\"); // Switch to the tab\r\n\r\n              setTimeout(() => {\r\n                const highlightedCard = document.querySelector(\r\n                  \".is-manager-session\",\r\n                );\r\n                if (highlightedCard)\r\n                  highlightedCard.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"center\",\r\n                  });\r\n              }, 300);\r\n            } else {\r\n              CPManager.ui.showToast(\r\n                \"Your session details not found. Fetching...\",\r\n                \"warning\",\r\n              );\r\n              await this.fetchManagerSessionStatus();\r\n              if (!CPManager.state.sessions.managerDetails) {\r\n                CPManager.ui.showToast(\r\n                  \"Still couldn't find your session. Ensure you are logged into the portal.\",\r\n                  \"warning\",\r\n                );\r\n              } else {\r\n                CPManager.elements.findMySessionBtn.click(); // Retry\r\n              }\r\n            }\r\n          },\r\n        );\r\n      }\r\n    },\r\n  };\r\n})(CPManager);\r\n","// js/zones.js\r\n\r\n(function (CPManager) {\r\n  CPManager.zones = {\r\n    fetchAllZoneData: async function (forceRefresh = false) {\r\n      if (\r\n        !forceRefresh &&\r\n        CPManager.state.zones.allConfigured.length > 0 &&\r\n        CPManager.state.zones.allConfigured[0].description !== undefined && // Check if data is more than just basic\r\n        Date.now() - CPManager.state.zones.lastFetched <\r\n          CPManager.config.inMemoryCacheTTLMinutes * 60 * 1000\r\n      ) {\r\n        return;\r\n      }\r\n      try {\r\n        const data = await CPManager.api.callApi(\"/settings/search_zones\");\r\n        if (data && Array.isArray(data.rows)) {\r\n          CPManager.state.zones.allConfigured = data.rows;\r\n          CPManager.state.zones.lastFetched = Date.now();\r\n        } else {\r\n          CPManager.state.zones.allConfigured = [];\r\n          console.warn(\r\n            \"No zones found or unexpected data format from /settings/search_zones.\",\r\n            data,\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          \"Failed to fetch all zone data for descriptions:\",\r\n          error.message,\r\n        );\r\n        CPManager.state.zones.allConfigured = [];\r\n      }\r\n    },\r\n\r\n    fetchCustomTemplates: async function (forceRefresh = false) {\r\n      if (\r\n        !forceRefresh &&\r\n        CPManager.state.zones.customTemplates.length > 0 &&\r\n        Date.now() - CPManager.state.zones.customTemplatesLastFetched <\r\n          CPManager.config.inMemoryCacheTTLMinutes * 60 * 1000\r\n      ) {\r\n        return;\r\n      }\r\n      try {\r\n        const data = await CPManager.api.callApi(\"/service/search_templates\");\r\n        if (data && Array.isArray(data.rows)) {\r\n          CPManager.state.zones.customTemplates = data.rows;\r\n          CPManager.state.zones.customTemplatesLastFetched = Date.now();\r\n        } else {\r\n          CPManager.state.zones.customTemplates = [];\r\n          console.warn(\r\n            \"No custom templates found or unexpected data format.\",\r\n            data,\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch custom templates:\", error.message);\r\n        CPManager.state.zones.customTemplates = [];\r\n      }\r\n    },\r\n\r\n    loadZoneInfo: async function (forceRefreshDetails = false) {\r\n      if (!CPManager.elements.zoneListContainer) return;\r\n      CPManager.state.zones.currentPage = 1; // Reset to first page\r\n\r\n      const needsSkeleton =\r\n        forceRefreshDetails ||\r\n        CPManager.elements.zoneListContainer.querySelectorAll(\".zone-info-card\")\r\n          .length === 0;\r\n      if (needsSkeleton) {\r\n        CPManager.ui.showSkeletonLoaders(\r\n          CPManager.elements.zoneListContainer,\r\n          CPManager.config.itemsPerPage,\r\n          '<div class=\"skeleton-card\"></div>',\r\n          \"zone-pagination\",\r\n        );\r\n      }\r\n\r\n      try {\r\n        await CPManager.zones.fetchAllZoneData(forceRefreshDetails);\r\n        await CPManager.zones.fetchCustomTemplates(forceRefreshDetails);\r\n\r\n        CPManager.ui.clearContainer(\r\n          CPManager.elements.zoneListContainer,\r\n          \"zone-pagination\",\r\n        );\r\n\r\n        if (\r\n          !Array.isArray(CPManager.state.zones.allConfigured) ||\r\n          CPManager.state.zones.allConfigured.length === 0\r\n        ) {\r\n          CPManager.ui.showNoDataMessage(\r\n            CPManager.elements.zoneListContainer,\r\n            \"No captive portal zones configured on OPNsense.\",\r\n            \"fas fa-folder-open\",\r\n            \"zone-pagination\",\r\n          );\r\n          return;\r\n        }\r\n\r\n        const allZones = CPManager.state.zones.allConfigured;\r\n        const page = CPManager.state.zones.currentPage;\r\n        const itemsPerPage = CPManager.config.itemsPerPage;\r\n        const startIndex = (page - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        const paginatedZones = allZones.slice(startIndex, endIndex);\r\n\r\n        paginatedZones.forEach((zoneSummary) => {\r\n          const zoneCard = document.createElement(\"div\");\r\n          zoneCard.className = \"zone-info-card cp-card\";\r\n          zoneCard.setAttribute(\"role\", \"listitem\");\r\n          zoneCard.setAttribute(\r\n            \"aria-label\",\r\n            `Zone: ${zoneSummary.description || `Zone ID ${zoneSummary.zoneid}`}`,\r\n          );\r\n\r\n          const statusText =\r\n            zoneSummary.enabled === \"1\" ? \"Enabled\" : \"Disabled\";\r\n          // UPDATED: Use semantic colors\r\n          const statusColor =\r\n            zoneSummary.enabled === \"1\" ? \"bg-success\" : \"bg-danger\";\r\n\r\n          const statusTag = `<span class=\"info-tag ${statusColor}\" title=\"Status: ${statusText}\">${statusText}</span>`;\r\n          const cardSummaryId = `zone-summary-${zoneSummary.uuid}`;\r\n          const cardDetailsId = `zone-details-${zoneSummary.uuid}`;\r\n\r\n          zoneCard.innerHTML = `\r\n            <div class=\"flex justify-end items-center mb-1\">\r\n                <div class=\"flex items-center gap-1\">\r\n                    ${statusTag}\r\n                </div>\r\n            </div>\r\n            <div id=\"${cardSummaryId}\" class=\"zone-summary cursor-pointer pb-1\" role=\"button\" tabindex=\"0\" aria-expanded=\"false\" aria-controls=\"${cardDetailsId}\">\r\n              <div class=\"card-detail-row\"><span class=\"card-label\">Name</span><span class=\"card-value\">${\r\n                zoneSummary.description ||\r\n                `Unnamed Zone (ID: ${zoneSummary.zoneid})`\r\n              }</span></div>\r\n              <div class=\"card-detail-row\"><span class=\"card-label\">Zone ID</span><span class=\"card-value\">${\r\n                zoneSummary.zoneid\r\n              }</span></div>\r\n              <div class=\"card-detail-row\"><span class=\"card-label\">Short UUID</span><span class=\"card-value\">${zoneSummary.uuid.substring(\r\n                0,\r\n                8,\r\n              )}...</span></div>\r\n            </div>\r\n            <div class=\"card-details-content max-h-0 overflow-hidden transition-all duration-300 ease-out text-sm space-y-1\" id=\"${cardDetailsId}\" aria-hidden=\"true\">Loading details...</div>`;\r\n          zoneCard.dataset.uuid = zoneSummary.uuid;\r\n          zoneCard.dataset.initialZoneid = zoneSummary.zoneid;\r\n          CPManager.elements.zoneListContainer.appendChild(zoneCard);\r\n        });\r\n        CPManager.ui.renderPaginationControls(\r\n          CPManager.elements.zonePaginationContainer,\r\n          CPManager.state.zones.currentPage,\r\n          allZones.length,\r\n          CPManager.config.itemsPerPage,\r\n          (newPage) => {\r\n            CPManager.state.zones.currentPage = newPage;\r\n            CPManager.zones.loadZoneInfo(); // Re-call to render the new page\r\n          },\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error in loadZoneInfo:\", error);\r\n        CPManager.ui.showNoDataMessage(\r\n          CPManager.elements.zoneListContainer,\r\n          \"Error loading zone information.\",\r\n          \"fas fa-exclamation-triangle\",\r\n          \"zone-pagination\",\r\n        );\r\n      }\r\n    },\r\n\r\n    handleZoneCardClick: async function (card, detailsContainer) {\r\n      CPManager.ui.toggleCardDetails(card);\r\n      const isNowExpanded = detailsContainer.classList.contains(\"expanded\");\r\n\r\n      if (\r\n        isNowExpanded &&\r\n        (detailsContainer.innerHTML.includes(\"Loading details...\") ||\r\n          detailsContainer.innerHTML.includes(\"Error loading details\"))\r\n      ) {\r\n        const uuid = card.dataset.uuid;\r\n\r\n        try {\r\n          const zoneDetailsResponse = await CPManager.api.callApi(\r\n            `/settings/get_zone/${uuid}`,\r\n          );\r\n          let detailsHtml = \"\";\r\n\r\n          const createInfoRowDiv = (label, value) => {\r\n            const displayValue =\r\n              value === null ||\r\n              value === undefined ||\r\n              String(value).trim() === \"\"\r\n                ? CPManager.config.placeholderValue\r\n                : String(value);\r\n            return `<div class=\"card-detail-row\"><span class=\"card-label\">${label}</span> <span class=\"card-value-secondary\">${displayValue}</span></div>`;\r\n          };\r\n\r\n          detailsHtml += createInfoRowDiv(\"UUID\", uuid);\r\n\r\n          if (zoneDetailsResponse && zoneDetailsResponse.zone) {\r\n            const zoneData = zoneDetailsResponse.zone;\r\n            for (const [key, value] of Object.entries(zoneData)) {\r\n              if (\r\n                key === \"uuid\" ||\r\n                key === \"description\" ||\r\n                key === \"enabled\" ||\r\n                key === \"zoneid\"\r\n              )\r\n                continue;\r\n\r\n              const readableKey =\r\n                CPManager.config.zoneFieldMappings[key] ||\r\n                key.charAt(0).toUpperCase() +\r\n                  key.slice(1).replace(/([A-Z])/g, \" $1\");\r\n              let displayValue;\r\n\r\n              if (key === \"idletimeout\" || key === \"hardtimeout\") {\r\n                displayValue = value\r\n                  ? CPManager.utils.formatDuration(parseInt(value), \"minutes\")\r\n                  : CPManager.config.placeholderValue;\r\n              } else if (key === \"template\") {\r\n                let selectedTemplateIdentifier = \"\";\r\n                if (typeof value === \"object\" && value !== null) {\r\n                  for (const templateKey in value) {\r\n                    if (\r\n                      value[templateKey] &&\r\n                      (value[templateKey].selected === 1 ||\r\n                        value[templateKey].selected === \"1\")\r\n                    ) {\r\n                      selectedTemplateIdentifier = templateKey;\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n                const templateInfo = CPManager.state.zones.customTemplates.find(\r\n                  (t) => t.uuid === selectedTemplateIdentifier,\r\n                );\r\n                displayValue = templateInfo\r\n                  ? templateInfo.name\r\n                  : selectedTemplateIdentifier\r\n                    ? `UUID: ${selectedTemplateIdentifier.substring(0, 8)}...`\r\n                    : \"Default\";\r\n              } else if (\r\n                [\r\n                  \"disableRules\",\r\n                  \"alwaysSendAccountingReqs\",\r\n                  \"concurrentlogins\",\r\n                  \"extendedPreAuthData\",\r\n                ].includes(key)\r\n              ) {\r\n                displayValue =\r\n                  String(value) === \"1\"\r\n                    ? \"Yes\"\r\n                    : String(value) === \"0\"\r\n                      ? \"No\"\r\n                      : String(value);\r\n              } else if (\r\n                typeof value === \"object\" &&\r\n                value !== null &&\r\n                Object.values(value).some(\r\n                  (v_obj) =>\r\n                    typeof v_obj === \"object\" &&\r\n                    v_obj !== null &&\r\n                    Object.prototype.hasOwnProperty.call(v_obj, \"selected\"),\r\n                )\r\n              ) {\r\n                displayValue = CPManager.utils.formatOpnsenseSelectable(value);\r\n              } else if (Array.isArray(value)) {\r\n                displayValue =\r\n                  value.length > 0\r\n                    ? value.join(\", \")\r\n                    : CPManager.config.placeholderValue;\r\n              } else {\r\n                displayValue = String(value);\r\n              }\r\n\r\n              if (\r\n                typeof displayValue === \"string\" &&\r\n                displayValue.length > 150\r\n              ) {\r\n                displayValue = displayValue.substring(0, 150) + \"...\";\r\n              }\r\n              detailsHtml += createInfoRowDiv(\r\n                readableKey,\r\n                displayValue || CPManager.config.placeholderValue,\r\n              );\r\n            }\r\n          } else {\r\n            detailsHtml +=\r\n              \"<div>No further detailed properties found or unexpected response format.</div>\";\r\n          }\r\n\r\n          detailsHtml += `\r\n            <div class=\"mt-3 grid grid-cols-2 gap-4\">\r\n              <button class=\"btn btn-base btn-primary\" data-action=\"edit-zone\" data-uuid=\"${uuid}\">\r\n                <i class=\"fas fa-edit mr-1\"></i> Edit Settings\r\n              </button>\r\n            </div>\r\n          `;\r\n          detailsContainer.innerHTML = detailsHtml;\r\n        } catch (error) {\r\n          console.error(`Error loading details for zone ${uuid}:`, error);\r\n          detailsContainer.innerHTML =\r\n            '<p class=\"text-danger\">Error loading details. Check console.</p>';\r\n        }\r\n      }\r\n    },\r\n\r\n    fetchAndOpenEditZoneModal: async function (uuid) {\r\n      if (!CPManager.elements.editZoneModal) {\r\n        console.error(\r\n          \"Edit Zone Modal element (CPManager.elements.editZoneModal) not found.\",\r\n        );\r\n        return;\r\n      }\r\n      try {\r\n        await CPManager.zones.fetchCustomTemplates();\r\n\r\n        const response = await CPManager.api.callApi(\r\n          `/settings/get_zone/${uuid}`,\r\n        );\r\n        if (response && response.zone) {\r\n          CPManager.state.zones.originalFullDataForEdit = response;\r\n          CPManager.zones.populateEditZoneModal(response.zone, uuid);\r\n\r\n          if (CPManager.elements.submitEditZoneBtn) {\r\n            CPManager.elements.submitEditZoneBtn.disabled = false;\r\n          } else {\r\n            console.error(\r\n              \"CPManager.elements.submitEditZoneBtn not found when trying to enable it in fetchAndOpenEditZoneModal.\",\r\n            );\r\n          }\r\n          if (CPManager.elements.cancelEditZoneBtn) {\r\n            CPManager.elements.cancelEditZoneBtn.disabled = false;\r\n          }\r\n\r\n          CPManager.elements.editZoneModal.classList.remove(\"hidden\");\r\n          CPManager.elements.editZoneModal.classList.add(\"flex\");\r\n          if (CPManager.elements.zoneEditDescriptionInput)\r\n            CPManager.elements.zoneEditDescriptionInput.focus();\r\n        } else {\r\n          CPManager.ui.showToast(\r\n            `Could not load details for zone ${uuid}. API response issue.`,\r\n            \"error\",\r\n          );\r\n          CPManager.state.zones.originalFullDataForEdit = null;\r\n        }\r\n      } catch (error) {\r\n        CPManager.state.zones.originalFullDataForEdit = null;\r\n        console.error(\"Error in fetchAndOpenEditZoneModal:\", error);\r\n      }\r\n    },\r\n\r\n    populateEditZoneModal: function (zoneData, uuid) {\r\n      const requiredElements = [\r\n        \"editZoneUuidInput\",\r\n        \"editZoneModalTitleName\",\r\n        \"zoneEditDescriptionInput\",\r\n        \"zoneEditEnabledCheckbox\",\r\n        \"zoneEditEnabledText\",\r\n        \"zoneEditAllowedAddressesTextarea\",\r\n        \"zoneEditAllowedMACAddressesTextarea\",\r\n        \"zoneEditHardTimeoutInput\",\r\n        \"zoneEditIdleTimeoutInput\",\r\n        \"zoneEditConcurrentLoginsCheckbox\",\r\n        \"zoneEditConcurrentLoginsText\",\r\n        \"zoneEditTemplateSelect\",\r\n        \"zoneEditAuthServersSelect\",\r\n      ];\r\n      for (const elId of requiredElements) {\r\n        if (!CPManager.elements[elId]) {\r\n          console.error(`Edit Zone Modal element missing: ${elId}`);\r\n          CPManager.ui.showToast(\r\n            \"Cannot populate edit zone dialog: form elements missing.\",\r\n            \"error\",\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      const formatForTextarea = (fieldValue) => {\r\n        if (\r\n          typeof fieldValue === \"object\" &&\r\n          fieldValue !== null &&\r\n          !Array.isArray(fieldValue)\r\n        ) {\r\n          const isOpnSelectableObject = Object.values(fieldValue).some(\r\n            (item) =>\r\n              typeof item === \"object\" &&\r\n              item !== null &&\r\n              Object.prototype.hasOwnProperty.call(item, \"selected\") &&\r\n              Object.prototype.hasOwnProperty.call(item, \"value\"),\r\n          );\r\n\r\n          if (isOpnSelectableObject) {\r\n            const selectedValues = [];\r\n            for (const key in fieldValue) {\r\n              if (\r\n                typeof fieldValue[key] === \"object\" &&\r\n                fieldValue[key] !== null &&\r\n                Object.prototype.hasOwnProperty.call(\r\n                  fieldValue[key],\r\n                  \"selected\",\r\n                ) &&\r\n                Object.prototype.hasOwnProperty.call(fieldValue[key], \"value\")\r\n              ) {\r\n                if (\r\n                  fieldValue[key].selected === 1 ||\r\n                  fieldValue[key].selected === \"1\" ||\r\n                  fieldValue[key].selected === true\r\n                ) {\r\n                  selectedValues.push(fieldValue[key].value);\r\n                }\r\n              }\r\n            }\r\n            return selectedValues.join(\",\");\r\n          } else {\r\n            return \"\";\r\n          }\r\n        }\r\n        if (typeof fieldValue === \"string\") {\r\n          return fieldValue;\r\n        }\r\n        return \"\";\r\n      };\r\n\r\n      CPManager.elements.editZoneUuidInput.value = uuid;\r\n      CPManager.elements.editZoneModalTitleName.textContent =\r\n        zoneData.description ||\r\n        `Zone ${zoneData.zoneid || uuid.substring(0, 8)}`;\r\n      CPManager.elements.zoneEditDescriptionInput.value =\r\n        zoneData.description || \"\";\r\n\r\n      const isEnabled = zoneData.enabled === \"1\";\r\n      CPManager.elements.zoneEditEnabledCheckbox.checked = isEnabled;\r\n      CPManager.elements.zoneEditEnabledText.textContent = isEnabled\r\n        ? \"Enabled\"\r\n        : \"Disabled\";\r\n\r\n      CPManager.elements.zoneEditAllowedAddressesTextarea.value =\r\n        formatForTextarea(zoneData.allowedAddresses);\r\n      CPManager.elements.zoneEditAllowedMACAddressesTextarea.value =\r\n        formatForTextarea(zoneData.allowedMACAddresses);\r\n\r\n      CPManager.elements.zoneEditHardTimeoutInput.value =\r\n        zoneData.hardtimeout || \"\";\r\n      CPManager.elements.zoneEditIdleTimeoutInput.value =\r\n        zoneData.idletimeout || \"\";\r\n\r\n      const concurrentLoginsAllowed = zoneData.concurrentlogins === \"1\";\r\n      CPManager.elements.zoneEditConcurrentLoginsCheckbox.checked =\r\n        concurrentLoginsAllowed;\r\n      CPManager.elements.zoneEditConcurrentLoginsText.textContent =\r\n        concurrentLoginsAllowed ? \"Allowed\" : \"Disallowed\";\r\n\r\n      const templateSelect = CPManager.elements.zoneEditTemplateSelect;\r\n      templateSelect.innerHTML = '<option value=\"\">-- Default --</option>';\r\n\r\n      CPManager.state.zones.customTemplates.forEach((template) => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = template.uuid;\r\n        option.textContent = template.name;\r\n        templateSelect.appendChild(option);\r\n      });\r\n\r\n      let selectedTemplateIdentifierFromZoneData = \"\";\r\n      if (typeof zoneData.template === \"object\" && zoneData.template !== null) {\r\n        for (const templateKey in zoneData.template) {\r\n          if (\r\n            zoneData.template[templateKey] &&\r\n            (zoneData.template[templateKey].selected === 1 ||\r\n              zoneData.template[templateKey].selected === \"1\")\r\n          ) {\r\n            selectedTemplateIdentifierFromZoneData = templateKey;\r\n            break;\r\n          }\r\n        }\r\n      } else if (typeof zoneData.template === \"string\" && zoneData.template) {\r\n        selectedTemplateIdentifierFromZoneData = zoneData.template;\r\n      }\r\n\r\n      if (\r\n        selectedTemplateIdentifierFromZoneData &&\r\n        CPManager.state.zones.customTemplates.some(\r\n          (t) => t.uuid === selectedTemplateIdentifierFromZoneData,\r\n        )\r\n      ) {\r\n        templateSelect.value = selectedTemplateIdentifierFromZoneData;\r\n      } else {\r\n        templateSelect.value = \"\";\r\n      }\r\n\r\n      const authServersSelect = CPManager.elements.zoneEditAuthServersSelect;\r\n      authServersSelect.innerHTML = \"\"; // Clear previous options\r\n\r\n      if (zoneData.authservers && typeof zoneData.authservers === \"object\") {\r\n        for (const serverName in zoneData.authservers) {\r\n          // The key of the object is the server name\r\n          if (\r\n            Object.prototype.hasOwnProperty.call(\r\n              zoneData.authservers,\r\n              serverName,\r\n            )\r\n          ) {\r\n            const serverDetails = zoneData.authservers[serverName];\r\n            const option = document.createElement(\"option\");\r\n            option.value = serverDetails.value; // The value is the name\r\n            option.textContent = serverDetails.value; // Display the name\r\n            // Mark the option as selected if the 'selected' flag is 1\r\n            if (\r\n              serverDetails.selected === 1 ||\r\n              serverDetails.selected === \"1\"\r\n            ) {\r\n              option.selected = true;\r\n            }\r\n            authServersSelect.appendChild(option);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    saveZoneSettings: async function () {\r\n      if (\r\n        !CPManager.elements.editZoneUuidInput ||\r\n        !CPManager.elements.submitEditZoneBtn\r\n      ) {\r\n        CPManager.ui.showToast(\r\n          \"Zone UUID is missing or save button not found. Cannot save.\",\r\n          \"error\",\r\n        );\r\n        console.error(\r\n          \"Missing UUID input or submit button in saveZoneSettings.\",\r\n        );\r\n        return;\r\n      }\r\n      const uuid = CPManager.elements.editZoneUuidInput.value;\r\n      const selectedAuthServers = Array.from(\r\n        CPManager.elements.zoneEditAuthServersSelect.selectedOptions,\r\n      ).map((opt) => opt.value);\r\n      const zoneSettingsToUpdate = {\r\n        description: CPManager.elements.zoneEditDescriptionInput.value.trim(),\r\n        enabled: CPManager.elements.zoneEditEnabledCheckbox.checked ? \"1\" : \"0\",\r\n        allowedAddresses:\r\n          CPManager.elements.zoneEditAllowedAddressesTextarea.value.replace(\r\n            /\\s+/g,\r\n            \"\",\r\n          ),\r\n        allowedMACAddresses:\r\n          CPManager.elements.zoneEditAllowedMACAddressesTextarea.value\r\n            .replace(/\\s+/g, \"\")\r\n            .toLowerCase(),\r\n        hardtimeout:\r\n          CPManager.elements.zoneEditHardTimeoutInput.value.trim() || \"0\",\r\n        idletimeout:\r\n          CPManager.elements.zoneEditIdleTimeoutInput.value.trim() || \"0\",\r\n        concurrentlogins: CPManager.elements.zoneEditConcurrentLoginsCheckbox\r\n          .checked\r\n          ? \"1\"\r\n          : \"0\",\r\n        template: CPManager.elements.zoneEditTemplateSelect.value || \"\",\r\n        authservers: selectedAuthServers.join(\",\"),\r\n      };\r\n\r\n      const finalApiPayload = {\r\n        zone: zoneSettingsToUpdate,\r\n      };\r\n\r\n      CPManager.elements.submitEditZoneBtn.disabled = true;\r\n      CPManager.elements.submitEditZoneBtn.innerHTML =\r\n        '<i class=\"fas fa-spinner fa-spin mr-2\"></i>Saving...';\r\n\r\n      try {\r\n        const result = await CPManager.api.callApi(\r\n          `/settings/set_zone/${uuid}`,\r\n          \"POST\",\r\n          finalApiPayload,\r\n        );\r\n\r\n        if (result && result.result === \"saved\") {\r\n          CPManager.ui.showToast(\r\n            `Zone settings updated for \"${zoneSettingsToUpdate.description || uuid.substring(0, 8)}\".`,\r\n            \"success\",\r\n          );\r\n          CPManager.ui.hideModal(CPManager.elements.editZoneModal);\r\n          CPManager.state.zones.originalFullDataForEdit = null;\r\n          CPManager.state.zones.currentPage = 1; // Reset page\r\n          await CPManager.zones.loadZoneInfo(true);\r\n\r\n          CPManager.ui.showToast(\r\n            \"Applying changes by reconfiguring service...\",\r\n            \"info\",\r\n            7000,\r\n          );\r\n          const reconfigResult = await CPManager.api.callApi(\r\n            \"/service/reconfigure\",\r\n            \"POST\",\r\n            {},\r\n          );\r\n          if (\r\n            reconfigResult &&\r\n            (reconfigResult.status === \"ok\" ||\r\n              (reconfigResult.message &&\r\n                reconfigResult.message.toLowerCase().includes(\"ok\")))\r\n          ) {\r\n            CPManager.ui.showToast(\r\n              \"Captive portal service reconfigured successfully.\",\r\n              \"success\",\r\n            );\r\n          } else {\r\n            CPManager.ui.showToast(\r\n              `Service reconfigure status: ${\r\n                reconfigResult\r\n                  ? reconfigResult.status ||\r\n                    reconfigResult.message ||\r\n                    JSON.stringify(reconfigResult)\r\n                  : \"Unknown\"\r\n              }. Manual check may be needed.`,\r\n              \"warning\",\r\n              10000,\r\n            );\r\n          }\r\n        } else {\r\n          let errorMessage = `Failed to save zone settings: ${\r\n            result?.message || result?.result || \"Unknown API error\"\r\n          }`;\r\n          if (result && result.validations) {\r\n            for (const key in result.validations) {\r\n              errorMessage += `\\n- ${key}: ${result.validations[key]}`;\r\n            }\r\n          }\r\n          CPManager.ui.showToast(errorMessage, \"error\", 10000);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error during saveZoneSettings:\", error.message);\r\n      } finally {\r\n        if (CPManager.elements.submitEditZoneBtn) {\r\n          CPManager.elements.submitEditZoneBtn.disabled = false;\r\n          CPManager.elements.submitEditZoneBtn.innerHTML = \"Save Changes\";\r\n        } else {\r\n          console.error(\r\n            \"submitEditZoneBtn is null in finally block of saveZoneSettings. Cannot re-enable.\",\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    initializeZoneEventListeners: function () {\r\n      if (CPManager.elements.zoneListContainer) {\r\n        CPManager.elements.zoneListContainer.addEventListener(\r\n          \"click\",\r\n          async (e) => {\r\n            // Check if the click was on the \"Edit\" button first\r\n            const editButton = e.target.closest('[data-action=\"edit-zone\"]');\r\n            if (editButton) {\r\n              e.stopPropagation(); // Prevent the card from toggling\r\n              const uuid = editButton.dataset.uuid;\r\n              if (uuid) {\r\n                CPManager.zones.fetchAndOpenEditZoneModal(uuid);\r\n              } else {\r\n                console.error(\r\n                  \"Edit button clicked but no UUID found on dataset.\",\r\n                );\r\n              }\r\n              return; // Stop further processing\r\n            }\r\n\r\n            // If not the edit button, check if a card was clicked\r\n            const card = e.target.closest(\".zone-info-card\");\r\n            if (card) {\r\n              // Proceed with the original handler function to toggle and fetch data\r\n              const detailsContent = card.querySelector(\r\n                \".card-details-content\",\r\n              );\r\n              const summaryElement = card.querySelector(\".zone-summary\");\r\n              this.handleZoneCardClick(card, detailsContent, summaryElement);\r\n            }\r\n          },\r\n        );\r\n      }\r\n\r\n      if (CPManager.elements.submitEditZoneBtn) {\r\n        if (!CPManager.elements.submitEditZoneBtn.dataset.listenerAttached) {\r\n          CPManager.elements.submitEditZoneBtn.addEventListener(\r\n            \"click\",\r\n            function () {\r\n              console.log(\r\n                \"Save Changes button clicked (via initialized listener).\",\r\n              );\r\n              CPManager.zones.saveZoneSettings();\r\n            },\r\n          );\r\n          CPManager.elements.submitEditZoneBtn.dataset.listenerAttached =\r\n            \"true\";\r\n        }\r\n      } else {\r\n        console.error(\r\n          \"Submit Edit Zone Button (CPManager.elements.submitEditZoneBtn) not found during initializeZoneEventListeners.\",\r\n        );\r\n      }\r\n\r\n      if (CPManager.elements.cancelEditZoneBtn) {\r\n        if (!CPManager.elements.cancelEditZoneBtn.dataset.listenerAttached) {\r\n          CPManager.elements.cancelEditZoneBtn.addEventListener(\"click\", () => {\r\n            CPManager.ui.hideModal(CPManager.elements.editZoneModal);\r\n            CPManager.state.zones.originalFullDataForEdit = null;\r\n          });\r\n          CPManager.elements.cancelEditZoneBtn.dataset.listenerAttached =\r\n            \"true\";\r\n        }\r\n      } else {\r\n        console.error(\r\n          \"Cancel Edit Zone Button (CPManager.elements.cancelEditZoneBtn) not found during initializeZoneEventListeners.\",\r\n        );\r\n      }\r\n\r\n      if (\r\n        CPManager.elements.zoneEditEnabledCheckbox &&\r\n        CPManager.elements.zoneEditEnabledText\r\n      ) {\r\n        if (\r\n          !CPManager.elements.zoneEditEnabledCheckbox.dataset.listenerAttached\r\n        ) {\r\n          CPManager.elements.zoneEditEnabledCheckbox.addEventListener(\r\n            \"change\",\r\n            function () {\r\n              CPManager.elements.zoneEditEnabledText.textContent = this.checked\r\n                ? \"Enabled\"\r\n                : \"Disabled\";\r\n            },\r\n          );\r\n          CPManager.elements.zoneEditEnabledCheckbox.dataset.listenerAttached =\r\n            \"true\";\r\n        }\r\n      }\r\n      if (\r\n        CPManager.elements.zoneEditConcurrentLoginsCheckbox &&\r\n        CPManager.elements.zoneEditConcurrentLoginsText\r\n      ) {\r\n        if (\r\n          !CPManager.elements.zoneEditConcurrentLoginsCheckbox.dataset\r\n            .listenerAttached\r\n        ) {\r\n          CPManager.elements.zoneEditConcurrentLoginsCheckbox.addEventListener(\r\n            \"change\",\r\n            function () {\r\n              CPManager.elements.zoneEditConcurrentLoginsText.textContent = this\r\n                .checked\r\n                ? \"Allowed\"\r\n                : \"Disallowed\";\r\n            },\r\n          );\r\n          CPManager.elements.zoneEditConcurrentLoginsCheckbox.dataset.listenerAttached =\r\n            \"true\";\r\n        }\r\n      }\r\n    },\r\n  };\r\n})(CPManager);\r\n","// js/tabs.js\r\n\r\n(function (CPManager) {\r\n  CPManager.tabs = {\r\n    /**\r\n     * Sets the active tab and corresponding content pane.\r\n     * Handles visual styling of tab buttons and visibility of tab content.\r\n     * Also triggers data loading functions for the newly active tab.\r\n     * @param {string} tabId - The ID of the tab to activate (e.g., 'dashboard', 'sessions').\r\n     * @param {boolean} [forceRefreshData=false] - If true, forces data re-fetch for the tab.\r\n     */\r\n    setActiveTab: function (tabId, forceRefreshData = false) {\r\n      if (!CPManager.elements.mainTabs || !CPManager.elements.tabPanes[tabId]) {\r\n        console.error(`Tab or tab pane not found for ID: ${tabId}`);\r\n        return;\r\n      }\r\n\r\n      // Update tab button styles\r\n      CPManager.elements.mainTabs\r\n        .querySelectorAll(\".tab-btn\")\r\n        .forEach((btn) => {\r\n          if (btn.dataset.tab === tabId) {\r\n            btn.classList.add(\"active\", \"text-primary\", \"border-primary\");\r\n            btn.classList.remove(\r\n              \"border-transparent\",\r\n              \"text-muted-foreground\",\r\n              \"hover:text-foreground\",\r\n              \"hover:border-muted\",\r\n            );\r\n            btn.setAttribute(\"aria-selected\", \"true\"); // Accessibility\r\n          } else {\r\n            btn.classList.remove(\"active\", \"text-primary\", \"border-primary\");\r\n            btn.classList.add(\r\n              \"border-transparent\",\r\n              \"text-muted-foreground\",\r\n              \"hover:text-foreground\",\r\n              \"hover:border-muted\",\r\n            );\r\n            btn.setAttribute(\"aria-selected\", \"false\"); // Accessibility\r\n          }\r\n        });\r\n\r\n      // Show/hide tab content panes\r\n      Object.keys(CPManager.elements.tabPanes).forEach((paneKey) => {\r\n        if (CPManager.elements.tabPanes[paneKey]) {\r\n          if (paneKey === tabId) {\r\n            CPManager.elements.tabPanes[paneKey].classList.remove(\"hidden\");\r\n            CPManager.elements.tabPanes[paneKey].classList.add(\"active\");\r\n            CPManager.elements.tabPanes[paneKey].removeAttribute(\"hidden\"); // Accessibility\r\n          } else {\r\n            CPManager.elements.tabPanes[paneKey].classList.add(\"hidden\");\r\n            CPManager.elements.tabPanes[paneKey].classList.remove(\"active\");\r\n            CPManager.elements.tabPanes[paneKey].setAttribute(\"hidden\", \"\"); // Accessibility\r\n          }\r\n        }\r\n      });\r\n\r\n      // Trigger data loading for the active tab, passing forceRefreshData\r\n      switch (tabId) {\r\n        case \"dashboard\":\r\n          CPManager.dashboard.loadDashboardData(forceRefreshData);\r\n          break;\r\n        case \"sessions\":\r\n          CPManager.sessions.loadSessions(forceRefreshData);\r\n          break;\r\n        case \"vouchers\":\r\n          CPManager.vouchers.loadVoucherProviders(forceRefreshData);\r\n          break;\r\n        case \"info\": // Assuming 'info' is the Zones tab\r\n          CPManager.zones.loadZoneInfo(forceRefreshData);\r\n          break;\r\n        default:\r\n          console.warn(`No specific load function for tab: ${tabId}`);\r\n      }\r\n\r\n      // Save the active tab to localStorage for persistence\r\n      try {\r\n        localStorage.setItem(\r\n          CPManager.config.localStorageKeys.activeTab,\r\n          tabId,\r\n        );\r\n      } catch (e) {\r\n        console.warn(\"Could not save active tab to localStorage:\", e.message);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Initializes tab functionality by adding an event listener to the main tabs container.\r\n     */\r\n    initializeTabs: function () {\r\n      if (CPManager.elements.mainTabs) {\r\n        CPManager.elements.mainTabs.addEventListener(\"click\", (e) => {\r\n          const tabButton = e.target.closest(\".tab-btn\");\r\n          if (tabButton && tabButton.dataset.tab) {\r\n            e.preventDefault(); // Prevent default anchor behavior\r\n            CPManager.tabs.setActiveTab(tabButton.dataset.tab, false);\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"Main tabs container (mainTabs) not found.\");\r\n      }\r\n    },\r\n  };\r\n})(CPManager);\r\n","// js/notifications.js\r\n\r\n(function (CPManager) {\r\n  CPManager.notifications = {\r\n    requestNotificationPermission: async function () {\r\n      if (!(\"Notification\" in window)) {\r\n        CPManager.ui.showToast(\r\n          \"Browser does not support desktop notification\",\r\n          \"error\",\r\n        );\r\n        return;\r\n      }\r\n\r\n      const permission = await Notification.requestPermission();\r\n      if (permission === \"granted\") {\r\n        CPManager.ui.showToast(\"Sign-in notifications enabled!\", \"success\");\r\n        if (CPManager.state.currentApiKey && CPManager.state.currentApiSecret) {\r\n          CPManager.notifications.startSessionPolling();\r\n          CPManager.state.notifications.consecutivePollErrors = 0;\r\n          CPManager.notifications.updateNotificationToggleState(true, false);\r\n        } else {\r\n          CPManager.ui.showToast(\r\n            \"API credentials not set. Cannot start polling.\",\r\n            \"warning\",\r\n          );\r\n          CPManager.notifications.updateNotificationToggleState(false, false);\r\n        }\r\n      } else {\r\n        CPManager.ui.showToast(\r\n          \"Sign-in notifications permission denied.\",\r\n          \"warning\",\r\n        );\r\n        CPManager.notifications.stopSessionPolling();\r\n        CPManager.notifications.updateNotificationToggleState(false, false);\r\n      }\r\n    },\r\n\r\n    checkForNewSessionsAndNotify: async function () {\r\n      if (Notification.permission !== \"granted\") {\r\n        CPManager.notifications.stopSessionPolling();\r\n        CPManager.notifications.updateNotificationToggleState(false, false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const data = await CPManager.api.callApi(\"/session/search\");\r\n        if (data && Array.isArray(data.rows)) {\r\n          CPManager.state.notifications.consecutivePollErrors = 0;\r\n          if (\r\n            document.getElementById(\"notifications-toggle-btn\")?.dataset\r\n              .errorState === \"true\"\r\n          ) {\r\n            CPManager.notifications.updateNotificationToggleState(true, false);\r\n          }\r\n\r\n          const currentSessionIds = new Set(\r\n            data.rows.map((session) => session.sessionId),\r\n          );\r\n          if (CPManager.state.notifications.isFirstPoll) {\r\n            CPManager.state.notifications.previousSessionIds =\r\n              currentSessionIds;\r\n            CPManager.state.notifications.isFirstPoll = false;\r\n            return;\r\n          }\r\n\r\n          const newSessions = data.rows.filter(\r\n            (session) =>\r\n              !CPManager.state.notifications.previousSessionIds.has(\r\n                session.sessionId,\r\n              ),\r\n          );\r\n          if (newSessions.length > 0) {\r\n            newSessions.forEach((session) => {\r\n              const zoneDesc =\r\n                CPManager.utils.getZoneDescription(session.zoneid) ||\r\n                `Zone ${session.zoneid}`;\r\n              const title = \"New Captive Portal Sign-in\";\r\n              const body = `User ${session.userName || session.ipAddress} connected to ${zoneDesc}.`;\r\n              const icon = \"icons/icon-192x192.png\";\r\n              if (navigator.serviceWorker.controller) {\r\n                navigator.serviceWorker.controller.postMessage({\r\n                  type: \"SHOW_NOTIFICATION\",\r\n                  payload: { title, body, icon, id: session.sessionId },\r\n                });\r\n              }\r\n            });\r\n          }\r\n          CPManager.state.notifications.previousSessionIds = new Set(\r\n            currentSessionIds,\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error polling for new sessions:\", error.message);\r\n        CPManager.state.notifications.consecutivePollErrors++;\r\n        if (\r\n          CPManager.state.notifications.consecutivePollErrors >=\r\n          CPManager.state.notifications.MAX_POLL_ERRORS_BEFORE_DISABLE\r\n        ) {\r\n          CPManager.ui.showToast(\r\n            `Disabling notifications due to ${CPManager.state.notifications.MAX_POLL_ERRORS_BEFORE_DISABLE} API errors.`,\r\n            \"error\",\r\n            8000,\r\n          );\r\n          CPManager.notifications.stopSessionPolling();\r\n          CPManager.notifications.updateNotificationToggleState(false, true);\r\n        }\r\n      }\r\n    },\r\n\r\n    startSessionPolling: function () {\r\n      if (CPManager.state.notifications.sessionPollIntervalId) return;\r\n      if (Notification.permission !== \"granted\") return;\r\n\r\n      CPManager.state.notifications.isFirstPoll = true;\r\n      CPManager.state.notifications.previousSessionIds.clear();\r\n      CPManager.state.notifications.consecutivePollErrors = 0;\r\n\r\n      const currentInterval = document.hidden\r\n        ? CPManager.state.notifications.POLLING_INTERVAL_HIDDEN_TAB\r\n        : CPManager.state.notifications.POLLING_INTERVAL;\r\n      CPManager.notifications.checkForNewSessionsAndNotify().finally(() => {\r\n        if (\r\n          Notification.permission === \"granted\" &&\r\n          !CPManager.state.notifications.sessionPollIntervalId\r\n        ) {\r\n          CPManager.state.notifications.sessionPollIntervalId = setInterval(\r\n            CPManager.notifications.checkForNewSessionsAndNotify,\r\n            currentInterval,\r\n          );\r\n        }\r\n      });\r\n    },\r\n\r\n    stopSessionPolling: function () {\r\n      if (CPManager.state.notifications.sessionPollIntervalId) {\r\n        clearInterval(CPManager.state.notifications.sessionPollIntervalId);\r\n        CPManager.state.notifications.sessionPollIntervalId = null;\r\n      }\r\n    },\r\n\r\n    updateNotificationToggleState: function (isEnabled, isErrorState = false) {\r\n      const toggleButton = document.getElementById(\"notifications-toggle-btn\");\r\n      if (toggleButton) {\r\n        if (isErrorState) {\r\n          toggleButton.innerHTML =\r\n            '<i class=\"fas fa-exclamation-triangle text-danger\"></i>';\r\n          toggleButton.setAttribute(\r\n            \"aria-label\",\r\n            \"Notifications disabled (errors). Click to re-try.\",\r\n          );\r\n          toggleButton.dataset.errorState = \"true\";\r\n        } else if (isEnabled) {\r\n          toggleButton.innerHTML = '<i class=\"fas fa-bell\"></i>';\r\n          toggleButton.setAttribute(\r\n            \"aria-label\",\r\n            \"Disable sign-in notifications\",\r\n          );\r\n          toggleButton.dataset.errorState = \"false\";\r\n        } else {\r\n          toggleButton.innerHTML = '<i class=\"fas fa-bell-slash\"></i>';\r\n          toggleButton.setAttribute(\r\n            \"aria-label\",\r\n            \"Enable sign-in notifications\",\r\n          );\r\n          toggleButton.dataset.errorState = \"false\";\r\n        }\r\n        try {\r\n          localStorage.setItem(\r\n            CPManager.config.localStorageKeys.signInNotificationsEnabled,\r\n            isEnabled && !isErrorState ? \"true\" : \"false\",\r\n          );\r\n        } catch (e) {\r\n          console.warn(\r\n            \"Could not save notification preference to localStorage:\",\r\n            e.message,\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    handleVisibilityChange: function () {\r\n      if (\r\n        !CPManager.state.notifications.sessionPollIntervalId &&\r\n        localStorage.getItem(\r\n          CPManager.config.localStorageKeys.signInNotificationsEnabled,\r\n        ) !== \"true\"\r\n      ) {\r\n        return;\r\n      }\r\n      if (CPManager.state.notifications.sessionPollIntervalId) {\r\n        clearInterval(CPManager.state.notifications.sessionPollIntervalId);\r\n        CPManager.state.notifications.sessionPollIntervalId = null;\r\n      }\r\n      if (document.hidden) {\r\n        if (Notification.permission === \"granted\") {\r\n          CPManager.state.notifications.sessionPollIntervalId = setInterval(\r\n            CPManager.notifications.checkForNewSessionsAndNotify,\r\n            CPManager.state.notifications.POLLING_INTERVAL_HIDDEN_TAB,\r\n          );\r\n        }\r\n      } else {\r\n        if (\r\n          localStorage.getItem(\r\n            CPManager.config.localStorageKeys.signInNotificationsEnabled,\r\n          ) === \"true\" &&\r\n          Notification.permission === \"granted\"\r\n        ) {\r\n          CPManager.notifications.startSessionPolling();\r\n        }\r\n      }\r\n    },\r\n\r\n    initializeNotifications: function () {\r\n      const storedPreference = localStorage.getItem(\r\n        CPManager.config.localStorageKeys.signInNotificationsEnabled,\r\n      );\r\n      const permissionGranted = Notification.permission === \"granted\";\r\n\r\n      if (storedPreference === \"true\" && permissionGranted) {\r\n        CPManager.notifications.startSessionPolling();\r\n        CPManager.notifications.updateNotificationToggleState(true, false);\r\n      } else if (\r\n        storedPreference === \"true\" &&\r\n        Notification.permission === \"default\"\r\n      ) {\r\n        CPManager.notifications.requestNotificationPermission();\r\n      } else {\r\n        CPManager.notifications.updateNotificationToggleState(false, false);\r\n      }\r\n      document.addEventListener(\r\n        \"visibilitychange\",\r\n        CPManager.notifications.handleVisibilityChange,\r\n      );\r\n    },\r\n  };\r\n})(CPManager);\r\n","// js/api.js\r\n\r\n(function (CPManager) {\r\n  CPManager.api = {\r\n    /**\r\n     * Makes an API call to the OPNsense Captive Portal backend.\r\n     * Handles authorization, request method, body, and basic error handling.\r\n     * @param {string} endpoint - The API endpoint (e.g., '/session/search').\r\n     * @param {string} [method='GET'] - HTTP method (GET, POST, etc.).\r\n     * @param {object|null} [body=null] - The request body for POST/PUT requests.\r\n     * @returns {Promise<object>} A promise that resolves with the JSON response from the API.\r\n     * @throws {Error} Throws an error if the API call fails or returns an error status.\r\n     */\r\n    callApi: async function (endpoint, method = \"GET\", body = null) {\r\n      // Add check for baseUrl\r\n      if (!CPManager.config.baseUrl) {\r\n        const errorMessage =\r\n          \"OPNsense API Base URL is not configured. Cannot make API call.\";\r\n        console.error(errorMessage, \"Endpoint:\", endpoint); // Log the error\r\n        CPManager.ui.showToast(\r\n          \"API Base URL not set. Please configure in settings.\",\r\n          \"error\",\r\n          8000,\r\n        );\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      const url = `${CPManager.config.baseUrl}/api/captiveportal${endpoint}`;\r\n      const headers = new Headers();\r\n\r\n      if (CPManager.state.currentApiKey && CPManager.state.currentApiSecret) {\r\n        headers.append(\r\n          \"Authorization\",\r\n          \"Basic \" +\r\n            btoa(\r\n              CPManager.state.currentApiKey +\r\n                \":\" +\r\n                CPManager.state.currentApiSecret,\r\n            ),\r\n        );\r\n      } else {\r\n        const errorMessage =\r\n          \"API Key or Secret is missing. Cannot make API call.\";\r\n        console.error(errorMessage, \"Endpoint:\", endpoint); // Log the error\r\n        CPManager.ui.showToast(\r\n          \"API Key or Secret not set. Please configure in settings.\",\r\n          \"error\",\r\n        );\r\n        throw new Error(\"API Key or Secret not set.\");\r\n      }\r\n\r\n      if (method === \"POST\" && body) {\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n      }\r\n\r\n      const options = { method, headers };\r\n      if (body) {\r\n        options.body = JSON.stringify(body);\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(url, options);\r\n        const responseText = await response.text(); // Get text first to handle various response types\r\n\r\n        if (!response.ok) {\r\n          let errorData = {\r\n            message: `HTTP error! Status: ${response.status}.`,\r\n          };\r\n          if (responseText) {\r\n            try {\r\n              // Attempt to parse as JSON for more detailed error messages\r\n              const parsedError = JSON.parse(responseText);\r\n              errorData.detail =\r\n                parsedError.message ||\r\n                parsedError.detail ||\r\n                JSON.stringify(parsedError);\r\n            } catch (jsonParseError) {\r\n              // Caught error from JSON.parse is logged here\r\n              errorData.detail =\r\n                responseText.substring(0, 200) +\r\n                (responseText.length > 200 ? \"...\" : \"\");\r\n              console.error(\r\n                `Failed to parse error response as JSON for ${method} ${url}:`,\r\n                jsonParseError,\r\n                \"Raw response:\",\r\n                responseText,\r\n              );\r\n            }\r\n          } else {\r\n            errorData.detail =\r\n              response.statusText || \"No response body from server.\";\r\n          }\r\n          console.error(\r\n            \"API Error:\",\r\n            method,\r\n            url,\r\n            response.status,\r\n            errorData.detail,\r\n            { response, responseText }, // Include response objects for full context\r\n          );\r\n          CPManager.ui.showToast(\r\n            `API Error: ${errorData.message} ${errorData.detail}`,\r\n            \"error\",\r\n          );\r\n          throw new Error(\r\n            `HTTP error! status: ${response.status}, message: ${errorData.detail}`,\r\n          );\r\n        }\r\n\r\n        // Handle successful responses that might not have content (e.g., 204 No Content)\r\n        // or text responses that indicate success.\r\n        if (response.status === 204 || !responseText) {\r\n          console.info(\r\n            `API Success: ${method} ${url} - No content or empty response.`,\r\n          ); // Info log for success\r\n          return {\r\n            status: \"ok\",\r\n            message: `Operation successful (${response.status === 204 ? \"No Content\" : \"Empty Response\"})`,\r\n          };\r\n        }\r\n\r\n        try {\r\n          // Attempt to parse successful response as JSON\r\n          const jsonData = JSON.parse(responseText);\r\n          // Check for application-level errors within a 2xx response\r\n          if (jsonData && jsonData.status === \"error\") {\r\n            console.warn(\r\n              `API Operational Error for ${method} ${url}:`,\r\n              jsonData.message || \"Error status received in JSON.\",\r\n              { jsonData }, // Log the problematic JSON data\r\n            );\r\n            CPManager.ui.showToast(\r\n              `API Operation Failed: ${jsonData.message || \"Error status received.\"}`,\r\n              \"warning\",\r\n            );\r\n          } else {\r\n            console.info(`API Success: ${method} ${url}`, { jsonData }); // Info log for successful JSON response\r\n          }\r\n          return jsonData;\r\n        } catch (jsonParseError) {\r\n          // Catch and log specific JSON parsing error\r\n          // If parsing JSON fails but response was OK, it might be a simple text confirmation\r\n          if (\r\n            response.ok &&\r\n            (responseText.toLowerCase().includes(\"ok\") ||\r\n              responseText.toLowerCase().includes(\"saved\") ||\r\n              responseText.toLowerCase().includes(\"deleted\") ||\r\n              responseText.toLowerCase().includes(\"success\"))\r\n          ) {\r\n            console.info(\r\n              `API Success: ${method} ${url} - Text confirmation:`,\r\n              responseText,\r\n            );\r\n            return { status: \"ok_text\", message: responseText };\r\n          }\r\n          // If it's not recognized text and not JSON, log a warning.\r\n          console.warn(\r\n            `API Warning for ${method} ${url}: Successful response was not valid JSON and not recognized text. JSON parse error:`,\r\n            jsonParseError,\r\n            \"Content snippet:\",\r\n            responseText.substring(0, 100),\r\n          );\r\n          return { status: \"ok_non_json\", message: responseText }; // Return the raw text\r\n        }\r\n      } catch (fetchOrProcessError) {\r\n        // Catch network errors or re-thrown errors from internal checks\r\n        console.error(\r\n          `Fetch/Process Error for ${method} ${url}:`,\r\n          fetchOrProcessError.message,\r\n          fetchOrProcessError, // Log the full error object for more details\r\n        );\r\n        if (!String(fetchOrProcessError.message).startsWith(\"HTTP error!\")) {\r\n          // Check if it's not already an HTTP error we've handled\r\n          let userMessage =\r\n            \"API request failed. This could be a network issue, or the OPNsense server might be unavailable or misconfigured.\";\r\n          // The 'Failed to fetch' message is very common for CORS issues or actual network failures.\r\n          if (\r\n            CPManager.config.baseUrl &&\r\n            CPManager.config.baseUrl.startsWith(\"http\") &&\r\n            !CPManager.config.baseUrl.includes(window.location.origin)\r\n          ) {\r\n            userMessage +=\r\n              \" If the app is hosted on a different domain than OPNsense, please check server's CORS configuration.\";\r\n          }\r\n          userMessage +=\r\n            \" More details may be available in the browser's developer console.\";\r\n          CPManager.ui.showToast(userMessage, \"error\", 8000); // Increased duration for more text\r\n        }\r\n        throw fetchOrProcessError; // Re-throw the error to be caught by the caller\r\n      }\r\n    },\r\n  };\r\n})(window.CPManager); // Explicitly pass window.CPManager\r\n","// js/vouchers.js\r\nimport { jsPDF } from \"jspdf\";\r\nimport { autoTable } from \"jspdf-autotable\";\r\n\r\n(function (CPManager) {\r\n  CPManager.vouchers = {\r\n    selectedVouchers: new Set(),\r\n    currentlyVisibleVouchers: [],\r\n\r\n    displayProviderZoneLinkage: async function () {\r\n      const detailsContainer = CPManager.elements.providerZoneLinkageDetails;\r\n      if (!detailsContainer) {\r\n        console.warn(\"Provider zone linkage details container not found.\");\r\n        return;\r\n      }\r\n      detailsContainer.innerHTML =\r\n        '<p class=\"text-muted-foreground\"><i class=\"fas fa-spinner fa-spin mr-2\"></i>Loading linkage information...</p>';\r\n      try {\r\n        if (CPManager.state.zones.allConfigured.length === 0) {\r\n          await CPManager.zones.fetchAllZoneData();\r\n        }\r\n        if (CPManager.state.vouchers.cachedProviders.length === 0) {\r\n          const providers = await CPManager.api.callApi(\r\n            \"/voucher/list_providers\",\r\n          );\r\n          CPManager.state.vouchers.cachedProviders = Array.isArray(providers)\r\n            ? providers\r\n            : [];\r\n        }\r\n        const configuredVoucherProviders =\r\n          CPManager.state.vouchers.cachedProviders;\r\n        const providerToZonesMap = {};\r\n        if (\r\n          CPManager.state.zones.allConfigured.length > 0 &&\r\n          configuredVoucherProviders.length > 0\r\n        ) {\r\n          for (const zoneSummary of CPManager.state.zones.allConfigured) {\r\n            if (!zoneSummary.uuid) continue;\r\n            try {\r\n              const zoneDetailsResponse = await CPManager.api.callApi(\r\n                `/settings/get_zone/${zoneSummary.uuid}`,\r\n              );\r\n              if (zoneDetailsResponse?.zone?.authservers) {\r\n                const authServersField = zoneDetailsResponse.zone.authservers;\r\n                let selectedAuthServers = [];\r\n                if (\r\n                  typeof authServersField === \"object\" &&\r\n                  authServersField !== null &&\r\n                  !Array.isArray(authServersField)\r\n                ) {\r\n                  const formatted =\r\n                    CPManager.utils.formatOpnsenseSelectable(authServersField);\r\n                  if (formatted) {\r\n                    selectedAuthServers = formatted\r\n                      .split(\",\")\r\n                      .map((s) => s.trim())\r\n                      .filter(Boolean);\r\n                  }\r\n                } else if (\r\n                  typeof authServersField === \"string\" &&\r\n                  authServersField.trim() !== \"\"\r\n                ) {\r\n                  selectedAuthServers = authServersField\r\n                    .split(\",\")\r\n                    .map((s) => s.trim())\r\n                    .filter(Boolean);\r\n                } else if (Array.isArray(authServersField)) {\r\n                  selectedAuthServers = authServersField\r\n                    .map((s) => String(s).trim())\r\n                    .filter(Boolean);\r\n                }\r\n                const zoneName =\r\n                  zoneSummary.description || `Zone ${zoneSummary.zoneid}`;\r\n                selectedAuthServers.forEach((serverName) => {\r\n                  if (configuredVoucherProviders.includes(serverName)) {\r\n                    if (!providerToZonesMap[serverName]) {\r\n                      providerToZonesMap[serverName] = new Set();\r\n                    }\r\n                    providerToZonesMap[serverName].add(zoneName);\r\n                  }\r\n                });\r\n              }\r\n            } catch (detailError) {\r\n              console.warn(\r\n                `Could not fetch details for zone ${zoneSummary.uuid} for linkage card:`,\r\n                detailError,\r\n              ); // Added error logging\r\n            }\r\n          }\r\n        }\r\n        const providersActuallyUsedByZones = Object.keys(\r\n          providerToZonesMap,\r\n        ).filter((providerName) => providerToZonesMap[providerName].size > 0);\r\n        if (providersActuallyUsedByZones.length === 0) {\r\n          detailsContainer.innerHTML =\r\n            '<p class=\"text-muted-foreground\">No voucher providers are currently linked to any active zones.</p>';\r\n        } else {\r\n          let listHtml = '<ul class=\"space-y-3\">';\r\n          providersActuallyUsedByZones.forEach((providerName) => {\r\n            const zonesList = Array.from(providerToZonesMap[providerName])\r\n              .map(\r\n                (zn) =>\r\n                  `<li><i class=\"fas fa-layer-group text-xs mr-1 text-muted\"></i>${zn}</li>`,\r\n              )\r\n              .join(\"\");\r\n            listHtml += `<li class=\"border-b border-border border-dashed pb-2 last:border-b-0 last:pb-0\"><span class=\"font-semibold text-foreground\">${providerName}</span> is linked to:<ul class=\"list-none pl-4 mt-1 text-xs space-y-1\">${zonesList}</ul></li>`;\r\n          });\r\n          listHtml += \"</ul>\";\r\n          detailsContainer.innerHTML = listHtml;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error displaying provider-zone linkage:\", error); // Added error logging\r\n        detailsContainer.innerHTML =\r\n          '<p class=\"text-danger\">Could not load linkage information. Check console.</p>';\r\n      }\r\n    },\r\n\r\n    initializeProviderZoneLinkageCard: function () {\r\n      const card = CPManager.elements.providerZoneLinkageCard;\r\n      if (!card || card.dataset.listenerAttached === \"true\") return;\r\n\r\n      const summaryElement = card.querySelector(\".voucher-summary\");\r\n      const detailsContent = CPManager.elements.providerZoneLinkageDetails;\r\n\r\n      if (summaryElement && detailsContent) {\r\n        summaryElement.addEventListener(\"click\", () => {\r\n          CPManager.ui.toggleCardDetails(card);\r\n          const isExpanded = detailsContent.classList.contains(\"expanded\");\r\n          if (isExpanded && detailsContent.innerHTML.includes(\"Loading\")) {\r\n            this.displayProviderZoneLinkage();\r\n          }\r\n        });\r\n\r\n        summaryElement.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\" || e.key === \" \") {\r\n            e.preventDefault();\r\n            summaryElement.click();\r\n          }\r\n        });\r\n        card.dataset.listenerAttached = \"true\";\r\n      }\r\n    },\r\n\r\n    loadVoucherProviders: async function (forceRefresh = false) {\r\n      if (!CPManager.elements.voucherProviderSelect) return;\r\n      CPManager.state.vouchers.currentPage = 1;\r\n      this.initializeProviderZoneLinkageCard();\r\n      const detailsContainer = CPManager.elements.providerZoneLinkageDetails;\r\n      if (\r\n        detailsContainer &&\r\n        detailsContainer.classList.contains(\"expanded\") &&\r\n        forceRefresh\r\n      ) {\r\n        await this.displayProviderZoneLinkage();\r\n      }\r\n      if (\r\n        !forceRefresh &&\r\n        CPManager.state.vouchers.cachedProviders.length > 0 &&\r\n        Date.now() - CPManager.state.vouchers.lastFetchedProviders <\r\n          CPManager.config.inMemoryCacheTTLMinutes * 60 * 1000\r\n      ) {\r\n        this.populateVoucherProviderSelect(\r\n          CPManager.state.vouchers.cachedProviders,\r\n        );\r\n        if (CPManager.elements.voucherProviderSelect.value) {\r\n          this.handleProviderSelection(\r\n            CPManager.elements.voucherProviderSelect.value,\r\n          );\r\n        }\r\n        return;\r\n      }\r\n      CPManager.elements.voucherProviderSelect.innerHTML =\r\n        '<option value=\"\">Loading providers...</option>';\r\n      if (CPManager.elements.voucherGroupSelect)\r\n        CPManager.elements.voucherGroupSelect.innerHTML =\r\n          '<option value=\"\">Select provider...</option>';\r\n      if (CPManager.elements.voucherCardContainer)\r\n        CPManager.ui.clearContainer(\r\n          CPManager.elements.voucherCardContainer,\r\n          \"voucher-pagination\",\r\n        );\r\n      if (CPManager.elements.voucherSearchInput)\r\n        CPManager.elements.voucherSearchInput.value = \"\";\r\n      if (CPManager.elements.voucherStateFilterSelect)\r\n        CPManager.elements.voucherStateFilterSelect.value = \"\";\r\n      CPManager.ui.disableVoucherActionButtons(true, true, true);\r\n      this.updateVoidSelectedButton();\r\n      try {\r\n        const providers = await CPManager.api.callApi(\r\n          \"/voucher/list_providers\",\r\n        );\r\n        if (Array.isArray(providers)) {\r\n          CPManager.state.vouchers.cachedProviders = providers;\r\n          CPManager.state.vouchers.lastFetchedProviders = Date.now();\r\n          this.populateVoucherProviderSelect(providers);\r\n          if (\r\n            detailsContainer &&\r\n            detailsContainer.classList.contains(\"expanded\")\r\n          ) {\r\n            await this.displayProviderZoneLinkage();\r\n          }\r\n        } else {\r\n          CPManager.state.vouchers.cachedProviders = [];\r\n          CPManager.ui.showToast(\r\n            \"Could not load voucher providers: unexpected format.\",\r\n            \"error\",\r\n          );\r\n          console.error(\r\n            \"Voucher providers API returned unexpected format:\",\r\n            providers,\r\n          );\r\n        }\r\n      } catch (error) {\r\n        CPManager.state.vouchers.cachedProviders = [];\r\n        CPManager.elements.voucherProviderSelect.innerHTML =\r\n          '<option value=\"\">Error loading providers.</option>';\r\n        CPManager.ui.showToast(\r\n          \"Error loading voucher providers: \" + error.message,\r\n          \"error\",\r\n        );\r\n        console.error(\"Error fetching voucher providers:\", error);\r\n      }\r\n    },\r\n\r\n    populateVoucherProviderSelect: function (providers) {\r\n      if (!CPManager.elements.voucherProviderSelect) return;\r\n      if (providers.length === 0) {\r\n        CPManager.elements.voucherProviderSelect.innerHTML =\r\n          '<option value=\"\">No providers found.</option>';\r\n        CPManager.ui.showToast(\r\n          \"No voucher providers configured on OPNsense.\",\r\n          \"warning\",\r\n        );\r\n        CPManager.ui.disableVoucherActionButtons(true, true, true);\r\n        this.updateVoidSelectedButton();\r\n        return;\r\n      }\r\n      CPManager.elements.voucherProviderSelect.innerHTML =\r\n        '<option value=\"\">-- Select Provider --</option>';\r\n      const savedProvider = localStorage.getItem(\r\n        CPManager.config.localStorageKeys.selectedVoucherProvider,\r\n      );\r\n      let providerToSelect = null;\r\n      providers.forEach((provider) => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = provider;\r\n        option.textContent = provider;\r\n        CPManager.elements.voucherProviderSelect.appendChild(option);\r\n        if (provider === savedProvider) providerToSelect = savedProvider;\r\n      });\r\n      if (providers.length === 1 && !providerToSelect) {\r\n        CPManager.elements.voucherProviderSelect.value = providers[0];\r\n        localStorage.setItem(\r\n          CPManager.config.localStorageKeys.selectedVoucherProvider,\r\n          providers[0],\r\n        );\r\n        this.handleProviderSelection(providers[0]);\r\n      } else if (providerToSelect) {\r\n        CPManager.elements.voucherProviderSelect.value = providerToSelect;\r\n        this.handleProviderSelection(providerToSelect);\r\n      } else {\r\n        CPManager.ui.disableVoucherActionButtons(true, true, true);\r\n        this.updateVoidSelectedButton();\r\n      }\r\n    },\r\n\r\n    handleProviderSelection: function (providerId, forceRefreshGroups = false) {\r\n      CPManager.state.vouchers.currentPage = 1;\r\n      this.selectedVouchers.clear();\r\n      this.updateSelectAllUI([]);\r\n      if (CPManager.elements.voucherSearchInput)\r\n        CPManager.elements.voucherSearchInput.value = \"\";\r\n      if (CPManager.elements.voucherStateFilterSelect)\r\n        CPManager.elements.voucherStateFilterSelect.value = \"\";\r\n      if (providerId) {\r\n        localStorage.setItem(\r\n          CPManager.config.localStorageKeys.selectedVoucherProvider,\r\n          providerId,\r\n        );\r\n        this.loadVoucherGroups(providerId, forceRefreshGroups);\r\n      } else {\r\n        localStorage.removeItem(\r\n          CPManager.config.localStorageKeys.selectedVoucherProvider,\r\n        );\r\n        if (CPManager.elements.voucherGroupSelect)\r\n          CPManager.elements.voucherGroupSelect.innerHTML =\r\n            '<option value=\"\">Select provider...</option>';\r\n        if (CPManager.elements.voucherCardContainer)\r\n          CPManager.ui.clearContainer(\r\n            CPManager.elements.voucherCardContainer,\r\n            \"voucher-pagination\",\r\n          );\r\n        CPManager.ui.disableVoucherActionButtons(true, true, true);\r\n        this.updateVoidSelectedButton();\r\n      }\r\n    },\r\n\r\n    loadVoucherGroups: async function (providerId, forceRefresh = false) {\r\n      CPManager.state.vouchers.currentPage = 1;\r\n      this.selectedVouchers.clear();\r\n      this.updateSelectAllUI([]);\r\n      if (CPManager.elements.voucherSearchInput)\r\n        CPManager.elements.voucherSearchInput.value = \"\";\r\n      if (CPManager.elements.voucherStateFilterSelect)\r\n        CPManager.elements.voucherStateFilterSelect.value = \"\";\r\n      if (!providerId || !CPManager.elements.voucherGroupSelect) {\r\n        if (CPManager.elements.voucherGroupSelect)\r\n          CPManager.elements.voucherGroupSelect.innerHTML =\r\n            '<option value=\"\">Select provider...</option>';\r\n        if (CPManager.elements.voucherCardContainer)\r\n          CPManager.ui.clearContainer(\r\n            CPManager.elements.voucherCardContainer,\r\n            \"voucher-pagination\",\r\n          );\r\n        CPManager.ui.disableVoucherActionButtons(true, true, true);\r\n        this.updateVoidSelectedButton();\r\n        return;\r\n      }\r\n      const cacheKey = providerId;\r\n      if (\r\n        !forceRefresh &&\r\n        CPManager.state.vouchers.cachedGroups[cacheKey] &&\r\n        Date.now() - CPManager.state.vouchers.cachedGroupsTimestamps[cacheKey] <\r\n          CPManager.config.inMemoryCacheTTLMinutes * 60 * 1000\r\n      ) {\r\n        this.populateVoucherGroupSelect(\r\n          providerId,\r\n          CPManager.state.vouchers.cachedGroups[cacheKey],\r\n        );\r\n        return;\r\n      }\r\n      CPManager.elements.voucherGroupSelect.innerHTML =\r\n        '<option value=\"\">Loading groups...</option>';\r\n      if (\r\n        CPManager.elements.voucherCardContainer &&\r\n        (!CPManager.state.vouchers.cachedData[\r\n          `${providerId}_${CPManager.elements.voucherGroupSelect.value}`\r\n        ] ||\r\n          forceRefresh)\r\n      ) {\r\n        CPManager.ui.showSkeletonLoaders(\r\n          CPManager.elements.voucherCardContainer,\r\n          1,\r\n          '<div class=\"skeleton-card\"></div>',\r\n          \"voucher-pagination\",\r\n        );\r\n      }\r\n      CPManager.ui.disableVoucherActionButtons(false, true, true);\r\n      this.updateVoidSelectedButton();\r\n      try {\r\n        const groups = await CPManager.api.callApi(\r\n          `/voucher/list_voucher_groups/${providerId}`,\r\n        );\r\n        if (Array.isArray(groups)) {\r\n          CPManager.state.vouchers.cachedGroups[cacheKey] = groups;\r\n          CPManager.state.vouchers.cachedGroupsTimestamps[cacheKey] =\r\n            Date.now();\r\n          this.populateVoucherGroupSelect(providerId, groups);\r\n        } else {\r\n          CPManager.state.vouchers.cachedGroups[cacheKey] = [];\r\n          if (CPManager.elements.voucherGroupSelect)\r\n            CPManager.elements.voucherGroupSelect.innerHTML =\r\n              '<option value=\"\">Error: No groups data.</option>';\r\n          if (CPManager.elements.voucherCardContainer)\r\n            CPManager.ui.showNoDataMessage(\r\n              CPManager.elements.voucherCardContainer,\r\n              \"Error loading groups.\",\r\n              \"fas fa-exclamation-triangle\",\r\n              \"voucher-pagination\",\r\n            );\r\n          CPManager.ui.disableVoucherActionButtons(false, true, true);\r\n          this.updateVoidSelectedButton();\r\n          console.error(\r\n            \"Voucher groups API returned unexpected format:\",\r\n            groups,\r\n          );\r\n        }\r\n      } catch (error) {\r\n        CPManager.state.vouchers.cachedGroups[cacheKey] = [];\r\n        if (CPManager.elements.voucherGroupSelect)\r\n          CPManager.elements.voucherGroupSelect.innerHTML =\r\n            '<option value=\"\">Error loading groups.</option>';\r\n        if (CPManager.elements.voucherCardContainer)\r\n          CPManager.ui.showNoDataMessage(\r\n            CPManager.elements.voucherCardContainer,\r\n            \"Error loading groups.\",\r\n            \"fas fa-exclamation-triangle\",\r\n            \"voucher-pagination\",\r\n          );\r\n        CPManager.ui.disableVoucherActionButtons(false, true, true);\r\n        this.updateVoidSelectedButton();\r\n        console.error(\"Error fetching voucher groups:\", error);\r\n      }\r\n    },\r\n\r\n    populateVoucherGroupSelect: async function (providerId, groups) {\r\n      if (!CPManager.elements.voucherGroupSelect) return;\r\n      CPManager.state.vouchers.currentPage = 1;\r\n      const groupFilterKey = `${CPManager.config.localStorageKeys.voucherGroupFilterPrefix}${providerId}`;\r\n      const currentVal = localStorage.getItem(groupFilterKey) || \"\";\r\n      CPManager.elements.voucherGroupSelect.innerHTML =\r\n        '<option value=\"\">-- Select a Group --</option>';\r\n      if (groups.length > 0) {\r\n        groups.forEach((group) => {\r\n          const option = document.createElement(\"option\");\r\n          option.value = group;\r\n          option.textContent = group;\r\n          CPManager.elements.voucherGroupSelect.appendChild(option);\r\n        });\r\n        if (currentVal && groups.includes(currentVal)) {\r\n          CPManager.elements.voucherGroupSelect.value = currentVal;\r\n        } else if (currentVal && !groups.includes(currentVal)) {\r\n          CPManager.elements.voucherGroupSelect.value = \"\";\r\n          localStorage.removeItem(groupFilterKey);\r\n        }\r\n      } else {\r\n        CPManager.elements.voucherGroupSelect.value = \"\";\r\n      }\r\n      if (CPManager.elements.voucherGroupSelect.value) {\r\n        CPManager.ui.disableVoucherActionButtons(false, false, false);\r\n        await this.loadVouchersForGroup(\r\n          providerId,\r\n          CPManager.elements.voucherGroupSelect.value,\r\n        );\r\n      } else {\r\n        if (CPManager.elements.voucherCardContainer) {\r\n          if (groups.length === 0 && providerId) {\r\n            CPManager.ui.showNoDataMessage(\r\n              CPManager.elements.voucherCardContainer,\r\n              `No voucher groups for provider: <strong>${providerId}</strong>.`,\r\n              \"fas fa-folder-open\",\r\n              \"voucher-pagination\",\r\n            );\r\n          } else {\r\n            CPManager.ui.showNoDataMessage(\r\n              CPManager.elements.voucherCardContainer,\r\n              \"Select a group to see its vouchers.\",\r\n              \"fas fa-ticket-alt\",\r\n              \"voucher-pagination\",\r\n            );\r\n          }\r\n        }\r\n        this.renderVouchers([], \"\");\r\n        CPManager.ui.disableVoucherActionButtons(false, true, true);\r\n        this.updateVoidSelectedButton();\r\n      }\r\n    },\r\n\r\n    loadVouchersForGroup: async function (\r\n      providerId,\r\n      groupName,\r\n      forceRefresh = false,\r\n    ) {\r\n      CPManager.state.vouchers.currentPage = 1;\r\n      this.selectedVouchers.clear();\r\n\r\n      if (\r\n        !providerId ||\r\n        !groupName ||\r\n        !CPManager.elements.voucherCardContainer\r\n      ) {\r\n        if (CPManager.elements.voucherCardContainer)\r\n          CPManager.ui.showNoDataMessage(\r\n            CPManager.elements.voucherCardContainer,\r\n            \"Provider or group not selected.\",\r\n            \"fas fa-info-circle\",\r\n            \"voucher-pagination\",\r\n          );\r\n        CPManager.state.vouchers.current = [];\r\n        this.renderVouchers([], groupName);\r\n        return;\r\n      }\r\n\r\n      const cacheKey = `${providerId}_${groupName}`;\r\n      const isCacheValid =\r\n        !forceRefresh &&\r\n        CPManager.state.vouchers.cachedData[cacheKey] &&\r\n        Date.now() - CPManager.state.vouchers.cachedData[cacheKey].lastFetched <\r\n          CPManager.config.inMemoryCacheTTLMinutes * 60 * 1000;\r\n\r\n      if (!isCacheValid) {\r\n        CPManager.ui.showSkeletonLoaders(\r\n          CPManager.elements.voucherCardContainer,\r\n          CPManager.config.itemsPerPage,\r\n          '<div class=\"skeleton-card\"></div>',\r\n          \"voucher-pagination\",\r\n        );\r\n      }\r\n\r\n      try {\r\n        if (isCacheValid) {\r\n          CPManager.state.vouchers.current =\r\n            CPManager.state.vouchers.cachedData[cacheKey].data;\r\n        } else {\r\n          const vouchers = await CPManager.api.callApi(\r\n            `/voucher/list_vouchers/${providerId}/${groupName}`,\r\n          );\r\n          const data = Array.isArray(vouchers) ? vouchers : [];\r\n          CPManager.state.vouchers.cachedData[cacheKey] = {\r\n            data: data,\r\n            lastFetched: Date.now(),\r\n          };\r\n          CPManager.state.vouchers.current = data;\r\n        }\r\n      } catch (error) {\r\n        CPManager.ui.showToast(\r\n          \"Error loading vouchers for group: \" + error.message,\r\n          \"error\",\r\n        );\r\n        CPManager.state.vouchers.current = [];\r\n        if (CPManager.state.vouchers.cachedData[cacheKey]) {\r\n          CPManager.state.vouchers.cachedData[cacheKey].lastFetched = 0;\r\n        }\r\n        console.error(\"Error fetching vouchers for group:\", error);\r\n      } finally {\r\n        this.applyVoucherFiltersAndRender(groupName);\r\n      }\r\n    },\r\n\r\n    applyVoucherFiltersAndRender: function (groupName) {\r\n      if (!CPManager.elements.voucherCardContainer) return;\r\n      CPManager.state.vouchers.currentPage = 1;\r\n      const searchTerm = CPManager.elements.voucherSearchInput\r\n        ? CPManager.elements.voucherSearchInput.value.toLowerCase()\r\n        : \"\";\r\n      const selectedState = CPManager.elements.voucherStateFilterSelect\r\n        ? CPManager.elements.voucherStateFilterSelect.value\r\n        : \"\";\r\n      let filteredVouchers = CPManager.state.vouchers.current;\r\n      if (searchTerm)\r\n        filteredVouchers = filteredVouchers.filter(\r\n          (v) => v.username && v.username.toLowerCase().includes(searchTerm),\r\n        );\r\n      if (selectedState)\r\n        filteredVouchers = filteredVouchers.filter(\r\n          (v) => v.state === selectedState,\r\n        );\r\n      this.currentlyVisibleVouchers = filteredVouchers;\r\n      this.renderVouchers(filteredVouchers, groupName);\r\n    },\r\n\r\n    renderVouchers: function (vouchersToRender, groupName) {\r\n      const container = CPManager.elements.voucherCardContainer;\r\n      const selectAllContainer = CPManager.elements.voucherSelectAllContainer;\r\n      if (!container || !selectAllContainer) return;\r\n\r\n      CPManager.ui.clearContainer(container, \"voucher-pagination\");\r\n      this.updateSelectAllUI(vouchersToRender);\r\n\r\n      if (vouchersToRender.length > 0) {\r\n        selectAllContainer.classList.remove(\"hidden\");\r\n      } else {\r\n        selectAllContainer.classList.add(\"hidden\");\r\n      }\r\n\r\n      if (!vouchersToRender || vouchersToRender.length === 0) {\r\n        const searchTerm = CPManager.elements.voucherSearchInput?.value;\r\n        const selectedState =\r\n          CPManager.elements.voucherStateFilterSelect?.value;\r\n        let message = groupName\r\n          ? `No vouchers found in group \"<strong>${groupName}</strong>\"`\r\n          : \"Select a group to see vouchers.\";\r\n        if (groupName && (searchTerm || selectedState))\r\n          message += \" matching your filters.\";\r\n        else if (groupName) message += \".\";\r\n        CPManager.ui.showNoDataMessage(\r\n          container,\r\n          message,\r\n          \"fas fa-folder-open\",\r\n          \"voucher-pagination\",\r\n        );\r\n        return;\r\n      }\r\n\r\n      const paginatedVouchers = vouchersToRender.slice(\r\n        (CPManager.state.vouchers.currentPage - 1) *\r\n          CPManager.config.itemsPerPage,\r\n        CPManager.state.vouchers.currentPage * CPManager.config.itemsPerPage,\r\n      );\r\n      paginatedVouchers.forEach((voucher) => {\r\n        const card = document.createElement(\"div\");\r\n        card.className = \"voucher-card cp-card\";\r\n        // UPDATED: Use semantic colors\r\n        const stateTagColor =\r\n          voucher.state === \"valid\"\r\n            ? \"bg-success\"\r\n            : voucher.state === \"unused\"\r\n              ? \"bg-primary\" // Changed from sky\r\n              : \"bg-danger\";\r\n        const stateText =\r\n          CPManager.config.voucherStateMapping[voucher.state] || voucher.state;\r\n        const isChecked = this.selectedVouchers.has(voucher.username);\r\n        const isExpired = voucher.state === \"expired\";\r\n        const checkboxHTML = `<div class=\"flex-shrink-0\"><input type=\"checkbox\" class=\"voucher-select-checkbox form-checkbox\" data-voucher-username=\"${voucher.username}\" ${isChecked ? \"checked\" : \"\"} ${isExpired ? \"disabled\" : \"\"}></div>`;\r\n        const cardSummaryId = `voucher-summary-${voucher.username}`;\r\n        const cardDetailsId = `voucher-details-${voucher.username}`;\r\n        card.innerHTML = `<div class=\"flex justify-between items-center mb-1\">${checkboxHTML}<div class=\"flex items-center\"><span class=\"info-tag ${stateTagColor}\" title=\"State: ${stateText}\">${stateText}</span></div></div><div id=\"${cardSummaryId}\" class=\"voucher-summary cursor-pointer pb-1\" role=\"button\" tabindex=\"0\" aria-expanded=\"false\"><div class=\"card-detail-row\"><span class=\"card-label\">Voucher Code</span><span class=\"card-value\">${voucher.username}</span></div></div><div class=\"card-details-content max-h-0 overflow-hidden transition-all duration-300 ease-out text-sm space-y-1\" id=\"${cardDetailsId}\" aria-hidden=\"true\"><div class=\"card-detail-row\"><span class=\"card-label\">Validity</span> <span class=\"card-value-secondary\">${CPManager.utils.formatDuration(voucher.validity, \"seconds\")}</span></div><div class=\"card-detail-row\"><span class=\"card-label\">Start Time</span> <span class=\"card-value-secondary\">${CPManager.utils.formatVoucherTimestamp(voucher.starttime)}</span></div><div class=\"card-detail-row\"><span class=\"card-label\">End Time</span> <span class=\"card-value-secondary\">${CPManager.utils.formatVoucherTimestamp(voucher.endtime)}</span></div><div class=\"card-detail-row\"><span class=\"card-label\">Expires At</span><span class=\"card-value-secondary\">${voucher.expirytime && voucher.expirytime !== 0 ? CPManager.utils.formatVoucherTimestamp(voucher.expirytime) : \"Never\"}</span></div></div>`;\r\n        container.appendChild(card);\r\n      });\r\n      CPManager.ui.renderPaginationControls(\r\n        CPManager.elements.voucherPaginationContainer,\r\n        CPManager.state.vouchers.currentPage,\r\n        vouchersToRender.length,\r\n        CPManager.config.itemsPerPage,\r\n        (newPage) => {\r\n          CPManager.state.vouchers.currentPage = newPage;\r\n          this.renderVouchers(vouchersToRender, groupName);\r\n        },\r\n      );\r\n    },\r\n\r\n    updateVoidSelectedButton: function () {\r\n      const button = CPManager.elements.voidSelectedVouchersBtn;\r\n      if (!button) return;\r\n      const selectedCount = this.selectedVouchers.size;\r\n      const providerSelected =\r\n        CPManager.elements.voucherProviderSelect &&\r\n        CPManager.elements.voucherProviderSelect.value;\r\n      const groupSelected =\r\n        CPManager.elements.voucherGroupSelect &&\r\n        CPManager.elements.voucherGroupSelect.value;\r\n      button.innerHTML = `<i class=\"fas fa-times-circle mr-2\"></i>Void Selected`;\r\n      button.disabled =\r\n        selectedCount === 0 || !providerSelected || !groupSelected;\r\n    },\r\n\r\n    updateSelectAllUI: function (\r\n      vouchersToRender = this.currentlyVisibleVouchers,\r\n    ) {\r\n      const {\r\n        voucherSelectAllContainer,\r\n        voucherSelectAllCheckbox,\r\n        voucherSelectedCountText,\r\n      } = CPManager.elements;\r\n      if (\r\n        !voucherSelectAllContainer ||\r\n        !voucherSelectAllCheckbox ||\r\n        !voucherSelectedCountText\r\n      )\r\n        return;\r\n      this.updateVoidSelectedButton();\r\n      const selectedCount = this.selectedVouchers.size;\r\n      voucherSelectedCountText.textContent = `(${selectedCount} voucher${selectedCount === 1 ? \"\" : \"s\"} selected)`;\r\n      const eligibleVouchers = vouchersToRender.filter(\r\n        (v) => v.state !== \"expired\",\r\n      );\r\n      const allEligibleVisibleSelected =\r\n        eligibleVouchers.length > 0 &&\r\n        eligibleVouchers.every((v) => this.selectedVouchers.has(v.username));\r\n      voucherSelectAllCheckbox.checked = allEligibleVisibleSelected;\r\n      voucherSelectAllCheckbox.indeterminate =\r\n        selectedCount > 0 && !allEligibleVisibleSelected;\r\n      voucherSelectAllCheckbox.disabled = eligibleVouchers.length === 0;\r\n    },\r\n\r\n    handleSelectAll: function (isChecked) {\r\n      const eligibleVouchers = this.currentlyVisibleVouchers.filter(\r\n        (v) => v.state !== \"expired\",\r\n      );\r\n      eligibleVouchers.forEach((voucher) => {\r\n        if (isChecked) {\r\n          this.selectedVouchers.add(voucher.username);\r\n        } else {\r\n          this.selectedVouchers.delete(voucher.username);\r\n        }\r\n      });\r\n      this.renderVouchers(\r\n        this.currentlyVisibleVouchers,\r\n        CPManager.elements.voucherGroupSelect.value,\r\n      );\r\n    },\r\n\r\n    handleVoidSelectedVouchers: async function () {\r\n      const selectedVouchers = Array.from(this.selectedVouchers);\r\n      if (selectedVouchers.length === 0) {\r\n        return;\r\n      }\r\n      const providerId = CPManager.elements.voucherProviderSelect.value;\r\n      const groupName = CPManager.elements.voucherGroupSelect.value;\r\n      if (!providerId || !groupName) {\r\n        CPManager.ui.showToast(\r\n          \"Cannot void: Provider or Group not selected.\",\r\n          \"error\",\r\n        );\r\n        return;\r\n      }\r\n      const confirmationMsg = `Are you sure you want to void the <strong>${selectedVouchers.length}</strong> selected voucher(s) from group \"<strong>${groupName}</strong>\"? This will mark them as expired.`;\r\n      CPManager.ui.showConfirmationModal(\r\n        \"Confirm Void Selected\",\r\n        confirmationMsg,\r\n        async () => {\r\n          CPManager.ui.showToast(\r\n            `Voiding ${selectedVouchers.length} voucher(s)...`,\r\n            \"info\",\r\n            5000,\r\n          );\r\n          let successCount = 0;\r\n          let failureCount = 0;\r\n          const voidPromises = selectedVouchers.map((voucherCode) =>\r\n            CPManager.api\r\n              .callApi(`/voucher/expire_voucher/${providerId}`, \"POST\", {\r\n                username: voucherCode,\r\n              })\r\n              .then((result) =>\r\n                result && result.status !== \"error\"\r\n                  ? successCount++\r\n                  : failureCount++,\r\n              )\r\n              .catch((error) => {\r\n                console.error(`Failed to void voucher ${voucherCode}:`, error);\r\n                failureCount++;\r\n              }),\r\n          );\r\n          await Promise.all(voidPromises);\r\n          let summaryMessage =\r\n            successCount > 0 && failureCount === 0\r\n              ? `Successfully voided all ${successCount} selected voucher(s).`\r\n              : successCount > 0 && failureCount > 0\r\n                ? `Voided ${successCount} voucher(s). Failed for ${failureCount}.`\r\n                : `Failed to void any of the ${failureCount} selected voucher(s).`;\r\n          CPManager.ui.showToast(\r\n            summaryMessage,\r\n            failureCount > 0\r\n              ? successCount > 0\r\n                ? \"warning\"\r\n                : \"error\"\r\n              : \"success\",\r\n          );\r\n          this.selectedVouchers.clear();\r\n          this.updateVoidSelectedButton();\r\n          CPManager.state.vouchers.currentPage = 1;\r\n          await this.loadVouchersForGroup(providerId, groupName, true);\r\n        },\r\n      );\r\n    },\r\n\r\n    openGenerateVoucherModal: function () {\r\n      if (\r\n        !CPManager.elements.generateVoucherModal ||\r\n        !CPManager.elements.voucherProviderSelect\r\n      )\r\n        return;\r\n      const selectedProvider = CPManager.elements.voucherProviderSelect.value;\r\n      if (!selectedProvider) {\r\n        CPManager.ui.showToast(\r\n          \"Please select a voucher provider before generating vouchers.\",\r\n          \"error\",\r\n        );\r\n        return;\r\n      }\r\n      if (CPManager.elements.voucherGroupNameInput)\r\n        CPManager.elements.voucherGroupNameInput.value = \"\";\r\n      if (CPManager.elements.voucherCountSelect)\r\n        CPManager.elements.voucherCountSelect.value = \"10\";\r\n      if (CPManager.elements.voucherCountCustom) {\r\n        CPManager.elements.voucherCountCustom.classList.add(\"hidden\");\r\n        CPManager.elements.voucherCountCustom.value = \"1\";\r\n      }\r\n      if (CPManager.elements.voucherLifetimeSelect)\r\n        CPManager.elements.voucherLifetimeSelect.value = \"240\";\r\n      if (CPManager.elements.voucherLifetimeCustom) {\r\n        CPManager.elements.voucherLifetimeCustom.classList.add(\"hidden\");\r\n        CPManager.elements.voucherLifetimeCustom.value = \"\";\r\n      }\r\n      if (CPManager.elements.voucherUsageSelect)\r\n        CPManager.elements.voucherUsageSelect.value = \"0\";\r\n      if (CPManager.elements.voucherUsageCustom) {\r\n        CPManager.elements.voucherUsageCustom.classList.add(\"hidden\");\r\n        CPManager.elements.voucherUsageCustom.value = \"\";\r\n      }\r\n      const cardOutputRadio = document.querySelector(\r\n        'input[name=\"voucher-output-format\"][value=\"card\"]',\r\n      );\r\n      if (cardOutputRadio) cardOutputRadio.checked = true;\r\n      CPManager.elements.generateVoucherModal.classList.remove(\"hidden\");\r\n      CPManager.elements.generateVoucherModal.classList.add(\"flex\");\r\n      if (CPManager.elements.voucherCountSelect)\r\n        CPManager.elements.voucherCountSelect.focus();\r\n    },\r\n\r\n    handleSubmitGenerateVoucher: async function () {\r\n      if (\r\n        !CPManager.elements.voucherProviderSelect ||\r\n        !CPManager.elements.submitGenerateVoucherBtn\r\n      )\r\n        return;\r\n      const selectedProvider = CPManager.elements.voucherProviderSelect.value;\r\n      if (!selectedProvider) {\r\n        CPManager.ui.showToast(\r\n          \"Voucher provider not selected. Cannot generate vouchers.\",\r\n          \"error\",\r\n        );\r\n        return;\r\n      }\r\n      let count =\r\n        CPManager.elements.voucherCountSelect.value === \"custom\"\r\n          ? parseInt(CPManager.elements.voucherCountCustom.value)\r\n          : parseInt(CPManager.elements.voucherCountSelect.value);\r\n      if (isNaN(count) || count < 1) {\r\n        CPManager.ui.showToast(\r\n          \"Number of vouchers must be at least 1.\",\r\n          \"error\",\r\n        );\r\n        return;\r\n      }\r\n      let lifetimeInSeconds;\r\n      if (CPManager.elements.voucherLifetimeSelect.value === \"custom\") {\r\n        const customMinutes = parseInt(\r\n          CPManager.elements.voucherLifetimeCustom.value,\r\n        );\r\n        if (isNaN(customMinutes) || customMinutes < 1) {\r\n          CPManager.ui.showToast(\r\n            \"Custom Validity (minutes) must be at least 1.\",\r\n            \"error\",\r\n          );\r\n          return;\r\n        }\r\n        lifetimeInSeconds = customMinutes * 60;\r\n      } else {\r\n        lifetimeInSeconds =\r\n          parseInt(CPManager.elements.voucherLifetimeSelect.value) * 60;\r\n      }\r\n      let usageInSeconds;\r\n      if (CPManager.elements.voucherUsageSelect.value === \"custom\") {\r\n        const customHours = parseInt(\r\n          CPManager.elements.voucherUsageCustom.value,\r\n        );\r\n        if (isNaN(customHours) || customHours < 0) {\r\n          CPManager.ui.showToast(\r\n            \"Custom Expires In (hours) must be non-negative.\",\r\n            \"error\",\r\n          );\r\n          return;\r\n        }\r\n        usageInSeconds = customHours * 3600;\r\n      } else {\r\n        const selectedUsageHours = parseInt(\r\n          CPManager.elements.voucherUsageSelect.value,\r\n        );\r\n        if (isNaN(selectedUsageHours)) {\r\n          CPManager.ui.showToast(\"Invalid Expires In selection.\", \"error\");\r\n          return;\r\n        }\r\n        usageInSeconds = selectedUsageHours * 3600;\r\n      }\r\n      const now = new Date();\r\n      const defaultGroupName = `g${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, \"0\")}${String(now.getDate()).padStart(2, \"0\")}${String(now.getHours()).padStart(2, \"0\")}${String(now.getMinutes()).padStart(2, \"0\")}`;\r\n      const groupname =\r\n        CPManager.elements.voucherGroupNameInput.value.trim() ||\r\n        defaultGroupName;\r\n      const payload = {\r\n        count: String(count),\r\n        validity: String(lifetimeInSeconds),\r\n        expirytime: String(usageInSeconds),\r\n        vouchergroup: groupname,\r\n      };\r\n      CPManager.elements.submitGenerateVoucherBtn.disabled = true;\r\n      CPManager.elements.submitGenerateVoucherBtn.innerHTML =\r\n        '<i class=\"fas fa-spinner fa-spin mr-2\"></i>Generating...';\r\n      try {\r\n        const result = await CPManager.api.callApi(\r\n          `/voucher/generate_vouchers/${selectedProvider}`,\r\n          \"POST\",\r\n          payload,\r\n        );\r\n        if (\r\n          result &&\r\n          Array.isArray(result) &&\r\n          result.length > 0 &&\r\n          result[0].username\r\n        ) {\r\n          CPManager.state.vouchers.lastGenerated = result;\r\n          const outputFormat = document.querySelector(\r\n            'input[name=\"voucher-output-format\"]:checked',\r\n          ).value;\r\n          const doc = new jsPDF({\r\n            orientation: \"portrait\",\r\n            unit: \"mm\",\r\n            format: \"a4\",\r\n          });\r\n          if (outputFormat === \"card\") {\r\n            this.generateVouchersAsCardPDF(\r\n              CPManager.state.vouchers.lastGenerated,\r\n              groupname,\r\n              doc,\r\n            );\r\n          } else if (outputFormat === \"table\") {\r\n            this.generateVouchersAsTablePDF(\r\n              CPManager.state.vouchers.lastGenerated,\r\n              groupname,\r\n              doc,\r\n            );\r\n          } else if (outputFormat === \"both\") {\r\n            this.generateVouchersAsCardPDF(\r\n              CPManager.state.vouchers.lastGenerated,\r\n              groupname,\r\n              doc,\r\n            );\r\n            doc.addPage();\r\n            this.generateVouchersAsTablePDF(\r\n              CPManager.state.vouchers.lastGenerated,\r\n              groupname,\r\n              doc,\r\n            );\r\n          }\r\n          const timestamp = new Date()\r\n            .toISOString()\r\n            .slice(0, 10)\r\n            .replace(/-/g, \"\");\r\n          doc.save(`${groupname}_${timestamp}_vouchers.pdf`);\r\n          CPManager.ui.showToast(\"Vouchers PDF generated!\", \"success\");\r\n          CPManager.ui.hideModal(CPManager.elements.generateVoucherModal);\r\n          CPManager.state.vouchers.currentPage = 1;\r\n          await this.loadVoucherGroups(selectedProvider, true);\r\n          if (CPManager.elements.voucherGroupSelect)\r\n            CPManager.elements.voucherGroupSelect.value = groupname;\r\n          await this.loadVouchersForGroup(selectedProvider, groupname, true);\r\n        } else {\r\n          CPManager.ui.showToast(\r\n            `Failed to generate vouchers: ${result?.message || (result?.status === \"error\" ? \"API error.\" : \"Unknown error.\")}`,\r\n            \"error\",\r\n          );\r\n          console.error(\r\n            \"Voucher generation API returned unexpected result:\",\r\n            result,\r\n          );\r\n          CPManager.state.vouchers.lastGenerated = [];\r\n        }\r\n      } catch (error) {\r\n        CPManager.state.vouchers.lastGenerated = [];\r\n        CPManager.ui.showToast(\r\n          \"Error during voucher generation or PDF creation: \" + error.message,\r\n          \"error\",\r\n        );\r\n        console.error(\"Error generating vouchers:\", error);\r\n      } finally {\r\n        CPManager.elements.submitGenerateVoucherBtn.disabled = false;\r\n        CPManager.elements.submitGenerateVoucherBtn.innerHTML = \"Generate\";\r\n      }\r\n    },\r\n\r\n    generateVouchersAsCardPDF: function (vouchers, groupName, doc) {\r\n      const pageHeight = doc.internal.pageSize.height;\r\n      const pageWidth = doc.internal.pageSize.width;\r\n      const margin = 10;\r\n\r\n      const vouchersPerRow = 3;\r\n      const vouchersPerColumn = 6;\r\n      const horizontalGap = 4;\r\n      const verticalGap = 4;\r\n\r\n      const printableWidth = pageWidth - 2 * margin;\r\n      const titleHeight = 15;\r\n      const printableHeightPerVoucherArea =\r\n        pageHeight - 2 * margin - titleHeight;\r\n\r\n      const voucherWidth =\r\n        (printableWidth - (vouchersPerRow - 1) * horizontalGap) /\r\n        vouchersPerRow;\r\n      const voucherHeight =\r\n        (printableHeightPerVoucherArea -\r\n          (vouchersPerColumn - 1) * verticalGap) /\r\n        vouchersPerColumn;\r\n\r\n      let currentY = margin;\r\n\r\n      doc.setFontSize(20);\r\n      doc.setFont(\"helvetica\", \"bold\");\r\n      doc.text(\r\n        `Vouchers for Group: ${groupName} (Card Style)`,\r\n        pageWidth / 2,\r\n        currentY + 5,\r\n        { align: \"center\" },\r\n      );\r\n      currentY += titleHeight;\r\n\r\n      vouchers.forEach((voucher, index) => {\r\n        const vouchersPerPage = vouchersPerRow * vouchersPerColumn;\r\n        const voucherIndexOnPage = index % vouchersPerPage;\r\n\r\n        if (index > 0 && voucherIndexOnPage === 0) {\r\n          doc.addPage();\r\n          currentY = margin;\r\n          doc.setFontSize(20);\r\n          doc.setFont(\"helvetica\", \"bold\");\r\n          doc.text(\r\n            `Vouchers for Group: ${groupName} (Card Style - Cont.)`,\r\n            pageWidth / 2,\r\n            currentY + 5,\r\n            {\r\n              align: \"center\",\r\n            },\r\n          );\r\n          currentY += titleHeight;\r\n        }\r\n\r\n        const colIndex = voucherIndexOnPage % vouchersPerRow;\r\n        const rowIndex = Math.floor(voucherIndexOnPage / vouchersPerRow);\r\n\r\n        const voucherAbsX = margin + colIndex * (voucherWidth + horizontalGap);\r\n        const voucherAbsY = currentY + rowIndex * (voucherHeight + verticalGap);\r\n\r\n        doc.setDrawColor(200);\r\n        doc.roundedRect(\r\n          voucherAbsX,\r\n          voucherAbsY,\r\n          voucherWidth,\r\n          voucherHeight,\r\n          2,\r\n          2,\r\n          \"S\",\r\n        );\r\n\r\n        doc.setFontSize(8);\r\n        doc.setFont(\"helvetica\", \"bold\");\r\n        doc.setTextColor(55, 65, 81);\r\n        doc.text(\r\n          \"Voucher Code\",\r\n          voucherAbsX + voucherWidth / 2,\r\n          voucherAbsY + 6,\r\n          { align: \"center\" },\r\n        );\r\n\r\n        doc.setFontSize(16);\r\n        doc.setTextColor(29, 78, 216);\r\n        doc.text(\r\n          voucher.username || CPManager.config.placeholderValue,\r\n          voucherAbsX + voucherWidth / 2,\r\n          voucherAbsY + 16,\r\n          { align: \"center\" },\r\n        );\r\n\r\n        let detailLineY = voucherAbsY + 22;\r\n        if (voucher.password) {\r\n          doc.setFontSize(7);\r\n          doc.setTextColor(75, 85, 99);\r\n          doc.text(\r\n            `Password: ${voucher.password}`,\r\n            voucherAbsX + voucherWidth / 2,\r\n            detailLineY,\r\n            {\r\n              align: \"center\",\r\n            },\r\n          );\r\n          detailLineY += 4;\r\n        }\r\n\r\n        doc.setFontSize(6);\r\n        doc.setTextColor(107, 114, 128);\r\n        doc.text(\r\n          `Validity: ${CPManager.utils.formatDuration(voucher.validity, \"seconds\")}`,\r\n          voucherAbsX + voucherWidth / 2,\r\n          detailLineY + 3,\r\n          { align: \"center\" },\r\n        );\r\n        doc.text(\r\n          `Expires: ${\r\n            voucher.expirytime && voucher.expirytime !== 0\r\n              ? CPManager.utils.formatVoucherTimestamp(voucher.expirytime)\r\n              : \"Never\"\r\n          }`,\r\n          voucherAbsX + voucherWidth / 2,\r\n          detailLineY + 6,\r\n          { align: \"center\" },\r\n        );\r\n        doc.text(\r\n          `Group: ${voucher.vouchergroup || CPManager.config.placeholderValue}`,\r\n          voucherAbsX + voucherWidth / 2,\r\n          detailLineY + 9,\r\n          { align: \"center\" },\r\n        );\r\n      });\r\n    },\r\n\r\n    generateVouchersAsTablePDF: function (vouchers, groupName, doc) {\r\n      const startY = 20;\r\n      doc.setFontSize(18);\r\n      doc.setFont(\"helvetica\", \"bold\");\r\n      doc.text(\r\n        `Voucher Table for Group: ${groupName}`,\r\n        doc.internal.pageSize.width / 2,\r\n        startY,\r\n        {\r\n          align: \"center\",\r\n        },\r\n      );\r\n\r\n      const tableHeaders = [\r\n        [\"Voucher Code\", \"Password\", \"Validity\", \"Expires\", \"Group\"],\r\n      ];\r\n      const tableData = vouchers.map((v) => [\r\n        v.username || CPManager.config.placeholderValue,\r\n        v.password || CPManager.config.placeholderValue,\r\n        CPManager.utils.formatDuration(v.validity, \"seconds\"),\r\n        v.expirytime && v.expirytime !== 0\r\n          ? CPManager.utils.formatVoucherTimestamp(v.expirytime)\r\n          : \"Never\",\r\n        v.vouchergroup || CPManager.config.placeholderValue,\r\n      ]);\r\n\r\n      autoTable(doc, {\r\n        startY: startY + 10,\r\n        head: tableHeaders,\r\n        body: tableData,\r\n        theme: \"striped\",\r\n        headStyles: { fillColor: [41, 128, 185], textColor: [255, 255, 255] },\r\n        styles: {\r\n          fontSize: 8,\r\n          cellPadding: 2,\r\n          valign: \"middle\",\r\n          halign: \"center\",\r\n        },\r\n        columnStyles: {\r\n          0: { cellWidth: 30 },\r\n          1: { cellWidth: 25 },\r\n          2: { cellWidth: 25 },\r\n          3: { cellWidth: 40 },\r\n          4: { cellWidth: \"auto\" },\r\n        },\r\n        didDrawPage: function (data) {\r\n          let str = \"Page \" + doc.internal.getNumberOfPages();\r\n          doc.setFontSize(8);\r\n          doc.text(\r\n            str,\r\n            doc.internal.pageSize.width - data.settings.margin.right,\r\n            doc.internal.pageSize.height - 5,\r\n          );\r\n        },\r\n      });\r\n    },\r\n\r\n    handleDropExpiredVouchers: async function () {\r\n      if (\r\n        !CPManager.elements.voucherProviderSelect ||\r\n        !CPManager.elements.voucherGroupSelect\r\n      )\r\n        return;\r\n      const selectedProvider = CPManager.elements.voucherProviderSelect.value;\r\n      const selectedGroup = CPManager.elements.voucherGroupSelect.value;\r\n      if (!selectedProvider) {\r\n        CPManager.ui.showToast(\"Select voucher provider.\", \"error\");\r\n        return;\r\n      }\r\n      if (!selectedGroup) {\r\n        CPManager.ui.showToast(\"Select voucher group.\", \"error\");\r\n        return;\r\n      }\r\n      CPManager.ui.showConfirmationModal(\r\n        \"Drop Expired Vouchers?\",\r\n        `Remove all expired vouchers from group \"<strong>${selectedGroup}</strong>\" for provider \"<strong>${selectedProvider}</strong>\"?`,\r\n        async () => {\r\n          try {\r\n            const result = await CPManager.api.callApi(\r\n              `/voucher/drop_expired_vouchers/${selectedProvider}/${selectedGroup}`,\r\n              \"POST\",\r\n              {},\r\n            );\r\n            if (result && result.status === \"drop\") {\r\n              CPManager.ui.showToast(\r\n                `Expired vouchers from group \"${selectedGroup}\" (Provider: ${selectedProvider}) cleaned. Count: ${result.count || 0}`,\r\n                \"success\",\r\n              );\r\n            } else {\r\n              CPManager.ui.showToast(\r\n                `Cleanup for group \"${selectedGroup}\" (Provider: ${selectedProvider}) processed. Status: ${result.status || \"unknown\"}. Count: ${result.count || 0}`,\r\n                \"info\",\r\n              );\r\n              console.warn(\r\n                \"Drop expired vouchers API returned unexpected status:\",\r\n                result,\r\n              );\r\n            }\r\n            CPManager.state.vouchers.currentPage = 1;\r\n            await this.loadVouchersForGroup(\r\n              selectedProvider,\r\n              selectedGroup,\r\n              true,\r\n            );\r\n          } catch (error) {\r\n            CPManager.ui.showToast(\r\n              \"Error dropping expired vouchers: \" + error.message,\r\n              \"error\",\r\n            );\r\n            console.error(\"Error dropping expired vouchers:\", error);\r\n          }\r\n        },\r\n      );\r\n    },\r\n\r\n    handleDropVoucherGroup: async function () {\r\n      if (\r\n        !CPManager.elements.voucherProviderSelect ||\r\n        !CPManager.elements.voucherGroupSelect\r\n      )\r\n        return;\r\n      const selectedProvider = CPManager.elements.voucherProviderSelect.value;\r\n      const selectedGroup = CPManager.elements.voucherGroupSelect.value;\r\n      if (!selectedProvider) {\r\n        CPManager.ui.showToast(\"Select voucher provider.\", \"warning\");\r\n        return;\r\n      }\r\n      if (!selectedGroup) {\r\n        CPManager.ui.showToast(\"Select voucher group to delete.\", \"warning\");\r\n        return;\r\n      }\r\n      CPManager.ui.showConfirmationModal(\r\n        \"Drop Voucher Group?\",\r\n        `Delete entire voucher group \"<strong>${selectedGroup}</strong>\" for provider \"<strong>${selectedProvider}</strong>\"? This deletes all vouchers within.`,\r\n        async () => {\r\n          try {\r\n            const result = await CPManager.api.callApi(\r\n              `/voucher/drop_voucher_group/${selectedProvider}/${selectedGroup}`,\r\n              \"POST\",\r\n              {},\r\n            );\r\n            if (result && result.status !== \"error\") {\r\n              CPManager.ui.showToast(\r\n                `Voucher group \"${selectedGroup}\" (Provider: ${selectedProvider}) deleted.`,\r\n                \"success\",\r\n              );\r\n              if (CPManager.state.vouchers.cachedGroups[selectedProvider]) {\r\n                CPManager.state.vouchers.cachedGroups[selectedProvider] =\r\n                  CPManager.state.vouchers.cachedGroups[\r\n                    selectedProvider\r\n                  ].filter((g) => g !== selectedGroup);\r\n              }\r\n              delete CPManager.state.vouchers.cachedData[\r\n                `${selectedProvider}_${selectedGroup}`\r\n              ];\r\n              CPManager.state.vouchers.currentPage = 1;\r\n              await this.loadVoucherGroups(selectedProvider, true);\r\n              if (\r\n                CPManager.elements.voucherGroupSelect &&\r\n                !CPManager.elements.voucherGroupSelect.value\r\n              ) {\r\n                if (CPManager.elements.voucherCardContainer) {\r\n                  CPManager.ui.showNoDataMessage(\r\n                    CPManager.elements.voucherCardContainer,\r\n                    \"Select a group to see its vouchers.\",\r\n                    \"fas fa-ticket-alt\",\r\n                    \"voucher-pagination\",\r\n                  );\r\n                }\r\n                CPManager.state.vouchers.current = [];\r\n              }\r\n              CPManager.ui.disableVoucherActionButtons(false, true, true);\r\n            } else {\r\n              CPManager.ui.showToast(\r\n                `Failed to delete voucher group \"${selectedGroup}\". API: ${result ? result.message : \"Unknown error.\"}`,\r\n                \"error\",\r\n              );\r\n              console.error(\r\n                \"Drop voucher group API returned error or unexpected result:\",\r\n                result,\r\n              );\r\n            }\r\n          } catch (error) {\r\n            CPManager.ui.showToast(\r\n              \"Error dropping voucher group: \" + error.message,\r\n              \"error\",\r\n            );\r\n            console.error(\"Error dropping voucher group:\", error);\r\n          }\r\n        },\r\n      );\r\n    },\r\n\r\n    initializeVoucherEventListeners: function () {\r\n      if (CPManager.elements.voucherProviderSelect) {\r\n        CPManager.elements.voucherProviderSelect.addEventListener(\r\n          \"change\",\r\n          (e) => this.handleProviderSelection(e.target.value),\r\n        );\r\n      }\r\n      if (CPManager.elements.voucherGroupSelect) {\r\n        CPManager.elements.voucherGroupSelect.addEventListener(\r\n          \"change\",\r\n          async (e) => {\r\n            const selectedProvider =\r\n              CPManager.elements.voucherProviderSelect?.value;\r\n            const selectedGroup = e.target.value;\r\n            this.selectedVouchers.clear();\r\n            this.updateSelectAllUI([]);\r\n            if (CPManager.elements.voucherSearchInput)\r\n              CPManager.elements.voucherSearchInput.value = \"\";\r\n            if (CPManager.elements.voucherStateFilterSelect)\r\n              CPManager.elements.voucherStateFilterSelect.value = \"\";\r\n            if (!selectedProvider) {\r\n              CPManager.ui.showToast(\"Select a voucher provider.\", \"warning\");\r\n              e.target.value = \"\";\r\n              return;\r\n            }\r\n            const groupFilterKey = `${CPManager.config.localStorageKeys.voucherGroupFilterPrefix}${selectedProvider}`;\r\n            localStorage.setItem(groupFilterKey, selectedGroup);\r\n            CPManager.state.vouchers.currentPage = 1;\r\n            if (selectedGroup) {\r\n              await this.loadVouchersForGroup(selectedProvider, selectedGroup);\r\n              CPManager.ui.disableVoucherActionButtons(false, false, false);\r\n            } else {\r\n              if (CPManager.elements.voucherCardContainer)\r\n                CPManager.ui.showNoDataMessage(\r\n                  CPManager.elements.voucherCardContainer,\r\n                  \"Select a group to see its vouchers.\",\r\n                  \"fas fa-ticket-alt\",\r\n                  \"voucher-pagination\",\r\n                );\r\n              CPManager.state.vouchers.current = [];\r\n              this.renderVouchers([], \"\");\r\n              CPManager.ui.disableVoucherActionButtons(false, true, true);\r\n            }\r\n          },\r\n        );\r\n      }\r\n\r\n      const applyFilters = () => {\r\n        const selectedGroup = CPManager.elements.voucherGroupSelect?.value;\r\n        if (selectedGroup) this.applyVoucherFiltersAndRender(selectedGroup);\r\n      };\r\n      if (CPManager.elements.voucherSearchInput)\r\n        CPManager.elements.voucherSearchInput.addEventListener(\r\n          \"input\",\r\n          applyFilters,\r\n        );\r\n      if (CPManager.elements.voucherStateFilterSelect)\r\n        CPManager.elements.voucherStateFilterSelect.addEventListener(\r\n          \"change\",\r\n          applyFilters,\r\n        );\r\n\r\n      if (CPManager.elements.voidSelectedVouchersBtn) {\r\n        CPManager.elements.voidSelectedVouchersBtn.addEventListener(\r\n          \"click\",\r\n          () => this.handleVoidSelectedVouchers(),\r\n        );\r\n      }\r\n      if (CPManager.elements.voucherSelectAllCheckbox) {\r\n        CPManager.elements.voucherSelectAllCheckbox.addEventListener(\r\n          \"change\",\r\n          (e) => this.handleSelectAll(e.target.checked),\r\n        );\r\n      }\r\n      if (CPManager.elements.voucherCardContainer) {\r\n        CPManager.elements.voucherCardContainer.addEventListener(\r\n          \"click\",\r\n          (e) => {\r\n            // First, check if a checkbox was clicked\r\n            const checkbox = e.target.closest(\".voucher-select-checkbox\");\r\n            if (checkbox) {\r\n              // Handle the checkbox logic\r\n              if (checkbox.checked) {\r\n                this.selectedVouchers.add(checkbox.dataset.voucherUsername);\r\n              } else {\r\n                this.selectedVouchers.delete(checkbox.dataset.voucherUsername);\r\n              }\r\n              this.updateSelectAllUI();\r\n              return; // Stop further processing\r\n            }\r\n\r\n            // If not a checkbox, check if a card was clicked\r\n            const card = e.target.closest(\".voucher-card\");\r\n            if (card) {\r\n              // Toggle the card details\r\n              CPManager.ui.toggleCardDetails(card);\r\n            }\r\n          },\r\n        );\r\n      }\r\n\r\n      if (CPManager.elements.createVouchersBtn)\r\n        CPManager.elements.createVouchersBtn.addEventListener(\"click\", () =>\r\n          this.openGenerateVoucherModal(),\r\n        );\r\n      if (CPManager.elements.dropExpiredVouchersBtn)\r\n        CPManager.elements.dropExpiredVouchersBtn.addEventListener(\r\n          \"click\",\r\n          () => this.handleDropExpiredVouchers(),\r\n        );\r\n      if (CPManager.elements.dropVoucherGroupBtn)\r\n        CPManager.elements.dropVoucherGroupBtn.addEventListener(\"click\", () =>\r\n          this.handleDropVoucherGroup(),\r\n        );\r\n      if (CPManager.elements.submitGenerateVoucherBtn)\r\n        CPManager.elements.submitGenerateVoucherBtn.addEventListener(\r\n          \"click\",\r\n          () => this.handleSubmitGenerateVoucher(),\r\n        );\r\n      if (CPManager.elements.cancelGenerateVoucherBtn)\r\n        CPManager.elements.cancelGenerateVoucherBtn.addEventListener(\r\n          \"click\",\r\n          () => CPManager.ui.hideModal(CPManager.elements.generateVoucherModal),\r\n        );\r\n\r\n      if (\r\n        CPManager.elements.voucherCountSelect &&\r\n        CPManager.elements.voucherCountCustom\r\n      ) {\r\n        CPManager.elements.voucherCountSelect.addEventListener(\r\n          \"change\",\r\n          (e) => {\r\n            CPManager.elements.voucherCountCustom.classList.toggle(\r\n              \"hidden\",\r\n              e.target.value !== \"custom\",\r\n            );\r\n          },\r\n        );\r\n      }\r\n      if (\r\n        CPManager.elements.voucherLifetimeSelect &&\r\n        CPManager.elements.voucherLifetimeCustom\r\n      ) {\r\n        CPManager.elements.voucherLifetimeSelect.addEventListener(\r\n          \"change\",\r\n          (e) => {\r\n            CPManager.elements.voucherLifetimeCustom.classList.toggle(\r\n              \"hidden\",\r\n              e.target.value !== \"custom\",\r\n            );\r\n          },\r\n        );\r\n      }\r\n      if (\r\n        CPManager.elements.voucherUsageSelect &&\r\n        CPManager.elements.voucherUsageCustom\r\n      ) {\r\n        CPManager.elements.voucherUsageSelect.addEventListener(\r\n          \"change\",\r\n          (e) => {\r\n            CPManager.elements.voucherUsageCustom.classList.toggle(\r\n              \"hidden\",\r\n              e.target.value !== \"custom\",\r\n            );\r\n          },\r\n        );\r\n      }\r\n    },\r\n  };\r\n  if (!CPManager.state.vouchers.selectedVouchers) {\r\n    CPManager.state.vouchers.selectedVouchers = new Set();\r\n  }\r\n})(CPManager);\r\n","// js/dashboard.js\r\nimport Chart from \"chart.js/auto\";\r\n\r\n(function (CPManager) {\r\n  CPManager.dashboard = {\r\n    /**\r\n     * Loads and displays data for the dashboard.\r\n     * Includes statistics like active sessions, configured zones, voucher counts,\r\n     * and a data usage donut chart.\r\n     * @param {boolean} [forceRefresh=false] - If true, forces a re-fetch even if data exists.\r\n     */\r\n    loadDashboardData: async function (forceRefresh = false) {\r\n      // Check if all necessary DOM elements are present for the dashboard\r\n      if (\r\n        !CPManager.elements.dashboardStatsContainer ||\r\n        !CPManager.elements.dataUsageCanvas ||\r\n        !CPManager.elements.donutTotalData ||\r\n        !CPManager.elements.uploadLegendValue ||\r\n        !CPManager.elements.downloadLegendValue ||\r\n        !CPManager.elements.uploadPercentageSpan ||\r\n        !CPManager.elements.downloadPercentageSpan\r\n      ) {\r\n        console.error(\r\n          \"One or more dashboard elements are missing from the DOM.\",\r\n        );\r\n        // Display an error message if critical elements are missing\r\n        if (CPManager.elements.dashboardStatsContainer)\r\n          CPManager.elements.dashboardStatsContainer.innerHTML = `<p class=\"text-danger col-span-full text-center\">Error: Dashboard UI elements missing.</p>`;\r\n        return;\r\n      }\r\n\r\n      let sessionDataRows = null;\r\n      // voucherStats will now hold totalVouchers, activeVouchers, expiredVouchers, unusedVouchers (NEW), and totalProviders\r\n      let voucherStats = null;\r\n      let totalZonesCount = 0;\r\n\r\n      // Define cache parameters\r\n      const now = Date.now();\r\n      const cacheTTL = CPManager.config.inMemoryCacheTTLMinutes * 60 * 1000;\r\n\r\n      // Check if existing cache data is valid\r\n      const isSessionCacheValid =\r\n        CPManager.state.dashboard.apiDataCache.sessions &&\r\n        now - CPManager.state.dashboard.apiDataCache.sessionsLastFetched <\r\n          cacheTTL;\r\n      // Check for unusedVouchers in cache, as it's a new metric\r\n      const isVoucherStatsCacheValid =\r\n        CPManager.state.dashboard.apiDataCache.voucherStats !== null &&\r\n        CPManager.state.dashboard.apiDataCache.voucherStats.unusedVouchers !==\r\n          undefined && // NEW check\r\n        now - CPManager.state.dashboard.apiDataCache.voucherStatsLastFetched <\r\n          cacheTTL;\r\n\r\n      // Use cached data if available and valid, otherwise prepare for fresh fetch\r\n      if (!forceRefresh && isSessionCacheValid && isVoucherStatsCacheValid) {\r\n        console.log(\"Using cached dashboard API data.\");\r\n        sessionDataRows = CPManager.state.dashboard.apiDataCache.sessions;\r\n        voucherStats = CPManager.state.dashboard.apiDataCache.voucherStats;\r\n        // Ensure zones data is loaded even if cached for other parts of the app\r\n        if (CPManager.state.zones.allConfigured.length === 0) {\r\n          await CPManager.zones.fetchAllZoneData();\r\n        }\r\n        totalZonesCount = CPManager.state.zones.allConfigured.length;\r\n      } else {\r\n        console.log(\"Fetching fresh dashboard data or cache expired/forced.\");\r\n        // Show skeleton loaders while data is being fetched\r\n        // We now need 4 skeletons: Active Sessions, Configured Zones, Total/Active Vouchers, and the new combined card.\r\n        CPManager.elements.dashboardStatsContainer.innerHTML = `\r\n          <div class=\"skeleton-card\"></div>\r\n          <div class=\"skeleton-card\"></div>\r\n          <div class=\"skeleton-card\"></div>\r\n                    <div class=\"skeleton-card\"></div> `;\r\n        // Reset donut chart and legends to placeholder values\r\n        CPManager.elements.donutTotalData.textContent =\r\n          CPManager.config.placeholderValue;\r\n        CPManager.elements.uploadLegendValue.textContent =\r\n          CPManager.config.placeholderValue;\r\n        CPManager.elements.downloadLegendValue.textContent =\r\n          CPManager.config.placeholderValue;\r\n        CPManager.elements.uploadPercentageSpan.textContent = \"\";\r\n        CPManager.elements.downloadPercentageSpan.textContent = \"\";\r\n\r\n        // Destroy existing chart instance to prevent conflicts\r\n        if (CPManager.state.dashboard.chartInstance) {\r\n          CPManager.state.dashboard.chartInstance.destroy();\r\n          CPManager.state.dashboard.chartInstance = null;\r\n        }\r\n      }\r\n\r\n      try {\r\n        // Fetch session data if not cached or forced refresh\r\n        if (!sessionDataRows || forceRefresh || !isSessionCacheValid) {\r\n          const sessionData = await CPManager.api.callApi(\"/session/search\");\r\n          sessionDataRows =\r\n            sessionData && Array.isArray(sessionData.rows)\r\n              ? sessionData.rows\r\n              : [];\r\n          CPManager.state.dashboard.apiDataCache.sessions = sessionDataRows;\r\n          CPManager.state.dashboard.apiDataCache.sessionsLastFetched =\r\n            Date.now();\r\n        }\r\n\r\n        // Fetch zone data if not already loaded\r\n        if (\r\n          CPManager.state.zones.allConfigured.length === 0 &&\r\n          totalZonesCount === 0\r\n        ) {\r\n          await CPManager.zones.fetchAllZoneData();\r\n        }\r\n        totalZonesCount = CPManager.state.zones.allConfigured.length;\r\n\r\n        // Fetch Voucher Stats including Total Providers and Expired Vouchers\r\n        if (!voucherStats || forceRefresh || !isVoucherStatsCacheValid) {\r\n          let totalVouchers = 0,\r\n            activeVouchers = 0,\r\n            expiredVouchers = 0, // Initialize counter for expired vouchers\r\n            unusedVouchers = 0, // Initialize counter for unused vouchers (NEW)\r\n            totalProviders = 0; // Initialize counter for total providers\r\n\r\n          try {\r\n            // Fetch all voucher providers\r\n            const providers = await CPManager.api.callApi(\r\n              \"/voucher/list_providers\",\r\n            );\r\n            if (providers && Array.isArray(providers) && providers.length > 0) {\r\n              totalProviders = providers.length; // Set total providers count\r\n              for (const provider of providers) {\r\n                // For each provider, list all voucher groups\r\n                const voucherGroups = await CPManager.api.callApi(\r\n                  `/voucher/list_voucher_groups/${provider}`,\r\n                );\r\n                if (voucherGroups && Array.isArray(voucherGroups)) {\r\n                  for (const group of voucherGroups) {\r\n                    // For each group, list all vouchers\r\n                    const vouchersInGroup = await CPManager.api.callApi(\r\n                      `/voucher/list_vouchers/${provider}/${group}`,\r\n                    );\r\n                    if (vouchersInGroup && Array.isArray(vouchersInGroup)) {\r\n                      totalVouchers += vouchersInGroup.length;\r\n                      // Filter and count active vouchers\r\n                      activeVouchers += vouchersInGroup.filter(\r\n                        (v) => v.state === \"valid\",\r\n                      ).length;\r\n                      // Filter and count expired vouchers\r\n                      expiredVouchers += vouchersInGroup.filter(\r\n                        (v) => v.state === \"expired\",\r\n                      ).length;\r\n                      // Filter and count unused vouchers (NEW)\r\n                      unusedVouchers += vouchersInGroup.filter(\r\n                        (v) => v.state === \"unused\",\r\n                      ).length;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } catch (voucherError) {\r\n            console.error(\r\n              \"Error fetching voucher stats for dashboard:\",\r\n              voucherError.message,\r\n            );\r\n            CPManager.ui.showToast(\r\n              \"Could not load all voucher statistics for dashboard.\",\r\n              \"warning\",\r\n            );\r\n          }\r\n          // Store all calculated voucher statistics in the cache\r\n          voucherStats = {\r\n            totalVouchers,\r\n            activeVouchers,\r\n            expiredVouchers,\r\n            unusedVouchers, // NEW\r\n            totalProviders,\r\n          };\r\n          CPManager.state.dashboard.apiDataCache.voucherStats = voucherStats;\r\n          CPManager.state.dashboard.apiDataCache.voucherStatsLastFetched =\r\n            Date.now();\r\n        }\r\n\r\n        // Destructure retrieved data for display\r\n        const activeSessionCount = sessionDataRows.length;\r\n        const {\r\n          totalVouchers,\r\n          activeVouchers,\r\n          expiredVouchers,\r\n          unusedVouchers,\r\n          totalProviders,\r\n        } = voucherStats;\r\n\r\n        let totalClientUploadBytes = 0,\r\n          totalClientDownloadBytes = 0;\r\n        sessionDataRows.forEach((s) => {\r\n          totalClientUploadBytes += s.bytes_in || 0;\r\n          totalClientDownloadBytes += s.bytes_out || 0;\r\n        });\r\n\r\n        // Construct the HTML for dashboard statistics cards\r\n        // UPDATED: Using semantic color classes\r\n        let statsHtml = `\r\n          <div class=\"db-card\" id=\"dashboard-active-sessions-card\" title=\"Go to Sessions tab\" role=\"button\" tabindex=\"0\">\r\n            <div class=\"db-card-number\">${activeSessionCount}</div>\r\n            <div class=\"db-card-label\">Active Sessions</div>\r\n          </div>\r\n          <div class=\"db-card\" id=\"dashboard-zones-providers-card\" title=\"Go to Zones or Vouchers tab\" role=\"button\" tabindex=\"0\">\r\n            <div class=\"db-card-cols-2\">\r\n              <div>\r\n                <div class=\"db-card-number\">${totalZonesCount}</div>\r\n                <div class=\"db-card-label\">Configured Zones</div>\r\n              </div>\r\n              <div>\r\n                <div class=\"db-card-number\">${totalProviders}</div>\r\n                <div class=\"db-card-label\">Voucher Providers</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"db-card\" id=\"dashboard-vouchers-card\" title=\"Go to Vouchers tab\" role=\"button\" tabindex=\"0\">\r\n            <div class=\"db-card-cols-2\">\r\n              <div>\r\n                <div class=\"db-card-number\">${totalVouchers}</div>\r\n                <div class=\"db-card-label\">Total Vouchers</div>\r\n              </div>\r\n              <div>\r\n                <div class=\"db-card-number text-success\">${activeVouchers}</div>\r\n                <div class=\"db-card-label\">Active Vouchers</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"db-card\" id=\"dashboard-unused-expired-vouchers-card\" title=\"Go to Vouchers tab\" role=\"button\" tabindex=\"0\">\r\n              <div class=\"db-card-cols-2\">\r\n                  <div>\r\n                      <div class=\"db-card-number text-primary\">${unusedVouchers}</div>\r\n                      <div class=\"db-card-label\">Unused Vouchers</div>\r\n                  </div>\r\n                  <div>\r\n                      <div class=\"db-card-number text-danger\">${expiredVouchers}</div>\r\n                      <div class=\"db-card-label\">Expired Vouchers</div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        `;\r\n        CPManager.elements.dashboardStatsContainer.innerHTML = statsHtml;\r\n\r\n        // Add event listeners for direct navigation to tabs\r\n        document\r\n          .getElementById(\"dashboard-active-sessions-card\")\r\n          ?.addEventListener(\"click\", () =>\r\n            CPManager.tabs.setActiveTab(\"sessions\"),\r\n          );\r\n        document\r\n          .getElementById(\"dashboard-zones-providers-card\")\r\n          ?.addEventListener(\"click\", () =>\r\n            CPManager.tabs.setActiveTab(\"info\"),\r\n          );\r\n        document\r\n          .getElementById(\"dashboard-vouchers-card\")\r\n          ?.addEventListener(\"click\", () =>\r\n            CPManager.tabs.setActiveTab(\"vouchers\"),\r\n          );\r\n        // Add event listener for the new combined card\r\n        document\r\n          .getElementById(\"dashboard-unused-expired-vouchers-card\")\r\n          ?.addEventListener(\"click\", () =>\r\n            CPManager.tabs.setActiveTab(\"vouchers\"),\r\n          );\r\n\r\n        // Add keyboard navigation for dashboard cards\r\n        [\r\n          \"dashboard-active-sessions-card\",\r\n          \"dashboard-zones-providers-card\",\r\n          \"dashboard-vouchers-card\",\r\n          \"dashboard-unused-expired-vouchers-card\",\r\n        ].forEach((id) => {\r\n          const card = document.getElementById(id);\r\n          if (card) {\r\n            card.addEventListener(\"keydown\", (e) => {\r\n              if (e.key === \"Enter\" || e.key === \" \") {\r\n                e.preventDefault();\r\n                card.click();\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        // Update donut chart data and legends\r\n        const currentTotalData =\r\n          totalClientUploadBytes + totalClientDownloadBytes;\r\n        if (\r\n          forceRefresh ||\r\n          totalClientUploadBytes !==\r\n            CPManager.state.dashboard.originalUploadBytes ||\r\n          totalClientDownloadBytes !==\r\n            CPManager.state.dashboard.originalDownloadBytes ||\r\n          !CPManager.state.dashboard.chartInstance\r\n        ) {\r\n          CPManager.dashboard.storeOriginalChartData(\r\n            totalClientUploadBytes,\r\n            totalClientDownloadBytes,\r\n            currentTotalData,\r\n          );\r\n\r\n          if (CPManager.elements.donutTotalData) {\r\n            // Display total data in the center of the donut chart\r\n            CPManager.elements.donutTotalData.innerHTML = `\r\n              <span class=\"font-bold block text-lg\">${CPManager.utils.formatBytes(\r\n                currentTotalData,\r\n              )}</span>\r\n              <span class=\"text-xs text-muted-foreground\">(100.0%)</span>`;\r\n          }\r\n          // Update legend values for upload and download\r\n          if (CPManager.elements.uploadLegendValue)\r\n            CPManager.elements.uploadLegendValue.textContent =\r\n              CPManager.utils.formatBytes(totalClientUploadBytes);\r\n          if (CPManager.elements.downloadLegendValue)\r\n            CPManager.elements.downloadLegendValue.textContent =\r\n              CPManager.utils.formatBytes(totalClientDownloadBytes);\r\n          // Update percentage spans in legends\r\n          if (CPManager.elements.uploadPercentageSpan)\r\n            CPManager.elements.uploadPercentageSpan.textContent = `(${(currentTotalData >\r\n            0\r\n              ? (totalClientUploadBytes / currentTotalData) * 100\r\n              : 0\r\n            ).toFixed(1)}%)`;\r\n          if (CPManager.elements.downloadPercentageSpan)\r\n            CPManager.elements.downloadPercentageSpan.textContent = `(${(currentTotalData >\r\n            0\r\n              ? (totalClientDownloadBytes / currentTotalData) * 100\r\n              : 0\r\n            ).toFixed(1)}%)`;\r\n\r\n          const chartDataValues = [\r\n            totalClientUploadBytes,\r\n            totalClientDownloadBytes,\r\n          ];\r\n          // --- FINAL, COMPATIBLE CODE FOR CHART COLORS ---\r\n          const rootStyles = getComputedStyle(document.documentElement);\r\n\r\n          // This function gets a color and ensures it uses commas for Chart.js\r\n          const getChartCompatibleColor = (variableName, alpha = 1.0) => {\r\n            const rawValue = rootStyles.getPropertyValue(variableName).trim();\r\n            const commaValue = rawValue.replace(/ /g, \", \"); // THE FIX: Replaces spaces with commas\r\n            if (alpha < 1.0) {\r\n              return `hsla(${commaValue}, ${alpha})`;\r\n            }\r\n            return `hsl(${commaValue})`;\r\n          };\r\n          // Get all the colors for the chart using our new compatible function\r\n          const chartPrimaryColor = getChartCompatibleColor(\"--primary\", 0.7);\r\n          const chartSuccessColor = getChartCompatibleColor(\"--success\", 0.7);\r\n          const chartPrimaryHoverColor = getChartCompatibleColor(\"--primary\");\r\n          const chartSuccessHoverColor = getChartCompatibleColor(\"--success\");\r\n          const tooltipBgColor = getChartCompatibleColor(\"--secondary\");\r\n          const tooltipTextColor = getChartCompatibleColor(\r\n            \"--secondary-foreground\",\r\n          );\r\n          const chartBorderColor = getChartCompatibleColor(\"--card\");\r\n          // --- END OF FINAL CODE ---\r\n\r\n          // Update existing chart data or create a new chart instance\r\n          if (CPManager.state.dashboard.chartInstance) {\r\n            CPManager.state.dashboard.chartInstance.data.datasets[0].data =\r\n              chartDataValues;\r\n            CPManager.state.dashboard.chartInstance.options.plugins.tooltip.backgroundColor =\r\n              tooltipBgColor;\r\n            CPManager.state.dashboard.chartInstance.options.plugins.tooltip.titleColor =\r\n              tooltipTextColor;\r\n            CPManager.state.dashboard.chartInstance.options.plugins.tooltip.bodyColor =\r\n              tooltipTextColor;\r\n            CPManager.state.dashboard.chartInstance.options.borderColor =\r\n              chartBorderColor;\r\n            CPManager.state.dashboard.chartInstance.update();\r\n          } else if (CPManager.elements.dataUsageCanvas) {\r\n            // Ensure canvas element exists\r\n            const ctx = CPManager.elements.dataUsageCanvas.getContext(\"2d\");\r\n            CPManager.state.dashboard.chartInstance = new Chart(ctx, {\r\n              type: \"doughnut\",\r\n              data: {\r\n                labels: [\"Client Upload\", \"Client Download\"],\r\n                datasets: [\r\n                  {\r\n                    data: chartDataValues,\r\n                    backgroundColor: [chartPrimaryColor, chartSuccessColor],\r\n                    hoverBackgroundColor: [\r\n                      chartPrimaryHoverColor,\r\n                      chartSuccessHoverColor,\r\n                    ],\r\n                    borderColor: chartBorderColor,\r\n                    borderWidth: 2,\r\n                    hoverBorderWidth: 3,\r\n                    hoverOffset: 8,\r\n                  },\r\n                ],\r\n              },\r\n              options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false, // Allows flexible sizing\r\n                cutout: \"70%\", // Donut thickness\r\n                animation: {\r\n                  animateScale: true,\r\n                  animateRotate: true,\r\n                  duration: 1000,\r\n                },\r\n                layout: { padding: 10 },\r\n                plugins: {\r\n                  legend: { display: false }, // Hide default legend as custom legend is used\r\n                  tooltip: {\r\n                    enabled: true,\r\n                    backgroundColor: tooltipBgColor,\r\n                    titleColor: tooltipTextColor,\r\n                    bodyColor: tooltipTextColor,\r\n                    displayColors: false, // Hide color squares in tooltip\r\n                    callbacks: {\r\n                      label: function (context) {\r\n                        let label = context.label || \"\";\r\n                        if (label) label += \": \";\r\n                        if (context.parsed !== null) {\r\n                          label += CPManager.utils.formatBytes(context.parsed);\r\n                          const totalForPercentage =\r\n                            CPManager.state.dashboard.originalTotalBytes;\r\n                          if (totalForPercentage > 0) {\r\n                            const percentage = (\r\n                              (context.parsed / totalForPercentage) *\r\n                              100\r\n                            ).toFixed(1);\r\n                            label += ` (${percentage}%)`;\r\n                          } else {\r\n                            label += ` (0.0%)`;\r\n                          }\r\n                        }\r\n                        return label;\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading dashboard data:\", error);\r\n        // Display generic error message if data fetching fails\r\n        if (CPManager.elements.dashboardStatsContainer)\r\n          CPManager.elements.dashboardStatsContainer.innerHTML = `<p class=\"text-danger col-span-full text-center\">Error loading dashboard data. Check console.</p>`;\r\n        if (CPManager.elements.donutTotalData)\r\n          CPManager.elements.donutTotalData.textContent =\r\n            CPManager.config.placeholderValue;\r\n        // Reset cache states on error\r\n        CPManager.state.dashboard.apiDataCache.sessions = null;\r\n        CPManager.state.dashboard.apiDataCache.sessionsLastFetched = 0;\r\n        CPManager.state.dashboard.apiDataCache.voucherStats = null;\r\n        CPManager.state.dashboard.apiDataCache.voucherStatsLastFetched = 0;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Stores the original bytes data for chart calculations and legend displays.\r\n     * @param {number} uploadBytes - Total upload bytes.\r\n     * @param {number} downloadBytes - Total download bytes.\r\n     * @param {number} totalBytes - Sum of upload and download bytes.\r\n     */\r\n    storeOriginalChartData: function (uploadBytes, downloadBytes, totalBytes) {\r\n      CPManager.state.dashboard.originalUploadBytes = uploadBytes;\r\n      CPManager.state.dashboard.originalDownloadBytes = downloadBytes;\r\n      CPManager.state.dashboard.originalTotalBytes = totalBytes;\r\n    },\r\n\r\n    /**\r\n     * Handles theme changes by destroying and reloading the dashboard chart\r\n     * to ensure colors and styles are updated correctly.\r\n     */\r\n    handleThemeChange: async function () {\r\n      console.log(\"Dashboard: Handling theme change for chart update.\");\r\n      // Destroy current chart instance to apply new theme styles\r\n      if (CPManager.state.dashboard.chartInstance) {\r\n        CPManager.state.dashboard.chartInstance.destroy();\r\n        CPManager.state.dashboard.chartInstance = null;\r\n        console.log(\"Dashboard chart instance destroyed for theme change.\");\r\n      }\r\n\r\n      // Reload dashboard data, forcing a refresh to re-render the chart with new theme colors\r\n      await CPManager.dashboard.loadDashboardData(true);\r\n    },\r\n\r\n    /**\r\n     * Initializes event listeners specific to the dashboard,\r\n     * such as hover effects for chart legends.\r\n     */\r\n    initializeDashboardEventListeners: function () {\r\n      // Check for required elements\r\n      if (\r\n        !CPManager.elements.legendItems ||\r\n        !CPManager.elements.donutTotalData\r\n      ) {\r\n        console.warn(\r\n          \"Dashboard legend items or donut total display element not found.\",\r\n        );\r\n        return;\r\n      }\r\n\r\n      // Add mouseover and mouseleave events for legend items\r\n      CPManager.elements.legendItems.forEach((item) => {\r\n        item.addEventListener(\"mouseenter\", () => {\r\n          let segmentValue;\r\n          let segmentColorClass, segmentPercentageColorClass;\r\n          const currentTotalForPercentage =\r\n            CPManager.state.dashboard.originalTotalBytes;\r\n\r\n          segmentPercentageColorClass = \"text-muted-foreground\";\r\n\r\n          // Determine segment value and color based on the hovered legend item\r\n          if (item.textContent.includes(\"Client Upload\")) {\r\n            segmentValue = CPManager.state.dashboard.originalUploadBytes;\r\n            segmentColorClass = \"text-blue-500\";\r\n          } else if (item.textContent.includes(\"Client Download\")) {\r\n            segmentValue = CPManager.state.dashboard.originalDownloadBytes;\r\n            segmentColorClass = \"text-green-500\";\r\n          }\r\n\r\n          // Update the donut total display with specific segment data on hover\r\n          if (segmentValue !== undefined && CPManager.elements.donutTotalData) {\r\n            let segmentPercentage = 0;\r\n            if (currentTotalForPercentage > 0) {\r\n              segmentPercentage =\r\n                (segmentValue / currentTotalForPercentage) * 100;\r\n            }\r\n            CPManager.elements.donutTotalData.innerHTML = `\r\n              <span class=\"font-bold block text-lg ${segmentColorClass}\">${CPManager.utils.formatBytes(\r\n                segmentValue,\r\n              )}</span>\r\n              <span class=\"text-xs ${segmentPercentageColorClass}\">(${segmentPercentage.toFixed(\r\n                1,\r\n              )}%)</span>`;\r\n          }\r\n        });\r\n\r\n        item.addEventListener(\"mouseleave\", () => {\r\n          // Revert the donut total display to show overall total when mouse leaves legend item\r\n          if (CPManager.elements.donutTotalData) {\r\n            const totalPercentageColorClass = \"text-muted-foreground\";\r\n            CPManager.elements.donutTotalData.innerHTML = `\r\n              <span class=\"font-bold block text-lg\">${CPManager.utils.formatBytes(\r\n                CPManager.state.dashboard.originalTotalBytes,\r\n              )}</span>\r\n              <span class=\"text-xs ${totalPercentageColorClass}\">(100.0%)</span>`;\r\n          }\r\n        });\r\n      });\r\n    },\r\n  };\r\n})(CPManager);\r\n","// src/js/main.js\r\n\r\n// Import all modules that contribute to the global CPManager object.\r\n// This ensures that CPManager.config, CPManager.elements, CPManager.sessions, etc.,\r\n// are all properly initialized before CPManager.app (defined below) tries to use them.\r\n\r\nimport { library, dom } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faShieldAlt,\r\n  faSun,\r\n  faMoon,\r\n  faMobileAlt,\r\n  faBellSlash,\r\n  faBell,\r\n  faExclamationTriangle,\r\n  faInfoCircle,\r\n  faTimesCircle,\r\n  faTrashAlt,\r\n  faPlusCircle,\r\n  faEdit,\r\n  faSpinner,\r\n  faChevronDown,\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faTachometerAlt,\r\n  faUsers,\r\n  faTicketAlt,\r\n  faLayerGroup,\r\n  faStreetView,\r\n  faUsersSlash,\r\n  faFolderOpen,\r\n  faBiohazard,\r\n  faRotate,\r\n  faUserShield,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// Add the imported icons to the library\r\nlibrary.add(\r\n  faShieldAlt,\r\n  faSun,\r\n  faMoon,\r\n  faMobileAlt,\r\n  faBellSlash,\r\n  faBell,\r\n  faExclamationTriangle,\r\n  faInfoCircle,\r\n  faTimesCircle,\r\n  faTrashAlt,\r\n  faPlusCircle,\r\n  faEdit,\r\n  faSpinner,\r\n  faChevronDown,\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faTachometerAlt,\r\n  faUsers,\r\n  faTicketAlt,\r\n  faLayerGroup,\r\n  faStreetView,\r\n  faUsersSlash,\r\n  faFolderOpen,\r\n  faBiohazard,\r\n  faRotate,\r\n  faUserShield,\r\n);\r\n\r\nimport \"../css/style.css\";\r\nimport \"chart.js/auto\";\r\nimport \"jspdf-autotable\";\r\nimport \"./config.js\"; // Must be first to define CPManager.config and CPManager.state\r\nimport \"./utils.js\";\r\nimport \"./api.js\";\r\nimport \"./ui.js\";\r\nimport \"./tabs.js\";\r\nimport \"./sessions.js\";\r\nimport \"./vouchers.js\";\r\nimport \"./zones.js\";\r\nimport \"./dashboard.js\";\r\nimport \"./notifications.js\";\r\n\r\n(function (CPManager) {\r\n  // Define CPManager.app as an object\r\n  CPManager.app = {};\r\n\r\n  // Assign functions to CPManager.app directly to ensure they are set in order\r\n  CPManager.app.applyTheme = function (theme) {\r\n    let actualTheme = theme;\r\n    if (theme === \"system\") {\r\n      actualTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n        ? \"dark\"\r\n        : \"light\";\r\n    }\r\n\r\n    if (actualTheme === \"dark\") {\r\n      // Use 'dark' for Tailwind's class strategy\r\n      document.documentElement.classList.add(\"dark\");\r\n    } else {\r\n      // Remove 'dark' for light mode\r\n      document.documentElement.classList.remove(\"dark\");\r\n    }\r\n\r\n    if (CPManager.elements.themeToggleBtn) {\r\n      CPManager.elements.themeToggleBtn.innerHTML =\r\n        theme === \"light\"\r\n          ? '<i class=\"fas fa-sun\"></i>'\r\n          : theme === \"dark\"\r\n            ? '<i class=\"fas fa-moon\"></i>'\r\n            : '<i class=\"fas fa-mobile-alt\"></i>';\r\n      CPManager.elements.themeToggleBtn.setAttribute(\r\n        \"aria-label\",\r\n        theme === \"light\"\r\n          ? \"Switch to Dark Mode\"\r\n          : theme === \"dark\"\r\n            ? \"Switch to System Preference\"\r\n            : \"Switch to Light Mode\",\r\n      );\r\n    }\r\n  };\r\n\r\n  CPManager.app.toggleTheme = async function () {\r\n    const currentThemeSetting =\r\n      localStorage.getItem(CPManager.config.localStorageKeys.theme) || \"system\";\r\n    let newThemeSetting;\r\n\r\n    if (currentThemeSetting === \"light\") {\r\n      newThemeSetting = \"dark\";\r\n    } else if (currentThemeSetting === \"dark\") {\r\n      newThemeSetting = \"system\";\r\n    } else {\r\n      // system\r\n      newThemeSetting = \"light\";\r\n    }\r\n\r\n    localStorage.setItem(\r\n      CPManager.config.localStorageKeys.theme,\r\n      newThemeSetting,\r\n    );\r\n    // Use CPManager.app.applyTheme explicitly\r\n    CPManager.app.applyTheme(newThemeSetting);\r\n\r\n    // Refresh dashboard chart due to theme change\r\n    if (\r\n      CPManager.dashboard &&\r\n      typeof CPManager.dashboard.handleThemeChange === \"function\"\r\n    ) {\r\n      console.log(\r\n        \"Theme setting changed by toggle, triggering dashboard theme handler.\",\r\n      );\r\n      await CPManager.dashboard.handleThemeChange();\r\n    }\r\n  };\r\n\r\n  CPManager.app.loadTheme = function () {\r\n    const savedTheme =\r\n      localStorage.getItem(CPManager.config.localStorageKeys.theme) || \"system\";\r\n    // Use CPManager.app.applyTheme explicitly\r\n    CPManager.app.applyTheme(savedTheme);\r\n\r\n    if (savedTheme === \"system\") {\r\n      const darkModeMediaQuery = window.matchMedia(\r\n        \"(prefers-color-scheme: dark)\",\r\n      );\r\n      darkModeMediaQuery.addEventListener(\"change\", async () => {\r\n        if (\r\n          localStorage.getItem(CPManager.config.localStorageKeys.theme) ===\r\n          \"system\"\r\n        ) {\r\n          // Use CPManager.app.applyTheme explicitly\r\n          CPManager.app.applyTheme(\"system\");\r\n          if (\r\n            CPManager.dashboard &&\r\n            typeof CPManager.dashboard.handleThemeChange === \"function\"\r\n          ) {\r\n            console.log(\r\n              \"System theme preference changed, triggering dashboard theme handler.\",\r\n            );\r\n            await CPManager.dashboard.handleThemeChange();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  CPManager.app.setCredentialEntryUIMode = function (isEntryMode) {\r\n    const navElement = document.querySelector(\"nav\");\r\n    const mainTabsContainerElement =\r\n      CPManager.elements.mainTabs?.closest(\".mb-4.border-b\");\r\n    const tabContentElement = document.getElementById(\"tabContent\");\r\n    const footerElement = document.querySelector(\"footer\");\r\n    const configInputSection = CPManager.elements.configInputSection;\r\n    const mainContentScrollAreaElement = document.getElementById(\r\n      \"main-content-scroll-area\",\r\n    );\r\n\r\n    const elementsToToggle = [\r\n      navElement,\r\n      mainTabsContainerElement,\r\n      tabContentElement,\r\n      footerElement,\r\n    ];\r\n\r\n    if (isEntryMode) {\r\n      elementsToToggle.forEach((el) => el?.classList.add(\"hidden\"));\r\n      configInputSection?.classList.remove(\"hidden\");\r\n\r\n      if (mainContentScrollAreaElement) {\r\n        mainContentScrollAreaElement.classList.add(\r\n          \"flex\",\r\n          \"flex-col\",\r\n          \"items-center\",\r\n          \"justify-center\",\r\n          \"min-h-screen\",\r\n          \"p-4\",\r\n        );\r\n      }\r\n      if (configInputSection) {\r\n        configInputSection.classList.add(\"max-w-lg\", \"w-full\", \"my-auto\");\r\n        configInputSection.classList.remove(\"mb-4\");\r\n      }\r\n      if (CPManager.elements.saveApiCredsBtn) {\r\n        CPManager.elements.saveApiCredsBtn.disabled = false;\r\n      }\r\n    } else {\r\n      elementsToToggle.forEach((el) => el?.classList.remove(\"hidden\"));\r\n      configInputSection?.classList.add(\"hidden\");\r\n\r\n      if (mainContentScrollAreaElement) {\r\n        mainContentScrollAreaElement.classList.remove(\r\n          \"flex\",\r\n          \"flex-col\",\r\n          \"items-center\",\r\n          \"justify-center\",\r\n          \"min-h-screen\",\r\n          \"p-4\",\r\n        );\r\n      }\r\n      if (configInputSection) {\r\n        configInputSection.classList.remove(\"max-w-lg\", \"w-full\", \"my-auto\");\r\n        configInputSection.classList.add(\"mb-4\");\r\n      }\r\n      if (CPManager.elements.saveApiCredsBtn) {\r\n        CPManager.elements.saveApiCredsBtn.disabled = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  CPManager.app.loadAppConfiguration = async function () {\r\n    try {\r\n      const response = await fetch(\"./app-config.json\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\r\n          `Failed to load app-config.json: ${response.statusText}`,\r\n        );\r\n      }\r\n\r\n      const appConfigData = await response.json();\r\n\r\n      if (appConfigData.apiBaseUrl) {\r\n        CPManager.config.baseUrl = appConfigData.apiBaseUrl;\r\n      } else {\r\n        console.warn(\r\n          \"apiBaseUrl not found in app-config.json. Will rely on user input for API Base URL.\",\r\n        );\r\n        CPManager.config.baseUrl = \"\";\r\n      }\r\n\r\n      if (\r\n        appConfigData.inMemoryCacheTTLMinutes !== undefined &&\r\n        typeof appConfigData.inMemoryCacheTTLMinutes === \"number\"\r\n      ) {\r\n        CPManager.config.inMemoryCacheTTLMinutes =\r\n          appConfigData.inMemoryCacheTTLMinutes;\r\n      }\r\n      if (\r\n        appConfigData.itemsPerPage !== undefined &&\r\n        typeof appConfigData.itemsPerPage === \"number\" &&\r\n        appConfigData.itemsPerPage > 0\r\n      ) {\r\n        CPManager.config.itemsPerPage = appConfigData.itemsPerPage;\r\n      }\r\n      console.log(\r\n        \"App config loaded. API Base URL:\",\r\n        CPManager.config.baseUrl,\r\n        \"Cache TTL:\",\r\n        CPManager.config.inMemoryCacheTTLMinutes,\r\n        \"Items/Page:\",\r\n        CPManager.config.itemsPerPage,\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error loading app configuration:\", error);\r\n      CPManager.config.baseUrl = \"\";\r\n      if (CPManager.elements.apiStatusFooterText) {\r\n        CPManager.elements.apiStatusFooterText.textContent =\r\n          \"App Config Load Failed!\";\r\n        CPManager.elements.apiStatusFooterText.className =\r\n          \"font-semibold text-red-500 dark:text-red-400\";\r\n      }\r\n      CPManager.ui.showToast(\r\n        `Warning: App configuration file failed to load. Error: ${error.message}`,\r\n        \"warning\",\r\n        10000,\r\n      );\r\n    }\r\n  };\r\n\r\n  CPManager.app.registerServiceWorker = function () {\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker\r\n        .register(\"./sw.js\")\r\n        .then((reg) => console.log(\"Service worker registered:\", reg.scope))\r\n        .catch((err) =>\r\n          console.error(\"Service worker registration failed:\", err),\r\n        );\r\n      let refreshing;\r\n      navigator.serviceWorker.addEventListener(\"controllerchange\", () => {\r\n        if (refreshing) return;\r\n        window.location.reload();\r\n        refreshing = true;\r\n      });\r\n    }\r\n  };\r\n\r\n  CPManager.app.loadApiCredentials = function () {\r\n    CPManager.state.currentApiKey =\r\n      localStorage.getItem(CPManager.config.localStorageKeys.apiKey) || \"\";\r\n    CPManager.state.currentApiSecret =\r\n      localStorage.getItem(CPManager.config.localStorageKeys.apiSecret) || \"\";\r\n    CPManager.config.baseUrl =\r\n      localStorage.getItem(CPManager.config.localStorageKeys.apiBaseUrl) ||\r\n      CPManager.config.baseUrl ||\r\n      \"\";\r\n\r\n    if (CPManager.elements.configApiKeyInput)\r\n      CPManager.elements.configApiKeyInput.value =\r\n        CPManager.state.currentApiKey;\r\n    if (CPManager.elements.configApiSecretInput)\r\n      CPManager.elements.configApiSecretInput.value =\r\n        CPManager.state.currentApiSecret;\r\n    if (CPManager.elements.configApiBaseUrlInput)\r\n      CPManager.elements.configApiBaseUrlInput.value = CPManager.config.baseUrl;\r\n  };\r\n\r\n  CPManager.app.saveApiCredentials = async function () {\r\n    if (\r\n      !CPManager.elements.configApiKeyInput ||\r\n      !CPManager.elements.configApiSecretInput ||\r\n      !CPManager.elements.configApiBaseUrlInput\r\n    )\r\n      return;\r\n\r\n    CPManager.state.currentApiKey =\r\n      CPManager.elements.configApiKeyInput.value.trim();\r\n    CPManager.state.currentApiSecret =\r\n      CPManager.elements.configApiSecretInput.value.trim();\r\n    CPManager.config.baseUrl =\r\n      CPManager.elements.configApiBaseUrlInput.value.trim();\r\n\r\n    if (!CPManager.config.baseUrl) {\r\n      CPManager.ui.showToast(\"OPNsense API Base URL cannot be empty.\", \"error\");\r\n      return;\r\n    }\r\n    try {\r\n      new URL(CPManager.config.baseUrl);\r\n    } catch (error) {\r\n      console.error(\"Invalid OPNsense API Base URL format:\", error);\r\n      CPManager.ui.showToast(\"Invalid OPNsense API Base URL format.\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (CPManager.state.currentApiKey && CPManager.state.currentApiSecret) {\r\n      try {\r\n        localStorage.setItem(\r\n          CPManager.config.localStorageKeys.apiKey,\r\n          CPManager.state.currentApiKey,\r\n        );\r\n        localStorage.setItem(\r\n          CPManager.config.localStorageKeys.apiSecret,\r\n          CPManager.state.currentApiSecret,\r\n        );\r\n        localStorage.setItem(\r\n          CPManager.config.localStorageKeys.apiBaseUrl,\r\n          CPManager.config.baseUrl,\r\n        );\r\n        CPManager.ui.showToast(\r\n          \"API credentials and Base URL saved.\",\r\n          \"success\",\r\n        );\r\n\r\n        await CPManager.app.initializeAppLogic();\r\n        let currentActiveTabId =\r\n          localStorage.getItem(CPManager.config.localStorageKeys.activeTab) ||\r\n          \"dashboard\";\r\n        if (!CPManager.elements.tabPanes[currentActiveTabId])\r\n          currentActiveTabId = \"dashboard\";\r\n\r\n        console.log(\r\n          `saveApiCredentials: Forcing refresh for tab: ${currentActiveTabId}`,\r\n        );\r\n        CPManager.tabs.setActiveTab(currentActiveTabId, true);\r\n      } catch (e) {\r\n        CPManager.ui.showToast(\"Failed to save to local storage.\", \"error\");\r\n        console.error(\"Error saving to localStorage:\", e);\r\n      }\r\n    } else {\r\n      CPManager.ui.showToast(\"API Key and Secret cannot be empty.\", \"error\");\r\n    }\r\n  };\r\n\r\n  CPManager.app.clearApiCredentials = function () {\r\n    try {\r\n      localStorage.removeItem(CPManager.config.localStorageKeys.apiKey);\r\n      localStorage.removeItem(CPManager.config.localStorageKeys.apiSecret);\r\n      localStorage.removeItem(CPManager.config.localStorageKeys.apiBaseUrl);\r\n    } catch (e) {\r\n      console.error(\"Error clearing localStorage:\", e);\r\n    }\r\n    CPManager.state.currentApiKey = \"\";\r\n    CPManager.state.currentApiSecret = \"\";\r\n    CPManager.config.baseUrl = \"\";\r\n    if (CPManager.elements.configApiKeyInput)\r\n      CPManager.elements.configApiKeyInput.value = \"\";\r\n    if (CPManager.elements.configApiSecretInput)\r\n      CPManager.elements.configApiSecretInput.value = \"\";\r\n    if (CPManager.elements.configApiBaseUrlInput)\r\n      CPManager.elements.configApiBaseUrlInput.value = \"\";\r\n\r\n    CPManager.ui.showToast(\"API credentials cleared.\", \"info\");\r\n    CPManager.app.setCredentialEntryUIMode(true);\r\n\r\n    document.querySelectorAll(\"button\").forEach((el) => {\r\n      if (\r\n        el !== CPManager.elements.saveApiCredsBtn &&\r\n        el !== CPManager.elements.clearApiCredsBtn &&\r\n        !el.id.startsWith(\"confirm-\") &&\r\n        !el.id.startsWith(\"cancel-\") &&\r\n        el !== CPManager.elements.themeToggleBtn\r\n      ) {\r\n        el.disabled = true;\r\n      }\r\n    });\r\n    document\r\n      .querySelectorAll(\r\n        \"input:not(#config-api-key):not(#config-api-secret):not(#config-api-base-url), select\",\r\n      )\r\n      .forEach((el) => (el.disabled = true));\r\n\r\n    if (CPManager.elements.mainTabs)\r\n      CPManager.elements.mainTabs\r\n        .querySelectorAll(\".tab-btn\")\r\n        .forEach((btn) => btn.classList.add(\"pointer-events-none\"));\r\n    if (CPManager.elements.apiStatusFooterText) {\r\n      CPManager.elements.apiStatusFooterText.textContent =\r\n        \"Credentials Cleared\";\r\n      CPManager.elements.apiStatusFooterText.className =\r\n        \"font-semibold text-yellow-500 dark:text-yellow-400\";\r\n    }\r\n    if (CPManager.elements.sessionCardContainer)\r\n      CPManager.ui.clearContainer(\r\n        CPManager.elements.sessionCardContainer,\r\n        \"session-pagination\",\r\n      );\r\n    if (CPManager.elements.voucherCardContainer)\r\n      CPManager.ui.clearContainer(\r\n        CPManager.elements.voucherCardContainer,\r\n        \"voucher-pagination\",\r\n      );\r\n    if (CPManager.elements.zoneListContainer)\r\n      CPManager.ui.clearContainer(\r\n        CPManager.elements.zoneListContainer,\r\n        \"zone-pagination\",\r\n      );\r\n    if (CPManager.elements.dashboardStatsContainer)\r\n      CPManager.ui.clearContainer(CPManager.elements.dashboardStatsContainer);\r\n\r\n    if (CPManager.state.dashboard.chartInstance) {\r\n      CPManager.state.dashboard.chartInstance.destroy();\r\n      CPManager.state.dashboard.chartInstance = null;\r\n    }\r\n    if (CPManager.elements.donutTotalData)\r\n      CPManager.elements.donutTotalData.textContent =\r\n        CPManager.config.placeholderValue;\r\n\r\n    CPManager.state.sessions.all = [];\r\n    CPManager.state.sessions.currentPage = 1;\r\n    CPManager.state.vouchers.cachedProviders = [];\r\n    CPManager.state.vouchers.cachedGroups = {};\r\n    CPManager.state.vouchers.cachedData = {};\r\n    CPManager.state.vouchers.currentPage = 1;\r\n    CPManager.state.zones.allConfigured = [];\r\n    CPManager.state.zones.currentPage = 1;\r\n    CPManager.state.dashboard.apiDataCache = {\r\n      sessions: null,\r\n      voucherStats: null,\r\n    };\r\n    CPManager.dashboard.storeOriginalChartData(0, 0, 0);\r\n  };\r\n\r\n  CPManager.app.checkApiStatusAndConfig = async function () {\r\n    if (!CPManager.config.baseUrl) {\r\n      if (CPManager.elements.apiStatusFooterText) {\r\n        CPManager.elements.apiStatusFooterText.textContent =\r\n          \"API Base URL Missing!\";\r\n        CPManager.elements.apiStatusFooterText.className =\r\n          \"font-semibold text-red-500 dark:text-red-400\";\r\n      }\r\n      CPManager.ui.showToast(\r\n        \"OPNsense API Base URL is missing.\",\r\n        \"error\",\r\n        10000,\r\n      );\r\n      CPManager.app.setCredentialEntryUIMode(true);\r\n      document\r\n        .querySelectorAll(\r\n          'button:not(#save-api-creds-btn):not(#clear-api-creds-btn):not([id^=\"confirm-\"]):not([id^=\"cancel-\"]):not(#theme-toggle-btn)',\r\n        )\r\n        .forEach((el) => (el.disabled = true));\r\n      document\r\n        .querySelectorAll(\r\n          \"input:not(#config-api-key):not(#config-api-secret):not(#config-api-base-url), select\",\r\n        )\r\n        .forEach((el) => (el.disabled = true));\r\n      if (CPManager.elements.mainTabs)\r\n        CPManager.elements.mainTabs\r\n          .querySelectorAll(\".tab-btn\")\r\n          .forEach((btn) => btn.classList.add(\"pointer-events-none\"));\r\n      return false;\r\n    }\r\n\r\n    if (!CPManager.state.currentApiKey || !CPManager.state.currentApiSecret) {\r\n      if (CPManager.elements.apiStatusFooterText) {\r\n        CPManager.elements.apiStatusFooterText.textContent =\r\n          \"Credentials Missing!\";\r\n        CPManager.elements.apiStatusFooterText.className =\r\n          \"font-semibold text-yellow-500 dark:text-yellow-400\";\r\n      }\r\n      CPManager.app.setCredentialEntryUIMode(true);\r\n      document\r\n        .querySelectorAll(\r\n          'button:not(#save-api-creds-btn):not(#clear-api-creds-btn):not([id^=\"confirm-\"]):not([id^=\"cancel-\"]):not(#theme-toggle-btn)',\r\n        )\r\n        .forEach((el) => (el.disabled = true));\r\n      document\r\n        .querySelectorAll(\r\n          \"input:not(#config-api-key):not(#config-api-secret):not(#config-api-base-url), select\",\r\n        )\r\n        .forEach((el) => (el.disabled = true));\r\n      if (CPManager.elements.mainTabs)\r\n        CPManager.elements.mainTabs\r\n          .querySelectorAll(\".tab-btn\")\r\n          .forEach((btn) => btn.classList.add(\"pointer-events-none\"));\r\n      return false;\r\n    }\r\n\r\n    CPManager.app.setCredentialEntryUIMode(false);\r\n\r\n    try {\r\n      await CPManager.zones.fetchAllZoneData();\r\n      const initialCheckData = CPManager.state.zones.allConfigured;\r\n\r\n      if (Array.isArray(initialCheckData)) {\r\n        if (CPManager.elements.apiStatusFooterText) {\r\n          CPManager.elements.apiStatusFooterText.textContent = \"Connected\";\r\n          CPManager.elements.apiStatusFooterText.className =\r\n            \"font-semibold text-green-600 dark:text-green-400\";\r\n        }\r\n        return true;\r\n      } else {\r\n        if (CPManager.elements.apiStatusFooterText) {\r\n          CPManager.elements.apiStatusFooterText.textContent =\r\n            \"Connection Problematic\";\r\n          CPManager.elements.apiStatusFooterText.className =\r\n            \"font-semibold text-yellow-500 dark:text-yellow-400\";\r\n        }\r\n        console.warn(\r\n          \"Initial API check (fetchAllZoneData) returned unexpected data format:\",\r\n          initialCheckData,\r\n        );\r\n        CPManager.ui.showToast(\r\n          \"API connection check returned unexpected data.\",\r\n          \"warning\",\r\n        );\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Initial API check (fetchAllZoneData) failed:\", error);\r\n      if (CPManager.elements.apiStatusFooterText) {\r\n        CPManager.elements.apiStatusFooterText.textContent =\r\n          \"Connection Failed\";\r\n        CPManager.elements.apiStatusFooterText.className =\r\n          \"font-semibold text-red-500 dark:text-red-400\";\r\n      }\r\n      if (\r\n        error.message.includes(\"401\") ||\r\n        error.message.includes(\"Unauthorized\")\r\n      ) {\r\n        CPManager.app.setCredentialEntryUIMode(true);\r\n        CPManager.ui.showToast(\r\n          \"API authentication failed. Check API Key/Secret.\",\r\n          \"error\",\r\n          10000,\r\n        );\r\n      } else if (error.message.includes(\"Failed to fetch\")) {\r\n        CPManager.ui.showToast(\r\n          \"Cannot reach OPNsense API. Check Base URL & CORS.\",\r\n          \"error\",\r\n          10000,\r\n        );\r\n        CPManager.app.setCredentialEntryUIMode(true);\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  CPManager.app.handleApplyCpConfiguration = async function () {\r\n    if (!CPManager.elements.applyCpConfigBtn) return;\r\n    const originalButtonText = CPManager.elements.applyCpConfigBtn.innerHTML;\r\n    CPManager.elements.applyCpConfigBtn.disabled = true;\r\n    CPManager.elements.applyCpConfigBtn.innerHTML =\r\n      '<i class=\"fas fa-spinner fa-spin mr-2\"></i>Applying...';\r\n    CPManager.ui.showToast(\r\n      \"Applying Captive Portal configuration changes...\",\r\n      \"info\",\r\n    );\r\n\r\n    try {\r\n      const reconfigResult = await CPManager.api.callApi(\r\n        \"/service/reconfigure\",\r\n        \"POST\",\r\n        {},\r\n      );\r\n      if (\r\n        reconfigResult &&\r\n        (reconfigResult.status === \"ok\" ||\r\n          (reconfigResult.message &&\r\n            reconfigResult.message.toLowerCase().includes(\"ok\")))\r\n      ) {\r\n        CPManager.ui.showToast(\r\n          \"Captive portal service reconfigured successfully.\",\r\n          \"success\",\r\n        );\r\n      } else {\r\n        const errorDetail = reconfigResult\r\n          ? reconfigResult.status ||\r\n            reconfigResult.message ||\r\n            JSON.stringify(reconfigResult)\r\n          : \"Unknown response\";\r\n        CPManager.ui.showToast(\r\n          `Service reconfigure status: ${errorDetail}`,\r\n          \"warning\",\r\n        );\r\n        console.warn(\r\n          \"Service reconfigure did not return 'ok' status:\",\r\n          reconfigResult,\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during manual reconfigure call:\", error);\r\n      CPManager.ui.showToast(\r\n        `Error applying Captive Portal configuration: ${error.message}`,\r\n        \"error\",\r\n      );\r\n    } finally {\r\n      CPManager.elements.applyCpConfigBtn.disabled = false;\r\n      CPManager.elements.applyCpConfigBtn.innerHTML = originalButtonText;\r\n    }\r\n  };\r\n\r\n  CPManager.app.initializeAllEventListeners = function () {\r\n    if (\r\n      !CPManager ||\r\n      typeof CPManager.elements !== \"object\" ||\r\n      CPManager.elements === null\r\n    ) {\r\n      console.error(\r\n        \"CPManager.elements not initialized. Cannot attach listeners.\",\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (CPManager.elements.themeToggleBtn)\r\n      CPManager.elements.themeToggleBtn.addEventListener(\r\n        \"click\",\r\n        CPManager.app.toggleTheme,\r\n      );\r\n    if (CPManager.elements.saveApiCredsBtn)\r\n      CPManager.elements.saveApiCredsBtn.addEventListener(\r\n        \"click\",\r\n        CPManager.app.saveApiCredentials,\r\n      );\r\n    if (CPManager.elements.clearApiCredsBtn)\r\n      CPManager.elements.clearApiCredsBtn.addEventListener(\r\n        \"click\",\r\n        CPManager.app.clearApiCredentials,\r\n      );\r\n    if (CPManager.elements.apiStatusFooter) {\r\n      CPManager.elements.apiStatusFooter.addEventListener(\"click\", () => {\r\n        CPManager.app.setCredentialEntryUIMode(true);\r\n      });\r\n      CPManager.elements.apiStatusFooter.classList.add(\r\n        \"cursor-pointer\",\r\n        \"transition-opacity\",\r\n        \"duration-200\",\r\n        \"hover:opacity-75\",\r\n      );\r\n      CPManager.elements.apiStatusFooter.title =\r\n        \"Click to reconfigure API Credentials\";\r\n    }\r\n    if (CPManager.elements.applyCpConfigBtn)\r\n      CPManager.elements.applyCpConfigBtn.addEventListener(\r\n        \"click\",\r\n        CPManager.app.handleApplyCpConfiguration,\r\n      );\r\n    if (CPManager.elements.mainTabs) CPManager.tabs.initializeTabs();\r\n    else console.warn(\"Main tabs container not found for event listener init.\");\r\n\r\n    if (\r\n      CPManager.elements.confirmationModal &&\r\n      CPManager.elements.confirmCancelBtn\r\n    ) {\r\n      CPManager.elements.confirmCancelBtn.addEventListener(\"click\", () => {\r\n        CPManager.ui.hideModal(CPManager.elements.confirmationModal);\r\n        CPManager.state.confirmCallback = null;\r\n      });\r\n    }\r\n    if (\r\n      CPManager.elements.confirmationModal &&\r\n      CPManager.elements.confirmProceedBtn\r\n    ) {\r\n      CPManager.elements.confirmProceedBtn.addEventListener(\"click\", () => {\r\n        if (CPManager.state.confirmCallback) CPManager.state.confirmCallback();\r\n        CPManager.ui.hideModal(CPManager.elements.confirmationModal);\r\n        CPManager.state.confirmCallback = null;\r\n      });\r\n    }\r\n\r\n    const cancelButtons = document.querySelectorAll('.modal [id^=\"cancel-\"]');\r\n    cancelButtons.forEach((btn) => {\r\n      if (btn && btn.dataset.specificHandlerAttached !== \"true\") {\r\n        btn.addEventListener(\"click\", () => {\r\n          const modal = btn.closest(\".modal\");\r\n          if (modal) {\r\n            CPManager.ui.hideModal(modal);\r\n            if (\r\n              modal.id === \"editZoneModal\" &&\r\n              CPManager.state.zones.originalFullDataForEdit\r\n            ) {\r\n              CPManager.state.zones.originalFullDataForEdit = null;\r\n            }\r\n          }\r\n        });\r\n        btn.dataset.specificHandlerAttached = \"true\";\r\n      }\r\n    });\r\n\r\n    const notificationsToggleBtn = document.getElementById(\r\n      \"notifications-toggle-btn\",\r\n    );\r\n    if (notificationsToggleBtn) {\r\n      let longPressTimer;\r\n      let longPressFired = false;\r\n      const LONG_PRESS_DURATION = 750;\r\n      const handleShortClick = () => {\r\n        if (CPManager.state.notifications.sessionPollIntervalId) {\r\n          CPManager.notifications.stopSessionPolling();\r\n          CPManager.notifications.updateNotificationToggleState(false);\r\n          CPManager.ui.showToast(\"Sign-in notifications disabled.\", \"info\");\r\n        } else {\r\n          CPManager.notifications.requestNotificationPermission();\r\n        }\r\n      };\r\n      const startPress = (event) => {\r\n        event.preventDefault();\r\n        longPressFired = false;\r\n        longPressTimer = setTimeout(() => {\r\n          longPressFired = true;\r\n          if (\r\n            notificationsToggleBtn.getAttribute(\"aria-label\") ===\r\n            \"Disable sign-in notifications\"\r\n          ) {\r\n            CPManager.app.handleSendTestNotification();\r\n          } else {\r\n            CPManager.ui.showToast(\r\n              \"Enable notifications first to send a test.\",\r\n              \"warning\",\r\n            );\r\n          }\r\n        }, LONG_PRESS_DURATION);\r\n      };\r\n      const endPress = (event) => {\r\n        event.preventDefault();\r\n        clearTimeout(longPressTimer);\r\n        if (!longPressFired) handleShortClick();\r\n        longPressFired = false;\r\n      };\r\n      const cancelPress = () => {\r\n        clearTimeout(longPressTimer);\r\n        longPressFired = false;\r\n      };\r\n      notificationsToggleBtn.addEventListener(\"mousedown\", startPress);\r\n      notificationsToggleBtn.addEventListener(\"mouseup\", endPress);\r\n      notificationsToggleBtn.addEventListener(\"mouseleave\", cancelPress);\r\n      notificationsToggleBtn.addEventListener(\"touchstart\", startPress, {\r\n        passive: false,\r\n      });\r\n      notificationsToggleBtn.addEventListener(\"touchend\", endPress);\r\n      notificationsToggleBtn.addEventListener(\"touchcancel\", cancelPress);\r\n    }\r\n\r\n    if (\r\n      CPManager.sessions &&\r\n      CPManager.sessions.initializeSessionEventListeners\r\n    )\r\n      CPManager.sessions.initializeSessionEventListeners();\r\n    if (\r\n      CPManager.vouchers &&\r\n      CPManager.vouchers.initializeVoucherEventListeners\r\n    )\r\n      CPManager.vouchers.initializeVoucherEventListeners();\r\n    if (CPManager.zones && CPManager.zones.initializeZoneEventListeners)\r\n      CPManager.zones.initializeZoneEventListeners();\r\n    if (\r\n      CPManager.dashboard &&\r\n      CPManager.dashboard.initializeDashboardEventListeners\r\n    )\r\n      CPManager.dashboard.initializeDashboardEventListeners();\r\n  };\r\n\r\n  CPManager.app.initializeAppLogic = async function () {\r\n    const connected = await CPManager.app.checkApiStatusAndConfig();\r\n    if (connected) {\r\n      document.querySelectorAll(\"button, input, select\").forEach((el) => {\r\n        const isConfigEl =\r\n          el.id.startsWith(\"config-api-\") ||\r\n          el === CPManager.elements.saveApiCredsBtn;\r\n        if (\r\n          !isConfigEl ||\r\n          el === CPManager.elements.clearApiCredsBtn ||\r\n          el === CPManager.elements.themeToggleBtn\r\n        ) {\r\n          el.disabled = false;\r\n        }\r\n      });\r\n      if (CPManager.elements.mainTabs)\r\n        CPManager.elements.mainTabs\r\n          .querySelectorAll(\".tab-btn\")\r\n          .forEach((btn) => btn.classList.remove(\"pointer-events-none\"));\r\n      if (CPManager.elements.clearApiCredsBtn)\r\n        CPManager.elements.clearApiCredsBtn.disabled = false;\r\n      if (CPManager.elements.themeToggleBtn)\r\n        CPManager.elements.themeToggleBtn.disabled = false;\r\n\r\n      // This call to dom.watch() needs to happen after DOM content is loaded\r\n      // to ensure all <i> tags are available for replacement.\r\n      dom.watch();\r\n\r\n      await CPManager.sessions.fetchManagerSessionStatus();\r\n      CPManager.ui.disableVoucherActionButtons(false, true, true);\r\n\r\n      let initialTab =\r\n        localStorage.getItem(CPManager.config.localStorageKeys.activeTab) ||\r\n        \"dashboard\";\r\n      const hashTab = window.location.hash.substring(1);\r\n      if (hashTab && CPManager.elements.tabPanes[hashTab]) {\r\n        initialTab = hashTab;\r\n        if (window.history.replaceState)\r\n          window.history.replaceState(\r\n            null,\r\n            null,\r\n            window.location.pathname + window.location.search,\r\n          );\r\n      }\r\n      if (!CPManager.elements.tabPanes[initialTab]) initialTab = \"dashboard\";\r\n\r\n      CPManager.tabs.setActiveTab(initialTab, false);\r\n      if (CPManager.ui && CPManager.ui.initializeResizeHandler)\r\n        CPManager.ui.initializeResizeHandler();\r\n      CPManager.notifications.initializeNotifications();\r\n    } else {\r\n      document\r\n        .querySelectorAll(\r\n          'button:not(#save-api-creds-btn):not(#clear-api-creds-btn):not([id^=\"confirm-\"]):not([id^=\"cancel-\"]):not(#theme-toggle-btn)',\r\n        )\r\n        .forEach((el) => (el.disabled = true));\r\n      document\r\n        .querySelectorAll(\r\n          \"input:not(#config-api-key):not(#config-api-secret):not(#config-api-base-url), select\",\r\n        )\r\n        .forEach((el) => (el.disabled = true));\r\n      if (CPManager.elements.mainTabs)\r\n        CPManager.elements.mainTabs\r\n          .querySelectorAll(\".tab-btn\")\r\n          .forEach((btn) => btn.classList.add(\"pointer-events-none\"));\r\n\r\n      if (CPManager.elements.clearApiCredsBtn)\r\n        CPManager.elements.clearApiCredsBtn.disabled = false;\r\n      if (CPManager.elements.themeToggleBtn)\r\n        CPManager.elements.themeToggleBtn.disabled = false;\r\n      if (CPManager.elements.applyCpConfigBtn)\r\n        CPManager.elements.applyCpConfigBtn.disabled = true;\r\n\r\n      const dashboardPane = CPManager.elements.tabPanes.dashboard;\r\n      if (\r\n        dashboardPane &&\r\n        !CPManager.config.baseUrl &&\r\n        document.querySelector(\"#config-input-section.hidden\")\r\n      ) {\r\n        Object.values(CPManager.elements.tabPanes).forEach((pane) => {\r\n          if (pane) {\r\n            pane.classList.add(\"hidden\");\r\n            pane.classList.remove(\"active\");\r\n          }\r\n        });\r\n        dashboardPane.classList.remove(\"hidden\");\r\n        dashboardPane.classList.add(\"active\");\r\n        dashboardPane.innerHTML = `<div class=\"text-center p-8 text-red-500 dark:text-red-400\"><i class=\"fas fa-exclamation-triangle fa-3x mb-3\"></i><p>App config failed to load. Cannot connect.</p></div>`;\r\n      }\r\n    }\r\n  };\r\n\r\n  CPManager.app.handleSendTestNotification = async function () {\r\n    if (!(\"Notification\" in window)) {\r\n      CPManager.ui.showToast(\r\n        \"Browser does not support notifications.\",\r\n        \"error\",\r\n      );\r\n      return;\r\n    }\r\n    if (!navigator.serviceWorker.controller) {\r\n      CPManager.ui.showToast(\"Service worker not active.\", \"warning\");\r\n      return;\r\n    }\r\n    let permission = Notification.permission;\r\n    if (permission === \"default\") {\r\n      await CPManager.notifications.requestNotificationPermission();\r\n      permission = Notification.permission;\r\n    }\r\n    if (permission === \"granted\") {\r\n      navigator.serviceWorker.controller.postMessage({\r\n        type: \"SHOW_NOTIFICATION\",\r\n        payload: {\r\n          title: \"Test Notification\",\r\n          body: \"Notifications are working!\",\r\n          icon: \"icons/icon-192x192.png\",\r\n          id: `test-${Date.now()}`,\r\n        },\r\n      });\r\n      CPManager.ui.showToast(\"Test notification sent!\", \"success\");\r\n    } else if (permission === \"denied\") {\r\n      CPManager.ui.showToast(\r\n        \"Notification permission denied. Please enable in browser settings.\",\r\n        \"error\",\r\n        7000,\r\n      );\r\n    }\r\n  };\r\n\r\n  CPManager.app.initializeApp = async function () {\r\n    // Call loadTheme here using CPManager.app directly, ensuring it's defined.\r\n    CPManager.app.loadTheme();\r\n    try {\r\n      await CPManager.app.loadAppConfiguration();\r\n      CPManager.app.loadApiCredentials();\r\n      CPManager.app.initializeAllEventListeners();\r\n      CPManager.app.registerServiceWorker();\r\n      await CPManager.app.initializeAppLogic();\r\n    } catch (error) {\r\n      console.error(\"Failed to initialize the application:\", error);\r\n      if (CPManager.elements.applyCpConfigBtn)\r\n        CPManager.elements.applyCpConfigBtn.disabled = true;\r\n      const dashboardPane = CPManager.elements.tabPanes.dashboard;\r\n      if (dashboardPane) {\r\n        Object.values(CPManager.elements.tabPanes).forEach((pane) => {\r\n          if (pane) {\r\n            pane.classList.add(\"hidden\");\r\n            pane.classList.remove(\"active\");\r\n          }\r\n        });\r\n        dashboardPane.classList.remove(\"hidden\");\r\n        dashboardPane.classList.add(\"active\");\r\n        dashboardPane.innerHTML = `<div class=\"text-center p-8 text-red-500 dark:text-red-400\"><i class=\"fas fa-exclamation-triangle fa-3x mb-3\"></i><p>Critical Error: App init failed. ${error.message}</p></div>`;\r\n      }\r\n      CPManager.app.setCredentialEntryUIMode(true);\r\n    }\r\n  };\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", CPManager.app.initializeApp);\r\n})(window.CPManager);\r\n","// js/ui.js\r\n\r\n(function (CPManager) {\r\n  // --- DOM Element Selections ---\r\n  CPManager.elements = {\r\n    // Theme Toggle Button\r\n    themeToggleBtn: document.getElementById(\"theme-toggle-btn\"),\r\n\r\n    // Configuration Section Elements\r\n    configInputSection: document.getElementById(\"config-input-section\"),\r\n    configApiBaseUrlInput: document.getElementById(\"config-api-base-url\"),\r\n    configApiKeyInput: document.getElementById(\"config-api-key\"),\r\n    configApiSecretInput: document.getElementById(\"config-api-secret\"),\r\n    saveApiCredsBtn: document.getElementById(\"save-api-creds-btn\"),\r\n    clearApiCredsBtn: document.getElementById(\"clear-api-creds-btn\"),\r\n\r\n    // Main Navigation and Tab Elements\r\n    mainTabs: document.getElementById(\"mainTabs\"),\r\n    tabPanes: {\r\n      dashboard: document.getElementById(\"dashboard-content\"),\r\n      sessions: document.getElementById(\"sessions-content\"),\r\n      vouchers: document.getElementById(\"vouchers-content\"),\r\n      info: document.getElementById(\"info-content\"),\r\n    },\r\n\r\n    // Sessions Tab Elements\r\n    sessionCardContainer: document.getElementById(\"session-card-container\"),\r\n    sessionPaginationContainer: document.getElementById(\"session-pagination\"),\r\n    sessionSearchInput: document.getElementById(\"session-search-input\"),\r\n    sessionZoneFilterSelect: document.getElementById(\r\n      \"session-zone-filter-select\",\r\n    ),\r\n    findMySessionBtn: document.getElementById(\"find-my-session-btn\"),\r\n    disconnectSelectedSessionsBtn: document.getElementById(\r\n      \"disconnect-selected-sessions-btn\",\r\n    ),\r\n    sessionSelectAllContainer: document.getElementById(\r\n      \"session-select-all-container\",\r\n    ),\r\n    sessionSelectAllCheckbox: document.getElementById(\r\n      \"session-select-all-checkbox\",\r\n    ),\r\n    sessionSelectedCountText: document.getElementById(\r\n      \"session-selected-count-text\",\r\n    ),\r\n\r\n    // Vouchers Tab Elements\r\n    voucherProviderSelect: document.getElementById(\"voucher-provider-select\"),\r\n    voucherGroupSelect: document.getElementById(\"voucher-group-select\"),\r\n    voucherCardContainer: document.getElementById(\"voucher-card-container\"),\r\n    voucherPaginationContainer: document.getElementById(\"voucher-pagination\"),\r\n    createVouchersBtn: document.getElementById(\"create-vouchers-btn\"),\r\n    dropVoucherGroupBtn: document.getElementById(\"drop-voucher-group-btn\"),\r\n    dropExpiredVouchersBtn: document.getElementById(\r\n      \"drop-expired-vouchers-btn\",\r\n    ),\r\n    providerZoneLinkageCard: document.getElementById(\r\n      \"provider-zone-linkage-card\",\r\n    ),\r\n    providerZoneLinkageDetails: document.getElementById(\r\n      \"provider-zone-linkage-details\",\r\n    ),\r\n    voucherSearchInput: document.getElementById(\"voucher-search-input\"),\r\n    voucherStateFilterSelect: document.getElementById(\r\n      \"voucher-state-filter-select\",\r\n    ),\r\n    voidSelectedVouchersBtn: document.getElementById(\r\n      \"void-selected-vouchers-btn\",\r\n    ),\r\n    voucherSelectAllContainer: document.getElementById(\r\n      \"voucher-select-all-container\",\r\n    ),\r\n    voucherSelectAllCheckbox: document.getElementById(\r\n      \"voucher-select-all-checkbox\",\r\n    ),\r\n    voucherSelectedCountText: document.getElementById(\r\n      \"voucher-selected-count-text\",\r\n    ),\r\n\r\n    // Voucher Generation Modal Elements\r\n    generateVoucherModal: document.getElementById(\"generateVoucherModal\"),\r\n    voucherCountSelect: document.getElementById(\"voucher-count-select\"),\r\n    voucherCountCustom: document.getElementById(\"voucher-count-custom\"),\r\n    voucherLifetimeSelect: document.getElementById(\"voucher-lifetime-select\"),\r\n    voucherLifetimeCustom: document.getElementById(\"voucher-lifetime-custom\"),\r\n    voucherUsageSelect: document.getElementById(\"voucher-usage-select\"),\r\n    voucherUsageCustom: document.getElementById(\"voucher-usage-custom\"),\r\n    voucherGroupNameInput: document.getElementById(\"voucher-groupname\"),\r\n    cancelGenerateVoucherBtn: document.getElementById(\r\n      \"cancel-generate-voucher-btn\",\r\n    ),\r\n    submitGenerateVoucherBtn: document.getElementById(\r\n      \"submit-generate-voucher-btn\",\r\n    ),\r\n\r\n    // Zone Info Tab Elements\r\n    zoneListContainer: document.getElementById(\"zone-list-container\"),\r\n    zonePaginationContainer: document.getElementById(\"zone-pagination\"),\r\n\r\n    // Edit Zone Modal Elements\r\n    editZoneModal: document.getElementById(\"editZoneModal\"),\r\n    editZoneModalTitleName: document.getElementById(\"editZoneModalTitleName\"),\r\n    editZoneUuidInput: document.getElementById(\"editZoneUuidInput\"),\r\n    zoneEditDescriptionInput: document.getElementById(\"zone-edit-description\"),\r\n    zoneEditEnabledCheckbox: document.getElementById(\"zone-edit-enabled\"),\r\n    zoneEditEnabledText: document.getElementById(\"zone-edit-enabled-text\"),\r\n    zoneEditAllowedAddressesTextarea: document.getElementById(\r\n      \"zone-edit-allowedAddresses\",\r\n    ),\r\n    zoneEditAllowedMACAddressesTextarea: document.getElementById(\r\n      \"zone-edit-allowedMACAddresses\",\r\n    ),\r\n    zoneEditHardTimeoutInput: document.getElementById(\"zone-edit-hardtimeout\"),\r\n    zoneEditIdleTimeoutInput: document.getElementById(\"zone-edit-idletimeout\"),\r\n    zoneEditConcurrentLoginsCheckbox: document.getElementById(\r\n      \"zone-edit-concurrentlogins\",\r\n    ),\r\n    zoneEditConcurrentLoginsText: document.getElementById(\r\n      \"zone-edit-concurrentlogins-text\",\r\n    ),\r\n    zoneEditTemplateSelect: document.getElementById(\"zone-edit-template\"),\r\n    zoneEditAuthServersSelect: document.getElementById(\"zone-edit-authservers\"),\r\n    cancelEditZoneBtn: document.getElementById(\"cancel-edit-zone-btn\"),\r\n    submitEditZoneBtn: document.getElementById(\"submit-edit-zone-btn\"),\r\n    applyCpConfigBtn: document.getElementById(\"apply-cp-config-btn\"),\r\n\r\n    // Confirmation Modal Elements\r\n    confirmationModal: document.getElementById(\"confirmationModal\"),\r\n    confirmationTitle: document.getElementById(\"confirmationTitle\"),\r\n    confirmationMessage: document.getElementById(\"confirmationMessage\"),\r\n    confirmCancelBtn: document.getElementById(\"confirm-cancel-btn\"),\r\n    confirmProceedBtn: document.getElementById(\"confirm-proceed-btn\"),\r\n\r\n    // Toast Notification Elements\r\n    toastNotification: document.getElementById(\"toast-notification\"),\r\n    toastMessage: document.getElementById(\"toast-message\"),\r\n\r\n    // Footer Elements\r\n    apiStatusFooter: document.getElementById(\"api-status-footer\"),\r\n    apiStatusFooterText: document\r\n      .getElementById(\"api-status-footer\")\r\n      ?.querySelector(\"span\"),\r\n\r\n    // Dashboard Elements\r\n    dashboardStatsContainer: document.getElementById(\r\n      \"dashboard-stats-container\",\r\n    ),\r\n    dataUsageCanvas: document.getElementById(\"dataUsageCanvas\"),\r\n    donutTotalData: document.getElementById(\"donut-total-data\"),\r\n    uploadLegendValue: document.getElementById(\"upload-legend-value\"),\r\n    downloadLegendValue: document.getElementById(\"download-legend-value\"),\r\n    uploadPercentageSpan: document.getElementById(\"upload-percentage\"),\r\n    downloadPercentageSpan: document.getElementById(\"download-percentage\"),\r\n    legendItems: document.querySelectorAll(\".legend-item\"),\r\n  };\r\n\r\n  // --- UI State & Helpers for Pagination Resize ---\r\n  if (!CPManager.ui) CPManager.ui = {}; // Ensure CPManager.ui namespace exists\r\n  CPManager.ui.paginationStates = {}; // Stores { containerId: { args... } } for each pagination instance\r\n  CPManager.ui.resizeListenerAttached = false; // Flag to ensure resize listener is attached only once\r\n\r\n  // --- UI Feedback Functions ---\r\n  CPManager.ui = {\r\n    ...CPManager.ui, // Preserve existing ui methods if any were defined before this block\r\n    /**\r\n     * Displays a toast notification message.\r\n     * @param {string} message - The message to display.\r\n     * @param {string} [type='info'] - Type of toast ('info', 'success', 'error', 'warning').\r\n     * @param {number} [duration=5000] - Duration in milliseconds to show the toast.\r\n     */\r\n    showToast: function (message, type = \"info\", duration = 5000) {\r\n      const toastNotification = CPManager.elements.toastNotification;\r\n      const toastMessage = CPManager.elements.toastMessage;\r\n\r\n      if (!toastNotification || !toastMessage) {\r\n        console.warn(\"Toast elements not found in the DOM.\");\r\n        alert(`Toast (${type}): ${message}`); // Fallback to alert\r\n        return;\r\n      }\r\n      toastMessage.textContent = message;\r\n      // Reset classes\r\n      toastNotification.className =\r\n        \"fixed bottom-5 right-5 text-white py-3 px-5 rounded-lg shadow-lg opacity-0 transition-opacity duration-300 max-w-xs z-50 print:hidden pointer-events-none\";\r\n\r\n      switch (type) {\r\n        case \"success\":\r\n          toastNotification.classList.add(\"bg-success\");\r\n          break;\r\n        case \"error\":\r\n          toastNotification.classList.add(\"bg-danger\");\r\n          break;\r\n        case \"warning\":\r\n          toastNotification.classList.add(\"bg-warning\", \"text-foreground\");\r\n          break;\r\n        case \"info\":\r\n        default:\r\n          toastNotification.classList.add(\"bg-secondary\");\r\n          break;\r\n      }\r\n\r\n      // Show the toast\r\n      toastNotification.classList.remove(\"opacity-0\");\r\n      toastNotification.classList.add(\"opacity-100\");\r\n      toastNotification.classList.remove(\"pointer-events-none\");\r\n\r\n      if (toastNotification.timer) clearTimeout(toastNotification.timer);\r\n      toastNotification.timer = setTimeout(() => {\r\n        toastNotification.classList.remove(\"opacity-100\");\r\n        toastNotification.classList.add(\"opacity-0\");\r\n        toastNotification.classList.add(\"pointer-events-none\");\r\n      }, duration);\r\n    },\r\n\r\n    /**\r\n     * Shows a confirmation modal.\r\n     */\r\n    showConfirmationModal: function (title, message, callback) {\r\n      const { confirmationModal, confirmationTitle, confirmationMessage } =\r\n        CPManager.elements;\r\n      if (!confirmationModal || !confirmationTitle || !confirmationMessage) {\r\n        console.error(\"Confirmation modal elements not found.\");\r\n        if (\r\n          confirm(\r\n            title +\r\n              \"\\n\" +\r\n              message\r\n                .replace(/<br\\/>/g, \"\\n\")\r\n                .replace(/<strong>|<\\/strong>/g, \"\"),\r\n          )\r\n        ) {\r\n          if (callback) callback();\r\n        }\r\n        return;\r\n      }\r\n      confirmationTitle.textContent = title;\r\n      confirmationMessage.innerHTML = message;\r\n      CPManager.state.confirmCallback = callback;\r\n      confirmationModal.classList.remove(\"hidden\");\r\n      confirmationModal.classList.add(\"flex\");\r\n    },\r\n\r\n    /**\r\n     * Hides the currently active modal.\r\n     */\r\n    hideModal: function (modalElement) {\r\n      if (modalElement) {\r\n        modalElement.classList.add(\"hidden\");\r\n        modalElement.classList.remove(\"flex\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Toggles card details visibility.\r\n     */\r\n    toggleCardDetails: function (clickedCard) {\r\n      if (!clickedCard) return;\r\n      const detailsContent = clickedCard.querySelector(\".card-details-content\");\r\n      if (!detailsContent) return;\r\n\r\n      const isCurrentlyExpanded = detailsContent.classList.contains(\"expanded\");\r\n\r\n      // Find all cards in the same tab pane and close them\r\n      const activePane = clickedCard.closest(\".tab-pane\");\r\n      if (activePane) {\r\n        const allCards = activePane.querySelectorAll(\r\n          \".session-card, .voucher-card, .zone-info-card, #provider-zone-linkage-card\",\r\n        );\r\n        allCards.forEach((card) => {\r\n          if (card !== clickedCard) {\r\n            const otherDetails = card.querySelector(\".card-details-content\");\r\n            if (otherDetails && otherDetails.classList.contains(\"expanded\")) {\r\n              otherDetails.classList.remove(\"expanded\");\r\n              otherDetails.setAttribute(\"aria-hidden\", \"true\");\r\n              const otherSummary = card.querySelector(\r\n                \".voucher-summary, .session-summary, .zone-summary\",\r\n              );\r\n              if (otherSummary) {\r\n                otherSummary.setAttribute(\"aria-expanded\", \"false\");\r\n                const icon = otherSummary.querySelector(\r\n                  \"svg.svg-inline--fa.fa-chevron-down\",\r\n                );\r\n                if (icon) {\r\n                  icon.classList.remove(\"rotate-180\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // Now, toggle the clicked card's state. If it was already expanded, it will now be closed.\r\n      const isNowExpanded = !isCurrentlyExpanded;\r\n      detailsContent.classList.toggle(\"expanded\", isNowExpanded);\r\n      detailsContent.setAttribute(\"aria-hidden\", String(!isNowExpanded));\r\n\r\n      const summary = clickedCard.querySelector(\r\n        \".voucher-summary, .session-summary, .zone-summary\",\r\n      );\r\n      if (summary) {\r\n        summary.setAttribute(\"aria-expanded\", String(isNowExpanded));\r\n        const icon = summary.querySelector(\r\n          \"svg.svg-inline--fa.fa-chevron-down\",\r\n        );\r\n        if (icon) {\r\n          icon.classList.toggle(\"rotate-180\", isNowExpanded);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Disables/enables voucher action buttons.\r\n     */\r\n    disableVoucherActionButtons: function (generate, cleanup, deleteGroup) {\r\n      const { createVouchersBtn, dropExpiredVouchersBtn, dropVoucherGroupBtn } =\r\n        CPManager.elements;\r\n      if (createVouchersBtn) createVouchersBtn.disabled = generate;\r\n      if (dropExpiredVouchersBtn) dropExpiredVouchersBtn.disabled = cleanup;\r\n      if (dropVoucherGroupBtn) dropVoucherGroupBtn.disabled = deleteGroup;\r\n    },\r\n\r\n    /**\r\n     * Shows skeleton loaders.\r\n     */\r\n    showSkeletonLoaders: function (\r\n      container,\r\n      count = 2,\r\n      skeletonHtml = '<div class=\"skeleton-card\"></div>',\r\n      paginationContainerId = null,\r\n    ) {\r\n      if (container) {\r\n        let skeletons = \"\";\r\n        for (let i = 0; i < count; i++) skeletons += skeletonHtml;\r\n        container.innerHTML = skeletons;\r\n      }\r\n      if (paginationContainerId) {\r\n        const paginationEl = document.getElementById(paginationContainerId);\r\n        if (paginationEl) paginationEl.innerHTML = \"\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Clears a container.\r\n     */\r\n    clearContainer: function (container, paginationContainerId = null) {\r\n      if (container) container.innerHTML = \"\";\r\n      if (paginationContainerId) {\r\n        const paginationEl = document.getElementById(paginationContainerId);\r\n        if (paginationEl) paginationEl.innerHTML = \"\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Shows a \"no data\" message.\r\n     */\r\n    showNoDataMessage: function (\r\n      container,\r\n      message = \"No data available.\",\r\n      iconClass = \"fas fa-info-circle\",\r\n      paginationContainerId = null,\r\n    ) {\r\n      if (container) {\r\n        container.innerHTML = `<div class=\"text-center p-4 text-gray-500 dark:text-slate-400\"><i class=\"${iconClass} fa-3x mb-2\"></i><p>${message}</p></div>`;\r\n      }\r\n      if (paginationContainerId) {\r\n        const paginationEl = document.getElementById(paginationContainerId);\r\n        if (paginationEl) paginationEl.innerHTML = \"\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Renders pagination controls.\r\n     */\r\n    renderPaginationControls: function (\r\n      container,\r\n      currentPage,\r\n      totalItems,\r\n      itemsPerPage,\r\n      onPageChangeCallback,\r\n    ) {\r\n      if (container && container.id) {\r\n        CPManager.ui.paginationStates[container.id] = {\r\n          container,\r\n          currentPage,\r\n          totalItems,\r\n          itemsPerPage,\r\n          onPageChangeCallback,\r\n        };\r\n      }\r\n\r\n      if (!container) return;\r\n      container.innerHTML = \"\";\r\n\r\n      if (totalItems <= itemsPerPage) return;\r\n\r\n      const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n      const nav = document.createElement(\"nav\");\r\n      // REMOVED background, border, and shadow classes to make the container invisible\r\n      nav.className =\r\n        \"flex items-center justify-between px-4 py-3 sm:px-6 mt-6\";\r\n      nav.setAttribute(\"aria-label\", \"Pagination\");\r\n\r\n      const summaryDiv = document.createElement(\"div\");\r\n      summaryDiv.className = \"hidden sm:block\";\r\n      const startItem = (currentPage - 1) * itemsPerPage + 1;\r\n      const endItem = Math.min(currentPage * itemsPerPage, totalItems);\r\n      summaryDiv.innerHTML = `<p class=\"text-sm text-gray-700 dark:text-slate-300\">Showing <span class=\"font-medium text-gray-900 dark:text-white\">${startItem}</span> to <span class=\"font-medium text-gray-900 dark:text-white\">${endItem}</span> of <span class=\"font-medium text-gray-900 dark:text-white\">${totalItems}</span> results</p>`;\r\n      nav.appendChild(summaryDiv);\r\n\r\n      const buttonsOuterDiv = document.createElement(\"div\");\r\n      buttonsOuterDiv.className = \"flex-1 flex justify-between sm:justify-end\";\r\n      const buttonsInnerDiv = document.createElement(\"div\");\r\n      buttonsInnerDiv.className =\r\n        \"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\";\r\n      buttonsInnerDiv.setAttribute(\"aria-label\", \"Pagination\");\r\n\r\n      const createButton = (\r\n        content,\r\n        pageNum,\r\n        isIcon = false,\r\n        isEnabled = true,\r\n        isCurrent = false,\r\n      ) => {\r\n        const button = document.createElement(\"button\");\r\n        button.innerHTML = content;\r\n        button.setAttribute(\r\n          \"aria-label\",\r\n          isIcon\r\n            ? pageNum < currentPage\r\n              ? \"Previous page\"\r\n              : \"Next page\"\r\n            : `Go to page ${pageNum}`,\r\n        );\r\n\r\n        // Define base classes\r\n        let baseClasses =\r\n          \"relative inline-flex items-center text-sm font-medium pagination-btn-base\";\r\n        let sizeClasses = isIcon ? \" p-2\" : \" px-4 py-2\";\r\n        let colorClasses = \"\";\r\n\r\n        if (isCurrent) {\r\n          // Current page button style\r\n          colorClasses = \"pagination-btn-current\";\r\n          button.setAttribute(\"aria-current\", \"page\");\r\n        } else if (isEnabled) {\r\n          // Default enabled button style (matches card/field)\r\n          colorClasses = \"pagination-btn-hover\";\r\n        } else {\r\n          // Disabled button style\r\n          colorClasses = \"pagination-btn-disabled\";\r\n        }\r\n\r\n        button.className = `${baseClasses} ${sizeClasses} ${colorClasses}`;\r\n\r\n        if (isEnabled && !isCurrent) {\r\n          button.addEventListener(\"click\", () => onPageChangeCallback(pageNum));\r\n        }\r\n        button.disabled = !isEnabled;\r\n        return button;\r\n      };\r\n\r\n      const prevButton = createButton(\r\n        '<i class=\"fas fa-chevron-left\"></i>',\r\n        currentPage - 1,\r\n        true,\r\n        currentPage > 1,\r\n      );\r\n      prevButton.classList.add(\"rounded-l-md\");\r\n      buttonsInnerDiv.appendChild(prevButton);\r\n\r\n      let pageRangeDisplayed = 2;\r\n      if (typeof window !== \"undefined\" && window.innerWidth < 480) {\r\n        pageRangeDisplayed = 0;\r\n      } else if (typeof window !== \"undefined\" && window.innerWidth < 640) {\r\n        pageRangeDisplayed = 1;\r\n      }\r\n\r\n      let displayedPages = [];\r\n      if (totalPages <= 2 * pageRangeDisplayed + 5) {\r\n        for (let i = 1; i <= totalPages; i++) displayedPages.push(i);\r\n      } else {\r\n        displayedPages.push(1);\r\n        if (currentPage > pageRangeDisplayed + 2) displayedPages.push(\"...\");\r\n        let startPage = Math.max(2, currentPage - pageRangeDisplayed);\r\n        let endPage = Math.min(\r\n          totalPages - 1,\r\n          currentPage + pageRangeDisplayed,\r\n        );\r\n        if (currentPage <= pageRangeDisplayed + 1)\r\n          endPage = Math.min(totalPages - 1, 1 + 2 * pageRangeDisplayed);\r\n        if (currentPage >= totalPages - pageRangeDisplayed)\r\n          startPage = Math.max(2, totalPages - 2 * pageRangeDisplayed);\r\n        for (let i = startPage; i <= endPage; i++) {\r\n          if (i > 0 && i <= totalPages) displayedPages.push(i);\r\n        }\r\n        if (currentPage < totalPages - pageRangeDisplayed - 1)\r\n          displayedPages.push(\"...\");\r\n        if (totalPages > 1) displayedPages.push(totalPages);\r\n      }\r\n      displayedPages = [...new Set(displayedPages)];\r\n      for (let i = displayedPages.length - 2; i >= 1; i--) {\r\n        if (\r\n          displayedPages[i] === \"...\" &&\r\n          displayedPages[i - 1] + 1 === displayedPages[i + 1]\r\n        ) {\r\n          displayedPages.splice(i, 1);\r\n        }\r\n      }\r\n\r\n      displayedPages.forEach((pageNum) => {\r\n        if (pageNum === \"...\") {\r\n          const ellipsisSpan = document.createElement(\"span\");\r\n          ellipsisSpan.innerHTML = \"&hellip;\";\r\n          ellipsisSpan.className =\r\n            \"relative inline-flex items-center text-sm font-medium pagination-btn-base px-4 py-2\";\r\n          buttonsInnerDiv.appendChild(ellipsisSpan);\r\n        } else {\r\n          buttonsInnerDiv.appendChild(\r\n            createButton(\r\n              String(pageNum),\r\n              pageNum,\r\n              false,\r\n              true,\r\n              pageNum === currentPage,\r\n            ),\r\n          );\r\n        }\r\n      });\r\n\r\n      const nextButton = createButton(\r\n        '<i class=\"fas fa-chevron-right\"></i>',\r\n        currentPage + 1,\r\n        true,\r\n        currentPage < totalPages,\r\n      );\r\n      nextButton.classList.add(\"rounded-r-md\");\r\n      buttonsInnerDiv.appendChild(nextButton);\r\n\r\n      buttonsOuterDiv.appendChild(buttonsInnerDiv);\r\n      nav.appendChild(buttonsOuterDiv);\r\n      container.appendChild(nav);\r\n\r\n      if (currentPage > 1 && typeof container.scrollIntoView === \"function\") {\r\n        setTimeout(() => {\r\n          if (\r\n            document.body.contains(container) &&\r\n            container.offsetParent !== null\r\n          ) {\r\n            container.scrollIntoView({ behavior: \"auto\", block: \"nearest\" });\r\n          }\r\n        }, 100);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Initializes the debounced resize handler for pagination.\r\n     */\r\n    initializeResizeHandler: function () {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        !CPManager.ui.resizeListenerAttached\r\n      ) {\r\n        let resizeTimeout;\r\n        const handleDebouncedResize = () => {\r\n          let activeTabPaneId = null;\r\n          if (CPManager.elements && CPManager.elements.tabPanes) {\r\n            for (const tabKey in CPManager.elements.tabPanes) {\r\n              const pane = CPManager.elements.tabPanes[tabKey];\r\n              if (\r\n                pane &&\r\n                pane.classList.contains(\"active\") &&\r\n                !pane.classList.contains(\"hidden\")\r\n              ) {\r\n                activeTabPaneId = pane.id;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (activeTabPaneId) {\r\n            let paginationContainerId;\r\n            if (activeTabPaneId.includes(\"sessions\"))\r\n              paginationContainerId = \"session-pagination\";\r\n            else if (activeTabPaneId.includes(\"vouchers\"))\r\n              paginationContainerId = \"voucher-pagination\";\r\n            else if (activeTabPaneId.includes(\"info\"))\r\n              paginationContainerId = \"zone-pagination\";\r\n\r\n            if (\r\n              paginationContainerId &&\r\n              CPManager.ui.paginationStates[paginationContainerId]\r\n            ) {\r\n              const args = CPManager.ui.paginationStates[paginationContainerId];\r\n              CPManager.ui.renderPaginationControls(\r\n                args.container,\r\n                args.currentPage,\r\n                args.totalItems,\r\n                args.itemsPerPage,\r\n                args.onPageChangeCallback,\r\n              );\r\n            }\r\n          }\r\n        };\r\n\r\n        window.addEventListener(\"resize\", () => {\r\n          clearTimeout(resizeTimeout);\r\n          resizeTimeout = setTimeout(handleDebouncedResize, 250);\r\n        });\r\n        CPManager.ui.resizeListenerAttached = true;\r\n      }\r\n    },\r\n  };\r\n})(CPManager);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/chunks/\" + chunkId + \".\" + {\"354\":\"07739e33ca4d57a1527c\",\"418\":\"888ff266ade1890514e5\",\"661\":\"adcbd007cb0a19b0e935\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcpmanager\"] = self[\"webpackChunkcpmanager\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [399], () => (__webpack_require__(6511)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","window","CPManager","config","baseUrl","placeholderValue","inMemoryCacheTTLMinutes","itemsPerPage","predefinedColors","authViaMapping","Voucher","voucherStateMapping","unused","valid","expired","zoneFieldMappings","enabled","zoneid","interfaces","disableRules","authservers","alwaysSendAccountingReqs","authEnforceGroup","idletimeout","hardtimeout","concurrentlogins","certificate","servername","allowedAddresses","allowedMACAddresses","extendedPreAuthData","template","description","uuid","localStorageKeys","theme","activeTab","apiKey","apiSecret","apiBaseUrl","sessionZoneFilter","selectedVoucherProvider","voucherGroupFilterPrefix","signInNotificationsEnabled","state","currentApiKey","currentApiSecret","confirmCallback","zoneColors","authViaColors","zoneColorIndex","authViaColorIndex","Math","floor","length","sessions","all","lastFetched","managerDetails","currentPage","vouchers","current","lastGenerated","cachedProviders","lastFetchedProviders","cachedGroups","cachedGroupsTimestamps","cachedData","zones","allConfigured","originalFullDataForEdit","customTemplates","customTemplatesLastFetched","dashboard","chartInstance","originalUploadBytes","originalDownloadBytes","originalTotalBytes","apiDataCache","sessionsLastFetched","voucherStats","voucherStatsLastFetched","notifications","previousSessionIds","Set","isFirstPoll","sessionPollIntervalId","POLLING_INTERVAL","POLLING_INTERVAL_HIDDEN_TAB","consecutivePollErrors","MAX_POLL_ERRORS_BEFORE_DISABLE","utils","getZoneColor","zoneId","getAuthViaColor","authMethod","formatBytes","bytes","decimals","isNaN","dm","i","log","parseFloat","pow","toFixed","formatAuthVia","authVia","formatVoucherTimestamp","timestamp","Date","toLocaleString","e","console","error","formatDuration","totalValue","unit","totalSeconds","parseInt","days","hours","minutes","seconds","parts","push","join","formatOpnsenseSelectable","valueObject","String","selectedItems","key","Object","prototype","hasOwnProperty","call","option","selected","value","keys","getZoneDescription","zone","find","z","getMacAddressType","macAddress","match","test","firstOctetHex","substring","firstOctetInt","selectedSessions","currentlyVisibleSessions","fetchManagerSessionStatus","async","response","fetch","responseText","text","ok","warn","status","statusText","data","JSON","parse","sessionId","clientState","ipAddress","elements","tabPanes","classList","contains","applySessionFilters","message","loadSessions","forceRefresh","sessionCardContainer","this","clear","fetchAllZoneData","populateSessionZoneFilter","now","ui","showSkeletonLoaders","updateSelectAllUI","api","callApi","Array","isArray","rows","showNoDataMessage","sessionZoneFilterSelect","currentVal","localStorage","getItem","innerHTML","forEach","document","createElement","textContent","appendChild","searchTerm","sessionSearchInput","toLowerCase","selectedZoneId","setItem","filteredSessions","filter","s","includes","userName","renderSessions","selectAllContainer","sessionSelectAllContainer","clearContainer","add","remove","page","startIndex","endIndex","slice","session","zoneDesc","zoneTagColor","readableAuthVia","authenticated_via","authViaTagColor","macAddressType","macTypeTagHtml","macTypeTagColor","macTypeReadable","charAt","toUpperCase","isManagerCurrentDeviceSession","isChecked","has","card","className","setAttribute","managerIconHtml","checkboxHTML","tagsHTML","cardSummaryId","cardDetailsId","startTime","last_accessed","undefined","packets_in","packets_out","bytes_in","bytes_out","acc_session_timeout","renderPaginationControls","sessionPaginationContainer","newPage","updateDisconnectSelectedButton","button","disconnectSelectedSessionsBtn","selectedCount","size","disabled","sessionSelectAllCheckbox","sessionSelectedCountText","visibleSessions","checked","indeterminate","allVisibleSelected","every","handleSelectAll","delete","handleDisconnectSelectedSessions","selectedSessionIds","from","showToast","sessionsToDisconnect","isMySessionSelected","title","showConfirmationModal","successCount","failureCount","disconnectPromises","map","then","result","terminateCause","catch","Promise","summaryMessage","toastType","initializeSessionEventListeners","addEventListener","checkbox","target","closest","dataset","toggleCardDetails","findMySessionBtn","tabs","setActiveTab","setTimeout","highlightedCard","querySelector","scrollIntoView","behavior","block","click","fetchCustomTemplates","loadZoneInfo","forceRefreshDetails","zoneListContainer","querySelectorAll","allZones","zoneSummary","zoneCard","statusTag","initialZoneid","zonePaginationContainer","handleZoneCardClick","detailsContainer","zoneDetailsResponse","detailsHtml","createInfoRowDiv","label","trim","zoneData","entries","readableKey","replace","displayValue","selectedTemplateIdentifier","templateKey","templateInfo","t","name","values","some","v_obj","fetchAndOpenEditZoneModal","editZoneModal","populateEditZoneModal","submitEditZoneBtn","cancelEditZoneBtn","zoneEditDescriptionInput","focus","requiredElements","elId","formatForTextarea","fieldValue","item","selectedValues","editZoneUuidInput","editZoneModalTitleName","isEnabled","zoneEditEnabledCheckbox","zoneEditEnabledText","zoneEditAllowedAddressesTextarea","zoneEditAllowedMACAddressesTextarea","zoneEditHardTimeoutInput","zoneEditIdleTimeoutInput","concurrentLoginsAllowed","zoneEditConcurrentLoginsCheckbox","zoneEditConcurrentLoginsText","templateSelect","zoneEditTemplateSelect","selectedTemplateIdentifierFromZoneData","authServersSelect","zoneEditAuthServersSelect","serverName","serverDetails","saveZoneSettings","selectedAuthServers","selectedOptions","opt","zoneSettingsToUpdate","finalApiPayload","hideModal","reconfigResult","stringify","errorMessage","validations","initializeZoneEventListeners","editButton","stopPropagation","detailsContent","summaryElement","listenerAttached","tabId","forceRefreshData","mainTabs","btn","tab","paneKey","removeAttribute","loadDashboardData","loadVoucherProviders","initializeTabs","tabButton","preventDefault","requestNotificationPermission","Notification","requestPermission","startSessionPolling","updateNotificationToggleState","stopSessionPolling","checkForNewSessionsAndNotify","permission","getElementById","errorState","currentSessionIds","newSessions","body","navigator","serviceWorker","controller","postMessage","type","payload","icon","id","currentInterval","hidden","finally","setInterval","clearInterval","isErrorState","toggleButton","handleVisibilityChange","initializeNotifications","storedPreference","permissionGranted","endpoint","method","Error","url","headers","Headers","append","btoa","options","errorData","parsedError","detail","jsonParseError","info","jsonData","fetchOrProcessError","startsWith","userMessage","location","origin","selectedVouchers","currentlyVisibleVouchers","displayProviderZoneLinkage","providerZoneLinkageDetails","providers","configuredVoucherProviders","providerToZonesMap","authServersField","split","Boolean","formatted","zoneName","detailError","providersActuallyUsedByZones","providerName","listHtml","zonesList","zn","initializeProviderZoneLinkageCard","providerZoneLinkageCard","voucherProviderSelect","populateVoucherProviderSelect","handleProviderSelection","voucherGroupSelect","voucherCardContainer","voucherSearchInput","voucherStateFilterSelect","disableVoucherActionButtons","updateVoidSelectedButton","savedProvider","providerToSelect","provider","providerId","forceRefreshGroups","loadVoucherGroups","removeItem","cacheKey","populateVoucherGroupSelect","groups","groupFilterKey","group","loadVouchersForGroup","renderVouchers","groupName","isCacheValid","applyVoucherFiltersAndRender","selectedState","filteredVouchers","v","username","vouchersToRender","container","voucherSelectAllContainer","voucher","stateTagColor","stateText","isExpired","validity","starttime","endtime","expirytime","voucherPaginationContainer","voidSelectedVouchersBtn","providerSelected","groupSelected","voucherSelectAllCheckbox","voucherSelectedCountText","eligibleVouchers","allEligibleVisibleSelected","handleVoidSelectedVouchers","confirmationMsg","voidPromises","voucherCode","openGenerateVoucherModal","generateVoucherModal","voucherGroupNameInput","voucherCountSelect","voucherCountCustom","voucherLifetimeSelect","voucherLifetimeCustom","voucherUsageSelect","voucherUsageCustom","cardOutputRadio","handleSubmitGenerateVoucher","submitGenerateVoucherBtn","selectedProvider","lifetimeInSeconds","usageInSeconds","count","customMinutes","customHours","selectedUsageHours","defaultGroupName","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","groupname","vouchergroup","outputFormat","doc","jsPDF","orientation","format","generateVouchersAsCardPDF","generateVouchersAsTablePDF","addPage","toISOString","save","pageHeight","internal","pageSize","height","pageWidth","width","voucherWidth","voucherHeight","currentY","setFontSize","setFont","align","index","voucherIndexOnPage","vouchersPerRow","colIndex","rowIndex","voucherAbsX","voucherAbsY","setDrawColor","roundedRect","setTextColor","detailLineY","password","tableData","autoTable","startY","head","headStyles","fillColor","textColor","styles","fontSize","cellPadding","valign","halign","columnStyles","cellWidth","didDrawPage","str","getNumberOfPages","settings","margin","right","handleDropExpiredVouchers","selectedGroup","handleDropVoucherGroup","g","initializeVoucherEventListeners","applyFilters","voucherUsername","createVouchersBtn","dropExpiredVouchersBtn","dropVoucherGroupBtn","cancelGenerateVoucherBtn","toggle","dashboardStatsContainer","dataUsageCanvas","donutTotalData","uploadLegendValue","downloadLegendValue","uploadPercentageSpan","downloadPercentageSpan","sessionDataRows","totalZonesCount","cacheTTL","isSessionCacheValid","isVoucherStatsCacheValid","unusedVouchers","destroy","sessionData","totalVouchers","activeVouchers","expiredVouchers","totalProviders","voucherGroups","vouchersInGroup","voucherError","activeSessionCount","totalClientUploadBytes","totalClientDownloadBytes","statsHtml","currentTotalData","storeOriginalChartData","chartDataValues","rootStyles","getComputedStyle","documentElement","getChartCompatibleColor","variableName","alpha","commaValue","getPropertyValue","chartPrimaryColor","chartSuccessColor","chartPrimaryHoverColor","chartSuccessHoverColor","tooltipBgColor","tooltipTextColor","chartBorderColor","datasets","plugins","tooltip","backgroundColor","titleColor","bodyColor","borderColor","update","ctx","getContext","Chart","labels","hoverBackgroundColor","borderWidth","hoverBorderWidth","hoverOffset","responsive","maintainAspectRatio","cutout","animation","animateScale","animateRotate","duration","layout","padding","legend","display","displayColors","callbacks","context","parsed","totalForPercentage","uploadBytes","downloadBytes","totalBytes","handleThemeChange","initializeDashboardEventListeners","legendItems","segmentValue","segmentColorClass","segmentPercentageColorClass","currentTotalForPercentage","segmentPercentage","totalPercentageColorClass","library","faShieldAlt","faSun","faMoon","faMobileAlt","faBellSlash","faBell","faExclamationTriangle","faInfoCircle","faTimesCircle","faTrashAlt","faPlusCircle","faEdit","faSpinner","faChevronDown","faChevronLeft","faChevronRight","faTachometerAlt","faUsers","faTicketAlt","faLayerGroup","faStreetView","faUsersSlash","faFolderOpen","faBiohazard","faRotate","faUserShield","app","applyTheme","actualTheme","matchMedia","matches","themeToggleBtn","toggleTheme","currentThemeSetting","newThemeSetting","loadTheme","savedTheme","setCredentialEntryUIMode","isEntryMode","navElement","mainTabsContainerElement","tabContentElement","footerElement","configInputSection","mainContentScrollAreaElement","elementsToToggle","el","saveApiCredsBtn","loadAppConfiguration","appConfigData","json","apiStatusFooterText","registerServiceWorker","refreshing","register","reg","scope","err","reload","loadApiCredentials","configApiKeyInput","configApiSecretInput","configApiBaseUrlInput","saveApiCredentials","URL","initializeAppLogic","currentActiveTabId","clearApiCredentials","clearApiCredsBtn","checkApiStatusAndConfig","initialCheckData","handleApplyCpConfiguration","applyCpConfigBtn","originalButtonText","errorDetail","initializeAllEventListeners","apiStatusFooter","confirmationModal","confirmCancelBtn","confirmProceedBtn","specificHandlerAttached","modal","notificationsToggleBtn","longPressTimer","longPressFired","LONG_PRESS_DURATION","handleShortClick","startPress","event","getAttribute","handleSendTestNotification","endPress","clearTimeout","cancelPress","passive","dom","watch","initialTab","hashTab","hash","history","replaceState","pathname","search","initializeResizeHandler","dashboardPane","pane","initializeApp","confirmationTitle","confirmationMessage","toastNotification","toastMessage","paginationStates","resizeListenerAttached","alert","timer","callback","confirm","modalElement","clickedCard","isCurrentlyExpanded","activePane","otherDetails","otherSummary","isNowExpanded","summary","generate","cleanup","deleteGroup","skeletonHtml","paginationContainerId","skeletons","paginationEl","iconClass","totalItems","onPageChangeCallback","totalPages","ceil","nav","summaryDiv","startItem","endItem","min","buttonsOuterDiv","buttonsInnerDiv","createButton","content","pageNum","isIcon","isCurrent","sizeClasses","colorClasses","prevButton","pageRangeDisplayed","innerWidth","displayedPages","startPage","max","endPage","splice","ellipsisSpan","nextButton","offsetParent","resizeTimeout","handleDebouncedResize","activeTabPaneId","tabKey","args","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","r","getPrototypeOf","obj","mode","__esModule","ns","create","def","indexOf","getOwnPropertyNames","d","definition","o","defineProperty","enumerable","get","f","chunkId","reduce","promises","u","miniCssF","globalThis","Function","prop","l","done","script","needAttach","scripts","getElementsByTagName","charset","timeout","nc","src","onScriptComplete","prev","onerror","onload","doneFns","parentNode","removeChild","bind","Symbol","toStringTag","scriptUrl","importScripts","currentScript","tagName","p","installedChunks","installedChunkData","promise","resolve","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}