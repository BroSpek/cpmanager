(self.webpackChunkcpmanager=self.webpackChunkcpmanager||[]).push([[415],{3415:()=>{var e;(e=CPManager).zones={fetchAllZoneData:async function(t=!1){if(!(!t&&e.state.zones.allConfigured.length>0&&void 0!==e.state.zones.allConfigured[0].description&&Date.now()-e.state.zones.lastFetched<60*e.config.inMemoryCacheTTLMinutes*1e3))try{const t=await e.api.callApi("/settings/search_zones");t&&Array.isArray(t.rows)?(e.state.zones.allConfigured=t.rows,e.state.zones.lastFetched=Date.now()):(e.state.zones.allConfigured=[],console.warn("No zones found or unexpected data format from /settings/search_zones.",t))}catch(t){console.error("Failed to fetch all zone data for descriptions:",t.message),e.state.zones.allConfigured=[]}},fetchCustomTemplates:async function(t=!1){if(!(!t&&e.state.zones.customTemplates.length>0&&Date.now()-e.state.zones.customTemplatesLastFetched<60*e.config.inMemoryCacheTTLMinutes*1e3))try{const t=await e.api.callApi("/service/search_templates");t&&Array.isArray(t.rows)?(e.state.zones.customTemplates=t.rows,e.state.zones.customTemplatesLastFetched=Date.now()):(e.state.zones.customTemplates=[],console.warn("No custom templates found or unexpected data format.",t))}catch(t){console.error("Failed to fetch custom templates:",t.message),e.state.zones.customTemplates=[]}},loadZoneInfo:async function(t=!1){if(e.elements.zoneListContainer){e.state.zones.currentPage=1,(t||0===e.elements.zoneListContainer.querySelectorAll(".zone-info-card").length)&&e.ui.showSkeletonLoaders(e.elements.zoneListContainer,e.config.itemsPerPage,'<div class="skeleton-card"></div>',"zone-pagination");try{if(await e.zones.fetchAllZoneData(t),await e.zones.fetchCustomTemplates(t),e.ui.clearContainer(e.elements.zoneListContainer,"zone-pagination"),!Array.isArray(e.state.zones.allConfigured)||0===e.state.zones.allConfigured.length)return void e.ui.showNoDataMessage(e.elements.zoneListContainer,"No captive portal zones configured on OPNsense.","fas fa-folder-open","zone-pagination");const n=e.state.zones.allConfigured,o=e.state.zones.currentPage,s=e.config.itemsPerPage,a=(o-1)*s,i=a+s;n.slice(a,i).forEach((t=>{const n=document.createElement("div");n.className="zone-info-card cp-card",n.setAttribute("role","listitem"),n.setAttribute("aria-label",`Zone: ${t.description||`Zone ID ${t.zoneid}`}`);const o="1"===t.enabled?"Enabled":"Disabled",s=`<span class="info-tag ${"1"===t.enabled?"bg-success":"bg-danger"}" title="Status: ${o}">${o}</span>`,a=`zone-summary-${t.uuid}`,i=`zone-details-${t.uuid}`;n.innerHTML=`\n            <div class="flex justify-end items-center mb-1">\n                <div class="flex items-center gap-1">\n                    ${s}\n                </div>\n            </div>\n            <div id="${a}" class="zone-summary cursor-pointer pb-1" role="button" tabindex="0" aria-expanded="false" aria-controls="${i}">\n              <div class="card-detail-row"><span class="card-label">Name</span><span class="card-value">${t.description||`Unnamed Zone (ID: ${t.zoneid})`}</span></div>\n              <div class="card-detail-row"><span class="card-label">Zone ID</span><span class="card-value">${t.zoneid}</span></div>\n              <div class="card-detail-row"><span class="card-label">Short UUID</span><span class="card-value">${t.uuid?`${t.uuid.substring(0,8)}...`:"Not Available"}</span></div>\n            </div>\n            <div class="card-details-content max-h-0 overflow-hidden transition-all duration-300 ease-out text-sm space-y-1" id="${i}" aria-hidden="true">Loading details...</div>`,n.dataset.uuid=t.uuid,n.dataset.initialZoneid=t.zoneid,e.elements.zoneListContainer.appendChild(n)})),e.ui.renderPaginationControls(e.elements.zonePaginationContainer,e.state.zones.currentPage,n.length,e.config.itemsPerPage,(t=>{e.state.zones.currentPage=t,e.zones.loadZoneInfo()}))}catch(t){console.error("Error in loadZoneInfo:",t),e.ui.showNoDataMessage(e.elements.zoneListContainer,"Error loading zone information.","fas fa-exclamation-triangle","zone-pagination")}}},handleZoneCardClick:async function(t,n){if(e.ui.toggleCardDetails(t),n.classList.contains("expanded")&&(n.innerHTML.includes("Loading details...")||n.innerHTML.includes("Error loading details"))){const o=t.dataset.uuid;try{const t=await e.api.callApi(`/settings/get_zone/${o}`);let s="";const a=(t,n)=>`<div class="card-detail-row"><span class="card-label">${t}</span> <span class="card-value-secondary">${null==n||""===String(n).trim()?e.config.placeholderValue:String(n)}</span></div>`;if(s+=a("UUID",o),t&&t.zone){const n=t.zone;for(const[t,o]of Object.entries(n)){if("uuid"===t||"description"===t||"enabled"===t||"zoneid"===t)continue;const n=e.config.zoneFieldMappings[t]||t.charAt(0).toUpperCase()+t.slice(1).replace(/([A-Z])/g," $1");let i;if("idletimeout"===t||"hardtimeout"===t)i=o?e.utils.formatDuration(parseInt(o),"minutes"):e.config.placeholderValue;else if("template"===t){let t="";if("object"==typeof o&&null!==o)for(const e in o)if(o[e]&&(1===o[e].selected||"1"===o[e].selected)){t=e;break}const n=e.state.zones.customTemplates.find((e=>e.uuid===t));i=n?n.name:t?`UUID: ${t.substring(0,8)}...`:"Default"}else i=["disableRules","alwaysSendAccountingReqs","concurrentlogins","extendedPreAuthData"].includes(t)?"1"===String(o)?"Yes":"0"===String(o)?"No":String(o):"object"==typeof o&&null!==o&&Object.values(o).some((e=>"object"==typeof e&&null!==e&&Object.prototype.hasOwnProperty.call(e,"selected")))?e.utils.formatOpnsenseSelectable(o):Array.isArray(o)?o.length>0?o.join(", "):e.config.placeholderValue:String(o);"string"==typeof i&&i.length>150&&(i=i.substring(0,150)+"..."),s+=a(n,i||e.config.placeholderValue)}}else s+="<div>No further detailed properties found or unexpected response format.</div>";s+=`\n            <div class="mt-3 grid grid-cols-2 gap-4">\n              <button class="btn btn-base btn-primary" data-action="edit-zone" data-uuid="${o}">\n                <i class="fas fa-edit mr-1"></i> Edit Settings\n              </button>\n            </div>\n          `,n.innerHTML=s}catch(e){console.error(`Error loading details for zone ${o}:`,e),n.innerHTML='<p class="text-danger">Error loading details. Check console.</p>'}}},fetchAndOpenEditZoneModal:async function(t){if(e.elements.editZoneModal)try{await e.zones.fetchCustomTemplates();const n=await e.api.callApi(`/settings/get_zone/${t}`);n&&n.zone?(e.state.zones.originalFullDataForEdit=n,e.zones.populateEditZoneModal(n.zone,t),e.elements.submitEditZoneBtn?e.elements.submitEditZoneBtn.disabled=!1:console.error("CPManager.elements.submitEditZoneBtn not found when trying to enable it in fetchAndOpenEditZoneModal."),e.elements.cancelEditZoneBtn&&(e.elements.cancelEditZoneBtn.disabled=!1),e.elements.editZoneModal.classList.remove("hidden"),e.elements.editZoneModal.classList.add("flex"),e.elements.zoneEditDescriptionInput&&e.elements.zoneEditDescriptionInput.focus()):(e.ui.showToast(`Could not load details for zone ${t}. API response issue.`,"error"),e.state.zones.originalFullDataForEdit=null)}catch(t){e.state.zones.originalFullDataForEdit=null,console.error("Error in fetchAndOpenEditZoneModal:",t)}else console.error("Edit Zone Modal element (CPManager.elements.editZoneModal) not found.")},populateEditZoneModal:function(t,n){const o=["editZoneUuidInput","editZoneModalTitleName","zoneEditDescriptionInput","zoneEditEnabledCheckbox","zoneEditEnabledText","zoneEditAllowedAddressesTextarea","zoneEditAllowedMACAddressesTextarea","zoneEditHardTimeoutInput","zoneEditIdleTimeoutInput","zoneEditConcurrentLoginsCheckbox","zoneEditConcurrentLoginsText","zoneEditTemplateSelect","zoneEditAuthServersSelect"];for(const t of o)if(!e.elements[t])return console.error(`Edit Zone Modal element missing: ${t}`),void e.ui.showToast("Cannot populate edit zone dialog: form elements missing.","error");const s=e=>{if("object"==typeof e&&null!==e&&!Array.isArray(e)){if(Object.values(e).some((e=>"object"==typeof e&&null!==e&&Object.prototype.hasOwnProperty.call(e,"selected")&&Object.prototype.hasOwnProperty.call(e,"value")))){const t=[];for(const n in e)"object"==typeof e[n]&&null!==e[n]&&Object.prototype.hasOwnProperty.call(e[n],"selected")&&Object.prototype.hasOwnProperty.call(e[n],"value")&&(1!==e[n].selected&&"1"!==e[n].selected&&!0!==e[n].selected||t.push(e[n].value));return t.join(",")}return""}return"string"==typeof e?e:""};e.elements.editZoneUuidInput.value=n,e.elements.editZoneModalTitleName.textContent=t.description||`Zone ${t.zoneid||n.substring(0,8)}`,e.elements.zoneEditDescriptionInput.value=t.description||"";const a="1"===t.enabled;e.elements.zoneEditEnabledCheckbox.checked=a,e.elements.zoneEditEnabledText.textContent=a?"Enabled":"Disabled",e.elements.zoneEditAllowedAddressesTextarea.value=s(t.allowedAddresses),e.elements.zoneEditAllowedMACAddressesTextarea.value=s(t.allowedMACAddresses),e.elements.zoneEditHardTimeoutInput.value=t.hardtimeout||"",e.elements.zoneEditIdleTimeoutInput.value=t.idletimeout||"";const i="1"===t.concurrentlogins;e.elements.zoneEditConcurrentLoginsCheckbox.checked=i,e.elements.zoneEditConcurrentLoginsText.textContent=i?"Allowed":"Disallowed";const l=e.elements.zoneEditTemplateSelect;l.innerHTML='<option value="">-- Default --</option>',e.state.zones.customTemplates.forEach((e=>{const t=document.createElement("option");t.value=e.uuid,t.textContent=e.name,l.appendChild(t)}));let r="";if("object"==typeof t.template&&null!==t.template){for(const e in t.template)if(t.template[e]&&(1===t.template[e].selected||"1"===t.template[e].selected)){r=e;break}}else"string"==typeof t.template&&t.template&&(r=t.template);r&&e.state.zones.customTemplates.some((e=>e.uuid===r))?l.value=r:l.value="";const d=e.elements.zoneEditAuthServersSelect;if(d.innerHTML="",t.authservers&&"object"==typeof t.authservers)for(const e in t.authservers)if(Object.prototype.hasOwnProperty.call(t.authservers,e)){const n=t.authservers[e],o=document.createElement("option");o.value=n.value,o.textContent=n.value,1!==n.selected&&"1"!==n.selected||(o.selected=!0),d.appendChild(o)}},saveZoneSettings:async function(){if(!e.elements.editZoneUuidInput||!e.elements.submitEditZoneBtn)return e.ui.showToast("Zone UUID is missing or save button not found. Cannot save.","error"),void console.error("Missing UUID input or submit button in saveZoneSettings.");const t=e.elements.editZoneUuidInput.value,n=Array.from(e.elements.zoneEditAuthServersSelect.selectedOptions).map((e=>e.value)),o={description:e.elements.zoneEditDescriptionInput.value.trim(),enabled:e.elements.zoneEditEnabledCheckbox.checked?"1":"0",allowedAddresses:e.elements.zoneEditAllowedAddressesTextarea.value.replace(/\s+/g,""),allowedMACAddresses:e.elements.zoneEditAllowedMACAddressesTextarea.value.replace(/\s+/g,"").toLowerCase(),hardtimeout:e.elements.zoneEditHardTimeoutInput.value.trim()||"0",idletimeout:e.elements.zoneEditIdleTimeoutInput.value.trim()||"0",concurrentlogins:e.elements.zoneEditConcurrentLoginsCheckbox.checked?"1":"0",template:e.elements.zoneEditTemplateSelect.value||"",authservers:n.join(",")},s={zone:o};e.elements.submitEditZoneBtn.disabled=!0,e.elements.submitEditZoneBtn.innerHTML='<i class="fas fa-spinner fa-spin mr-2"></i>Saving...';try{const n=await e.api.callApi(`/settings/set_zone/${t}`,"POST",s);if(n&&"saved"===n.result){e.ui.showToast(`Zone settings updated for "${o.description||t.substring(0,8)}".`,"success"),e.ui.hideModal(e.elements.editZoneModal),e.state.zones.originalFullDataForEdit=null,e.state.zones.currentPage=1,await e.zones.loadZoneInfo(!0),e.ui.showToast("Applying changes by reconfiguring service...","info",7e3);const n=await e.api.callApi("/service/reconfigure","POST",{});n&&("ok"===n.status||n.message&&n.message.toLowerCase().includes("ok"))?e.ui.showToast("Captive portal service reconfigured successfully.","success"):e.ui.showToast(`Service reconfigure status: ${n?n.status||n.message||JSON.stringify(n):"Unknown"}. Manual check may be needed.`,"warning",1e4)}else{let t=`Failed to save zone settings: ${n?.message||n?.result||"Unknown API error"}`;if(n&&n.validations)for(const e in n.validations)t+=`\n- ${e}: ${n.validations[e]}`;e.ui.showToast(t,"error",1e4)}}catch(e){console.error("Error during saveZoneSettings:",e.message)}finally{e.elements.submitEditZoneBtn?(e.elements.submitEditZoneBtn.disabled=!1,e.elements.submitEditZoneBtn.innerHTML="Save Changes"):console.error("submitEditZoneBtn is null in finally block of saveZoneSettings. Cannot re-enable.")}},initializeZoneEventListeners:function(){e.elements.zoneListContainer&&e.elements.zoneListContainer.addEventListener("click",(async t=>{const n=t.target.closest('[data-action="edit-zone"]');if(n){t.stopPropagation();const o=n.dataset.uuid;return void(o?e.zones.fetchAndOpenEditZoneModal(o):console.error("Edit button clicked but no UUID found on dataset."))}const o=t.target.closest(".zone-info-card");if(o){const e=o.querySelector(".card-details-content"),t=o.querySelector(".zone-summary");this.handleZoneCardClick(o,e,t)}})),e.elements.submitEditZoneBtn?e.elements.submitEditZoneBtn.dataset.listenerAttached||(e.elements.submitEditZoneBtn.addEventListener("click",(function(){console.log("Save Changes button clicked (via initialized listener)."),e.zones.saveZoneSettings()})),e.elements.submitEditZoneBtn.dataset.listenerAttached="true"):console.error("Submit Edit Zone Button (CPManager.elements.submitEditZoneBtn) not found during initializeZoneEventListeners."),e.elements.cancelEditZoneBtn?e.elements.cancelEditZoneBtn.dataset.listenerAttached||(e.elements.cancelEditZoneBtn.addEventListener("click",(()=>{e.ui.hideModal(e.elements.editZoneModal),e.state.zones.originalFullDataForEdit=null})),e.elements.cancelEditZoneBtn.dataset.listenerAttached="true"):console.error("Cancel Edit Zone Button (CPManager.elements.cancelEditZoneBtn) not found during initializeZoneEventListeners."),e.elements.zoneEditEnabledCheckbox&&e.elements.zoneEditEnabledText&&(e.elements.zoneEditEnabledCheckbox.dataset.listenerAttached||(e.elements.zoneEditEnabledCheckbox.addEventListener("change",(function(){e.elements.zoneEditEnabledText.textContent=this.checked?"Enabled":"Disabled"})),e.elements.zoneEditEnabledCheckbox.dataset.listenerAttached="true")),e.elements.zoneEditConcurrentLoginsCheckbox&&e.elements.zoneEditConcurrentLoginsText&&(e.elements.zoneEditConcurrentLoginsCheckbox.dataset.listenerAttached||(e.elements.zoneEditConcurrentLoginsCheckbox.addEventListener("change",(function(){e.elements.zoneEditConcurrentLoginsText.textContent=this.checked?"Allowed":"Disallowed"})),e.elements.zoneEditConcurrentLoginsCheckbox.dataset.listenerAttached="true"))}}}}]);
//# sourceMappingURL=415.5a7047caf5a25944d493.js.map