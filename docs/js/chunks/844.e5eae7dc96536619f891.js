(self.webpackChunkcpmanager=self.webpackChunkcpmanager||[]).push([[844],{1844:(e,a,t)=>{var s;(s=CPManager).dashboard={fetchAllZoneDetails:async function(){try{const e=await s.api.callApi("/settings/search_zones","POST",{});if(!e||!Array.isArray(e.rows))return console.error("Could not fetch zone list."),[];const a=e.rows.map((e=>s.api.callApi(`/settings/get_zone/${e.uuid}`)));return(await Promise.all(a)).map(((a,t)=>a&&a.zone?{...a.zone,uuid:e.rows[t].uuid}:null)).filter((e=>null!==e))}catch(e){return console.error("Error fetching all zone details:",e),s.ui.showToast("Failed to load zone details for dashboard.","danger"),[]}},loadDashboardData:async function(e=!1){const a=document.getElementById("dashboard-right-column"),t=document.getElementById("dashboard-bottom-row");if(!a||!t||!s.elements.dataUsageCanvas)return console.error("One or more dashboard elements are missing from the DOM."),void(a&&(a.innerHTML='<p class="text-danger col-span-full text-center">Error: Dashboard UI elements missing.</p>'));let d=null,o=null,n=[];const r=Date.now(),i=60*s.config.inMemoryCacheTTLMinutes*1e3,l=s.state.dashboard.apiDataCache.sessions&&r-s.state.dashboard.apiDataCache.sessionsLastFetched<i,c=s.state.dashboard.apiDataCache.voucherStats&&r-s.state.dashboard.apiDataCache.voucherStatsLastFetched<i,h=s.state.dashboard.apiDataCache.zoneDetails&&r-s.state.dashboard.apiDataCache.zoneDetailsLastFetched<i;!e&&l&&c&&h?(console.log("Using cached dashboard API data."),d=s.state.dashboard.apiDataCache.sessions,o=s.state.dashboard.apiDataCache.voucherStats,n=s.state.dashboard.apiDataCache.zoneDetails):(console.log("Fetching fresh dashboard data or cache expired/forced."),a.innerHTML='<div class="skeleton-card"></div><div class="skeleton-card"></div><div class="skeleton-card"></div>',t.innerHTML='<div class="skeleton-card"></div><div class="skeleton-card"></div>',s.elements.donutTotalData&&(s.elements.donutTotalData.textContent=s.config.placeholderValue),s.elements.uploadLegendValue&&(s.elements.uploadLegendValue.textContent=s.config.placeholderValue),s.elements.downloadLegendValue&&(s.elements.downloadLegendValue.textContent=s.config.placeholderValue),s.state.dashboard.chartInstance&&(s.state.dashboard.chartInstance.destroy(),s.state.dashboard.chartInstance=null));try{if(!d||e||!l){const e=await s.api.callApi("/session/search");d=e&&Array.isArray(e.rows)?e.rows:[],s.state.dashboard.apiDataCache.sessions=d,s.state.dashboard.apiDataCache.sessionsLastFetched=r}if(n.length&&!e&&h||(n=await this.fetchAllZoneDetails(),s.state.dashboard.apiDataCache.zoneDetails=n,s.state.dashboard.apiDataCache.zoneDetailsLastFetched=r),s.state.zones.allConfigured=n,!o||e||!c){let e=0,a=0,t=0,d=0,n=0,i=[];try{const o=await s.api.callApi("/voucher/list_providers");if(o&&Array.isArray(o)&&o.length>0){n=o.length,i=o;for(const n of o){const o=await s.api.callApi(`/voucher/list_voucher_groups/${n}`);if(o&&Array.isArray(o))for(const r of o){const o=await s.api.callApi(`/voucher/list_vouchers/${n}/${r}`);o&&Array.isArray(o)&&(e+=o.length,a+=o.filter((e=>"valid"===e.state)).length,t+=o.filter((e=>"expired"===e.state)).length,d+=o.filter((e=>"unused"===e.state)).length)}}}}catch(e){console.error("Error fetching voucher stats:",e.message),s.ui.showToast("Could not load voucher statistics.","warning")}o={totalVouchers:e,activeVouchers:a,expiredVouchers:t,unusedVouchers:d,totalProviders:n,allVoucherProviderNames:i},s.state.dashboard.apiDataCache.voucherStats=o,s.state.dashboard.apiDataCache.voucherStatsLastFetched=r}const i=d.length,u=n.length,{totalVouchers:b,activeVouchers:v,expiredVouchers:p,unusedVouchers:g,totalProviders:m}=o,y=n.filter((e=>"1"==e.enabled)).length,f=new Set;n&&Array.isArray(n)&&n.forEach((e=>{const a=e.authservers;if(a&&"object"==typeof a)for(const e in a)a[e]&&1===a[e].selected&&f.add(e)}));const C=f.size;let x=0,D=0;d.forEach((e=>{x+=e.bytes_in||0,D+=e.bytes_out||0}));const w=`\n          <div class="db-card" id="dashboard-active-sessions-card" title="Go to Sessions tab" role="button" tabindex="0">\n            <div class="db-card-number">${i}</div>\n            <div class="db-card-label">Active Sessions</div>\n          </div>\n          <div class="db-card" id="dashboard-zones-card" title="Go to Zones tab" role="button" tabindex="0">\n            <div class="db-card-cols-2">\n              <div><div class="db-card-number">${u}</div><div class="db-card-label">Configured Zones</div></div>\n              <div><div class="db-card-number text-success">${y}</div><div class="db-card-label">Active Zones</div></div>\n            </div>\n          </div>\n          <div class="db-card" id="dashboard-providers-card" title="Go to Vouchers tab" role="button" tabindex="0">\n            <div class="db-card-cols-2">\n              <div><div class="db-card-number">${m}</div><div class="db-card-label">Total Providers</div></div>\n              <div><div class="db-card-number text-success">${C}</div><div class="db-card-label">Active Providers</div></div>\n            </div>\n          </div>`;a.innerHTML=w;const T=`\n          <div class="db-card" id="dashboard-vouchers-card" title="Go to Vouchers tab" role="button" tabindex="0">\n            <div class="db-card-cols-2">\n              <div><div class="db-card-number">${b}</div><div class="db-card-label">Total Vouchers</div></div>\n              <div><div class="db-card-number text-success">${v}</div><div class="db-card-label">Active Vouchers</div></div>\n            </div>\n          </div>\n          <div class="db-card" id="dashboard-unused-expired-vouchers-card" title="Go to Vouchers tab" role="button" tabindex="0">\n            <div class="db-card-cols-2">\n              <div><div class="db-card-number text-primary">${g}</div><div class="db-card-label">Unused Vouchers</div></div>\n              <div><div class="db-card-number text-danger">${p}</div><div class="db-card-label">Expired Vouchers</div></div>\n            </div>\n          </div>`;t.innerHTML=T,["dashboard-active-sessions-card","dashboard-zones-card","dashboard-providers-card","dashboard-vouchers-card","dashboard-unused-expired-vouchers-card"].forEach((e=>{const a=document.getElementById(e);a&&a.addEventListener("keydown",(e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),a.click())}))})),document.getElementById("dashboard-active-sessions-card")?.addEventListener("click",(()=>s.tabs.setActiveTab("sessions"))),document.getElementById("dashboard-zones-card")?.addEventListener("click",(()=>s.tabs.setActiveTab("info"))),document.getElementById("dashboard-providers-card")?.addEventListener("click",(()=>s.tabs.setActiveTab("vouchers"))),document.getElementById("dashboard-vouchers-card")?.addEventListener("click",(()=>s.tabs.setActiveTab("vouchers"))),document.getElementById("dashboard-unused-expired-vouchers-card")?.addEventListener("click",(()=>s.tabs.setActiveTab("vouchers")));const L=x+D;!e&&s.state.dashboard.chartInstance&&L===s.state.dashboard.originalTotalBytes||(this.storeOriginalChartData(x,D,L),await this.updateChart(L))}catch(e){console.warn("Could not load dashboard data:",e.message),a.innerHTML='<p class="text-warning col-span-full text-center">Could not load dashboard statistics.</p>',t.innerHTML='<p class="text-warning col-span-full text-center">API connection may be unavailable.</p>'}},updateChart:async function(e){if(!s.elements.dataUsageCanvas)return;const{originalUploadBytes:a,originalDownloadBytes:d}=s.state.dashboard;s.elements.donutTotalData&&(s.elements.donutTotalData.innerHTML=`\n                <span class="font-bold block text-lg">${s.utils.formatBytes(e)}</span>\n                <span class="text-xs text-muted-foreground">(100.0%)</span>`),s.elements.uploadLegendValue&&(s.elements.uploadLegendValue.textContent=s.utils.formatBytes(a)),s.elements.uploadPercentageSpan&&(s.elements.uploadPercentageSpan.textContent=`(${(e>0?a/e*100:0).toFixed(1)}%)`),s.elements.downloadLegendValue&&(s.elements.downloadLegendValue.textContent=s.utils.formatBytes(d)),s.elements.downloadPercentageSpan&&(s.elements.downloadPercentageSpan.textContent=`(${(e>0?d/e*100:0).toFixed(1)}%)`);const o=[a,d],n=getComputedStyle(document.documentElement),r=(e,a=1)=>{const t=n.getPropertyValue(e).trim().replace(/ /g,", ");return a<1?`hsla(${t}, ${a})`:`hsl(${t})`},i={primary:r("--primary",.7),success:r("--success",.7),primaryHover:r("--primary"),successHover:r("--success"),tooltipBg:r("--secondary"),tooltipText:r("--secondary-foreground"),border:r("--card")};if(s.state.dashboard.chartInstance)s.state.dashboard.chartInstance.data.datasets[0].data=o,s.state.dashboard.chartInstance.update();else{const{Chart:e,DoughnutController:a,ArcElement:d,Tooltip:n,Legend:r}=await Promise.all([t.e(552),t.e(447)]).then(t.bind(t,68));e.register(a,d,n,r);const l=s.elements.dataUsageCanvas.getContext("2d");s.state.dashboard.chartInstance=new e(l,{type:"doughnut",data:{labels:["Client Upload","Client Download"],datasets:[{data:o,backgroundColor:[i.primary,i.success],hoverBackgroundColor:[i.primaryHover,i.successHover],borderColor:i.border,borderWidth:2,hoverBorderWidth:3,hoverOffset:8}]},options:{responsive:!0,maintainAspectRatio:!1,cutout:"70%",animation:{animateScale:!0,animateRotate:!0,duration:1e3},layout:{padding:10},plugins:{legend:{display:!1},tooltip:{enabled:!0,backgroundColor:i.tooltipBg,titleColor:i.tooltipText,bodyColor:i.tooltipText,displayColors:!1,callbacks:{label:e=>{let a=e.label||"";if(a&&(a+=": "),null!==e.parsed){a+=s.utils.formatBytes(e.parsed);const t=s.state.dashboard.originalTotalBytes;a+=` (${t>0?(e.parsed/t*100).toFixed(1):0}%)`}return a}}}}}})}},storeOriginalChartData:function(e,a,t){s.state.dashboard.originalUploadBytes=e,s.state.dashboard.originalDownloadBytes=a,s.state.dashboard.originalTotalBytes=t},handleThemeChange:async function(){console.log("Dashboard: Handling theme change for chart update."),s.state.dashboard.chartInstance&&(s.state.dashboard.chartInstance.destroy(),s.state.dashboard.chartInstance=null),await this.loadDashboardData(!0)},initializeDashboardEventListeners:function(){const e=document.querySelectorAll(".legend-item"),a=document.getElementById("donut-total-data");e.length&&a?e.forEach((e=>{e.addEventListener("mouseenter",(()=>{const t=e.textContent.includes("Client Upload"),d=t?s.state.dashboard.originalUploadBytes:s.state.dashboard.originalDownloadBytes,o=t?"text-blue-500":"text-green-500",n=s.state.dashboard.originalTotalBytes,r=n>0?(d/n*100).toFixed(1):0;a.innerHTML=`\n            <span class="font-bold block text-lg ${o}">${s.utils.formatBytes(d)}</span>\n            <span class="text-xs text-muted-foreground">(${r}%)</span>`})),e.addEventListener("mouseleave",(()=>{const e=s.state.dashboard.originalTotalBytes;a.innerHTML=`\n            <span class="font-bold block text-lg">${s.utils.formatBytes(e)}</span>\n            <span class="text-xs text-muted-foreground">(100.0%)</span>`}))})):console.warn("Dashboard legend items or donut total display element not found.")}}}}]);
//# sourceMappingURL=844.e5eae7dc96536619f891.js.map